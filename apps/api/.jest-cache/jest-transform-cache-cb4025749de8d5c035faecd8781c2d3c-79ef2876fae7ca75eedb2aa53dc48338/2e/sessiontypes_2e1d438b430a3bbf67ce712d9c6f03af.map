{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/packages/shared/src/types/session.types.ts","mappings":";;;AAEa,QAAA,WAAW,GAAG;IACzB,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,OAAO;IACd,QAAQ,EAAE,UAAU;IACpB,UAAU,EAAE,YAAY;IACxB,KAAK,EAAE,OAAO;CACN,CAAC;AAIE,QAAA,YAAY,GAAG;IAC1B,SAAS,EAAE,WAAW;IACtB,QAAQ,EAAE,UAAU;IACpB,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,UAAU,EAAE,YAAY;IACxB,UAAU,EAAE,YAAY;CAChB,CAAC","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/packages/shared/src/types/session.types.ts"],"sourcesContent":["import type { BaseEntity } from './common.types';\n\nexport const SessionType = {\n  KEYNOTE: 'keynote',\n  TALK: 'talk',\n  PANEL: 'panel',\n  WORKSHOP: 'workshop',\n  NETWORKING: 'networking',\n  BREAK: 'break',\n} as const;\n\nexport type SessionType = (typeof SessionType)[keyof typeof SessionType];\n\nexport const SessionStage = {\n  PRINCIPAL: 'principal',\n  INOVACAO: 'inovacao',\n  TECH: 'tech',\n  STARTUP: 'startup',\n  WORKSHOP_A: 'workshop_a',\n  WORKSHOP_B: 'workshop_b',\n} as const;\n\nexport type SessionStage = (typeof SessionStage)[keyof typeof SessionStage];\n\nexport interface SessionTranslation {\n  title: string;\n  description: string;\n}\n\nexport interface ISession extends Omit<BaseEntity, '_id'> {\n  _id: string;\n  title: {\n    'pt-BR': string;\n    en: string;\n  };\n  description: {\n    'pt-BR': string;\n    en: string;\n  };\n  type?: SessionType;\n  startTime: Date;\n  endTime: Date;\n  stage: string; // Changed from SessionStage enum to string for flexibility\n  speakerIds: string[];\n  sponsorIds?: string[];\n  tags: string[];\n  capacity?: number;\n  registeredCount?: number;\n  isHighlight: boolean;\n  isVisible: boolean;\n  technicalLevel?: 'beginner' | 'intermediate' | 'advanced';\n  language?: 'pt-BR' | 'en' | 'es';\n  streamUrl?: string;\n  materials?: {\n    title: string;\n    url: string;\n    type: 'pdf' | 'video' | 'link';\n  }[];\n}\n\n// Alias for backwards compatibility\nexport type Session = ISession;\n\n// Response types for API\nexport interface ISessionResponse {\n  success: boolean;\n  data: ISession;\n}\n\nexport interface ISessionListResponse {\n  success: boolean;\n  data: ISession[];\n  metadata?: {\n    total: number;\n    page: number;\n    limit: number;\n    hasNext: boolean;\n    hasPrev: boolean;\n  };\n}\n"],"version":3}