{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/dto/register.dto.ts","mappings":";;;;;;;;;;;;AAAA,qDAQyB;AACzB,yDAAyC;AACzC,6CAAmE;AACnE,yDAAoD;AAEpD,MAAM,UAAU;IAMd,SAAS,CAAU;IAOnB,QAAQ,CAAU;IAQlB,OAAO,CAAU;IAQjB,QAAQ,CAAU;CACnB;AAxBC;IALC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,iBAAiB;QAC9B,OAAO,EAAE,MAAM;KAChB,CAAC;IACD,IAAA,0BAAQ,GAAE;;6CACQ;AAOnB;IALC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,gBAAgB;QAC7B,OAAO,EAAE,OAAO;KACjB,CAAC;IACD,IAAA,0BAAQ,GAAE;;4CACO;AAQlB;IANC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,cAAc;QAC3B,OAAO,EAAE,MAAM;KAChB,CAAC;IACD,IAAA,0BAAQ,GAAE;IACV,IAAA,4BAAU,GAAE;;2CACI;AAQjB;IANC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,cAAc;QAC3B,OAAO,EAAE,mBAAmB;KAC7B,CAAC;IACD,IAAA,0BAAQ,GAAE;IACV,IAAA,4BAAU,GAAE;;4CACK;AAGpB,MAAa,WAAW;IAOtB,KAAK,CAAU;IASf,QAAQ,CAAU;IAUlB,IAAI,CAAY;IAShB,OAAO,CAAc;CACtB;AApCD,kCAoCC;AA7BC;IANC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,oBAAoB;QACjC,OAAO,EAAE,qBAAqB;QAC9B,MAAM,EAAE,OAAO;KAChB,CAAC;IACD,IAAA,yBAAO,EAAC,EAAE,EAAE,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC;;0CAClD;AASf;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,uCAAuC;QACpD,OAAO,EAAE,oBAAoB;QAC7B,SAAS,EAAE,EAAE;KACd,CAAC;IACD,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,EAAE,EAAE,EAAE,OAAO,EAAE,8CAA8C,EAAE,CAAC;;6CACzD;AAUlB;IARC,IAAA,6BAAmB,EAAC;QACnB,WAAW,EAAE,WAAW;QACxB,IAAI,EAAE,qBAAQ;QACd,OAAO,EAAE,qBAAQ,CAAC,WAAW;QAC7B,OAAO,EAAE,qBAAQ,CAAC,WAAW;KAC9B,CAAC;IACD,IAAA,wBAAM,EAAC,qBAAQ,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;IAC7C,IAAA,4BAAU,GAAE;;yCACG;AAShB;IAPC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,0BAA0B;QACvC,IAAI,EAAE,UAAU;KACjB,CAAC;IACD,IAAA,gCAAc,GAAE;IAChB,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,UAAU,CAAC;IACtB,IAAA,0BAAQ,GAAE;8BACD,UAAU;4CAAC","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/dto/register.dto.ts"],"sourcesContent":["import {\n  IsEmail,\n  IsString,\n  MinLength,\n  IsEnum,\n  IsObject,\n  ValidateNested,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { UserRole } from '@shared/types/user.types';\n\nclass ProfileDto {\n  @ApiProperty({\n    description: 'User first name',\n    example: 'JoÃ£o',\n  })\n  @IsString()\n  firstName!: string;\n\n  @ApiProperty({\n    description: 'User last name',\n    example: 'Silva',\n  })\n  @IsString()\n  lastName!: string;\n\n  @ApiPropertyOptional({\n    description: 'Company name',\n    example: 'VTEX',\n  })\n  @IsString()\n  @IsOptional()\n  company?: string;\n\n  @ApiPropertyOptional({\n    description: 'Job position',\n    example: 'Software Engineer',\n  })\n  @IsString()\n  @IsOptional()\n  position?: string;\n}\n\nexport class RegisterDto {\n  @ApiProperty({\n    description: 'User email address',\n    example: 'newuser@example.com',\n    format: 'email',\n  })\n  @IsEmail({}, { message: 'Please provide a valid email address' })\n  email!: string;\n\n  @ApiProperty({\n    description: 'User password (minimum 12 characters)',\n    example: 'SecurePassword123!',\n    minLength: 12,\n  })\n  @IsString()\n  @MinLength(12, { message: 'Password must be at least 12 characters long' })\n  password!: string;\n\n  @ApiPropertyOptional({\n    description: 'User role',\n    enum: UserRole,\n    default: UserRole.PARTICIPANT,\n    example: UserRole.PARTICIPANT,\n  })\n  @IsEnum(UserRole, { message: 'Invalid role' })\n  @IsOptional()\n  role?: UserRole;\n\n  @ApiProperty({\n    description: 'User profile information',\n    type: ProfileDto,\n  })\n  @ValidateNested()\n  @Type(() => ProfileDto)\n  @IsObject()\n  profile!: ProfileDto;\n}\n"],"version":3}