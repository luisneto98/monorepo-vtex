{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/schemas/faq-category.schema.ts","mappings":";;;;;;;;;;;;AAAA,+CAA+D;AAO/D,IAAM,IAAI,GAAV,MAAM,IAAI;IAOR,OAAO,CAAS;IAQhB,IAAI,CAAS;CACd,CAAA;AATC;IANC,IAAA,eAAI,EAAC;QACJ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;QACZ,SAAS,EAAE,EAAE;QACb,IAAI,EAAE,IAAI;KACX,CAAC;;mCACc;AAQhB;IANC,IAAA,eAAI,EAAC;QACJ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;QACZ,SAAS,EAAE,EAAE;QACb,IAAI,EAAE,IAAI;KACX,CAAC;;gCACW;AAfT,IAAI;IADT,IAAA,iBAAM,EAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;GACjB,IAAI,CAgBT;AAGM,IAAM,WAAW,GAAjB,MAAM,WAAW;IAKtB,IAAI,CAGF;IAOF,KAAK,CAAS;CACf,CAAA;AAhBY,kCAAW;AAKtB;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,IAAI;KACf,CAAC;;yCAIA;AAOF;IALC,IAAA,eAAI,EAAC;QACJ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;QACZ,GAAG,EAAE,CAAC;KACP,CAAC;;0CACY;sBAfH,WAAW;IADvB,IAAA,iBAAM,EAAC,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC;GAC3C,WAAW,CAgBvB;AAEY,QAAA,iBAAiB,GAAG,wBAAa,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAE3E,UAAU;AACV,yBAAiB,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AACtC,yBAAiB,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7C,yBAAiB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;AAE1C,6CAA6C;AAC7C,yBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,IAAI;IAC1C,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;QACjD,CAAC;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAC3C,CAAC;IACH,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,iBAAiB;AACjB,yBAAiB,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,UAAU,QAAwB;IAChF,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC;AACzD,CAAC,CAAC","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/schemas/faq-category.schema.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { FaqCategory as IFaqCategory } from '@shared/types/faq.types';\n\nexport type FaqCategoryDocument = FaqCategory & Document;\n\n@Schema({ _id: false })\nclass Name {\n  @Prop({\n    required: true,\n    unique: true,\n    maxlength: 50,\n    trim: true,\n  })\n  'pt-BR': string;\n\n  @Prop({\n    required: true,\n    unique: true,\n    maxlength: 50,\n    trim: true,\n  })\n  'en': string;\n}\n\n@Schema({ timestamps: true, collection: 'FaqCategory' })\nexport class FaqCategory implements Omit<IFaqCategory, '_id'> {\n  @Prop({\n    type: Name,\n    required: true,\n  })\n  name: {\n    'pt-BR': string;\n    en: string;\n  };\n\n  @Prop({\n    required: true,\n    unique: true,\n    min: 0,\n  })\n  order: number;\n}\n\nexport const FaqCategorySchema = SchemaFactory.createForClass(FaqCategory);\n\n// Indexes\nFaqCategorySchema.index({ order: 1 });\nFaqCategorySchema.index({ 'name.pt-BR': 1 });\nFaqCategorySchema.index({ 'name.en': 1 });\n\n// Pre-save middleware for data normalization\nFaqCategorySchema.pre('save', function (next) {\n  if (this.name) {\n    if (this.name['pt-BR']) {\n      this.name['pt-BR'] = this.name['pt-BR'].trim();\n    }\n    if (this.name['en']) {\n      this.name['en'] = this.name['en'].trim();\n    }\n  }\n  next();\n});\n\n// Schema methods\nFaqCategorySchema.methods['getLocalizedName'] = function (language: 'pt-BR' | 'en'): string {\n  return this['name'][language] || this['name']['pt-BR'];\n};\n"],"version":3}