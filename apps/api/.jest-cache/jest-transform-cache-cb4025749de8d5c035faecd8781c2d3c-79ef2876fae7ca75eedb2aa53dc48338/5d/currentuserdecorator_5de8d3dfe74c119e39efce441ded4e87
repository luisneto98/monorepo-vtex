5c3339318773b64f0d80671f91a69b52
"use strict";

/* istanbul ignore next */
function cov_2j7sybxoio() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/decorators/current-user.decorator.ts";
  var hash = "f84e148a0bfdb6e4f44016b03a320e41d255f608";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/decorators/current-user.decorator.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 51
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 29
        }
      },
      "6": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 57
          },
          end: {
            line: 5,
            column: 58
          }
        },
        loc: {
          start: {
            line: 5,
            column: 72
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 5
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 11
          },
          end: {
            line: 8,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 30
          }
        }, {
          start: {
            line: 8,
            column: 33
          },
          end: {
            line: 8,
            column: 37
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/decorators/current-user.decorator.ts",
      mappings: ";;;AAAA,2CAAwE;AAG3D,QAAA,WAAW,GAAG,IAAA,6BAAoB,EAC7C,CAAC,IAA4B,EAAE,GAAqB,EAAE,EAAE;IACtD,MAAM,OAAO,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;IAChD,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IAE1B,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACpC,CAAC,CACF,CAAC",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/decorators/current-user.decorator.ts"],
      sourcesContent: ["import { createParamDecorator, ExecutionContext } from '@nestjs/common';\nimport { User } from '@shared/types/user.types';\n\nexport const CurrentUser = createParamDecorator(\n  (data: keyof User | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n\n    return data ? user?.[data] : user;\n  },\n);\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f84e148a0bfdb6e4f44016b03a320e41d255f608"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2j7sybxoio = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2j7sybxoio();
cov_2j7sybxoio().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2j7sybxoio().s[1]++;
exports.CurrentUser = void 0;
const common_1 =
/* istanbul ignore next */
(cov_2j7sybxoio().s[2]++, require("@nestjs/common"));
/* istanbul ignore next */
cov_2j7sybxoio().s[3]++;
exports.CurrentUser = (0, common_1.createParamDecorator)((data, ctx) => {
  /* istanbul ignore next */
  cov_2j7sybxoio().f[0]++;
  const request =
  /* istanbul ignore next */
  (cov_2j7sybxoio().s[4]++, ctx.switchToHttp().getRequest());
  const user =
  /* istanbul ignore next */
  (cov_2j7sybxoio().s[5]++, request.user);
  /* istanbul ignore next */
  cov_2j7sybxoio().s[6]++;
  return data ?
  /* istanbul ignore next */
  (cov_2j7sybxoio().b[0][0]++, user?.[data]) :
  /* istanbul ignore next */
  (cov_2j7sybxoio().b[0][1]++, user);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21tb25fMSIsImNvdl8yajdzeWJ4b2lvIiwicyIsInJlcXVpcmUiLCJleHBvcnRzIiwiQ3VycmVudFVzZXIiLCJjcmVhdGVQYXJhbURlY29yYXRvciIsImRhdGEiLCJjdHgiLCJmIiwicmVxdWVzdCIsInN3aXRjaFRvSHR0cCIsImdldFJlcXVlc3QiLCJ1c2VyIiwiYiJdLCJzb3VyY2VzIjpbIi9ob21lL2x1aXNuZXRvOTgvRG9jdW1lbnRvcy9Db2RlL21vbm9yZXBvLXZ0ZXgvYXBwcy9hcGkvc3JjL2NvbW1vbi9kZWNvcmF0b3JzL2N1cnJlbnQtdXNlci5kZWNvcmF0b3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlUGFyYW1EZWNvcmF0b3IsIEV4ZWN1dGlvbkNvbnRleHQgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnQHNoYXJlZC90eXBlcy91c2VyLnR5cGVzJztcblxuZXhwb3J0IGNvbnN0IEN1cnJlbnRVc2VyID0gY3JlYXRlUGFyYW1EZWNvcmF0b3IoXG4gIChkYXRhOiBrZXlvZiBVc2VyIHwgdW5kZWZpbmVkLCBjdHg6IEV4ZWN1dGlvbkNvbnRleHQpID0+IHtcbiAgICBjb25zdCByZXF1ZXN0ID0gY3R4LnN3aXRjaFRvSHR0cCgpLmdldFJlcXVlc3QoKTtcbiAgICBjb25zdCB1c2VyID0gcmVxdWVzdC51c2VyO1xuXG4gICAgcmV0dXJuIGRhdGEgPyB1c2VyPy5bZGF0YV0gOiB1c2VyO1xuICB9LFxuKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE1BQUFBLFFBQUE7QUFBQTtBQUFBLENBQUFDLGNBQUEsR0FBQUMsQ0FBQSxPQUFBQyxPQUFBO0FBQXdFO0FBQUFGLGNBQUEsR0FBQUMsQ0FBQTtBQUczREUsT0FBQSxDQUFBQyxXQUFXLEdBQUcsSUFBQUwsUUFBQSxDQUFBTSxvQkFBb0IsRUFDN0MsQ0FBQ0MsSUFBNEIsRUFBRUMsR0FBcUIsS0FBSTtFQUFBO0VBQUFQLGNBQUEsR0FBQVEsQ0FBQTtFQUN0RCxNQUFNQyxPQUFPO0VBQUE7RUFBQSxDQUFBVCxjQUFBLEdBQUFDLENBQUEsT0FBR00sR0FBRyxDQUFDRyxZQUFZLEVBQUUsQ0FBQ0MsVUFBVSxFQUFFO0VBQy9DLE1BQU1DLElBQUk7RUFBQTtFQUFBLENBQUFaLGNBQUEsR0FBQUMsQ0FBQSxPQUFHUSxPQUFPLENBQUNHLElBQUk7RUFBQztFQUFBWixjQUFBLEdBQUFDLENBQUE7RUFFMUIsT0FBT0ssSUFBSTtFQUFBO0VBQUEsQ0FBQU4sY0FBQSxHQUFBYSxDQUFBLFVBQUdELElBQUksR0FBR04sSUFBSSxDQUFDO0VBQUE7RUFBQSxDQUFBTixjQUFBLEdBQUFhLENBQUEsVUFBR0QsSUFBSTtBQUNuQyxDQUFDLENBQ0YiLCJpZ25vcmVMaXN0IjpbXX0=