{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/news-releases.service.ts","mappings":"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","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/news-releases.service.ts"],"sourcesContent":["import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n  ConflictException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { NewsRelease, NewsReleaseDocument } from './schemas/news-release.schema';\nimport { CreateNewsReleaseDto } from './dto/create-news-release.dto';\nimport { UpdateNewsReleaseDto } from './dto/update-news-release.dto';\nimport { QueryNewsReleaseDto } from './dto/query-news-release.dto';\nimport { ContentSanitizationService } from './services/content-sanitization.service';\nimport { AuditLogService } from './services/audit-log.service';\nimport { ImageProcessingService } from './services/image-processing.service';\nimport { PublicationSchedulerService } from './services/publication-scheduler.service';\nimport { FeedGeneratorService } from './services/feed-generator.service';\nimport { SlugGeneratorUtil } from './utils/slug-generator.util';\nimport { NewsReleaseStatus } from '@vtexday26/shared';\n\n@Injectable()\nexport class NewsReleasesService {\n  constructor(\n    @InjectModel(NewsRelease.name)\n    private newsReleaseModel: Model<NewsReleaseDocument>,\n    private contentSanitizationService: ContentSanitizationService,\n    private auditLogService: AuditLogService,\n    private imageProcessingService: ImageProcessingService,\n    _publicationSchedulerService: PublicationSchedulerService, // Initialized via OnModuleInit\n    private feedGeneratorService: FeedGeneratorService,\n  ) {}\n\n  async create(dto: CreateNewsReleaseDto, user: any): Promise<NewsReleaseDocument> {\n    const sanitizedContent = this.contentSanitizationService.sanitizeAllContent(dto.content);\n\n    const slug = await SlugGeneratorUtil.generateUniqueSlug(\n      dto.content['en'].title,\n      this.newsReleaseModel,\n    );\n\n    const newsRelease = new this.newsReleaseModel({\n      slug,\n      content: sanitizedContent,\n      status: dto.status || NewsReleaseStatus.DRAFT,\n      featured: dto.featured || false,\n      featuredImage: dto.featuredImage,\n      categories: dto.categories || [],\n      tags: dto.tags || [],\n      author: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n      },\n      scheduledFor: dto.scheduledFor,\n      relatedArticles: dto.relatedArticles || [],\n      images: [],\n      viewCount: 0,\n      isDeleted: false,\n      version: 1,\n    });\n\n    if (dto.status === NewsReleaseStatus.PUBLISHED) {\n      newsRelease.publishedAt = new Date();\n    }\n\n    const saved = await newsRelease.save();\n\n    await this.auditLogService.logAction({\n      entityId: saved._id.toString(),\n      action: 'create',\n      performedBy: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n      },\n      metadata: { slug, status: dto.status },\n    });\n\n    return saved;\n  }\n\n  async findAll(query: QueryNewsReleaseDto): Promise<{\n    items: NewsReleaseDocument[];\n    total: number;\n    page: number;\n    pages: number;\n  }> {\n    const filter: any = {};\n\n    if (!query.includeDeleted) {\n      filter.isDeleted = false;\n    }\n\n    if (query.status) {\n      filter.status = query.status;\n    } else if (query.statuses && query.statuses.length > 0) {\n      filter.status = { $in: query.statuses };\n    }\n\n    if (query.featured !== undefined) {\n      filter.featured = query.featured;\n    }\n\n    if (query.categories && query.categories.length > 0) {\n      filter.categories = { $in: query.categories };\n    }\n\n    if (query.tags && query.tags.length > 0) {\n      filter.tags = { $in: query.tags };\n    }\n\n    if (query.author) {\n      filter['author.id'] = query.author;\n    }\n\n    if (query.publishedAfter || query.publishedBefore) {\n      filter.publishedAt = {};\n      if (query.publishedAfter) {\n        filter.publishedAt.$gte = query.publishedAfter;\n      }\n      if (query.publishedBefore) {\n        filter.publishedAt.$lte = query.publishedBefore;\n      }\n    }\n\n    if (query.search) {\n      const searchRegex = new RegExp(query.search, 'i');\n      filter.$or = [\n        { 'content.pt-BR.title': searchRegex },\n        { 'content.en.title': searchRegex },\n        { 'content.es.title': searchRegex },\n        { 'content.pt-BR.content': searchRegex },\n        { 'content.en.content': searchRegex },\n        { 'content.es.content': searchRegex },\n      ];\n    }\n\n    const sortOptions: any = {};\n    if (query.sortBy === 'title' && query.language) {\n      sortOptions[`content.${query.language}.title`] = query.sortOrder === 'asc' ? 1 : -1;\n    } else {\n      sortOptions[query.sortBy] = query.sortOrder === 'asc' ? 1 : -1;\n    }\n\n    const total = await this.newsReleaseModel.countDocuments(filter);\n    const pages = Math.ceil(total / query.limit);\n    const skip = (query.page - 1) * query.limit;\n\n    const items = await this.newsReleaseModel\n      .find(filter)\n      .sort(sortOptions)\n      .skip(skip)\n      .limit(query.limit)\n      .exec();\n\n    return {\n      items,\n      total,\n      page: query.page,\n      pages,\n    };\n  }\n\n  async findOne(id: string): Promise<NewsReleaseDocument> {\n    const newsRelease = await this.newsReleaseModel.findById(id);\n    if (!newsRelease || newsRelease.isDeleted) {\n      throw new NotFoundException('News release not found');\n    }\n    return newsRelease;\n  }\n\n  async findBySlug(slug: string): Promise<NewsReleaseDocument> {\n    const newsRelease = await this.newsReleaseModel.findOne({\n      slug,\n      isDeleted: false,\n    });\n    if (!newsRelease) {\n      throw new NotFoundException('News release not found');\n    }\n    return newsRelease;\n  }\n\n  async update(id: string, dto: UpdateNewsReleaseDto, user: any): Promise<NewsReleaseDocument> {\n    const newsRelease = await this.findOne(id);\n\n    const updateData: any = { $inc: { version: 1 } };\n\n    if (dto.content) {\n      updateData.content = this.contentSanitizationService.sanitizeAllContent(dto.content);\n\n      if (dto.content['en']?.title && dto.content['en'].title !== newsRelease.content['en'].title) {\n        updateData.slug = await SlugGeneratorUtil.generateUniqueSlug(\n          dto.content['en'].title,\n          this.newsReleaseModel,\n          id,\n        );\n      }\n    }\n\n    if (dto.status !== undefined) {\n      updateData.status = dto.status;\n      if (dto.status === NewsReleaseStatus.PUBLISHED && !newsRelease.publishedAt) {\n        updateData.publishedAt = new Date();\n      }\n    }\n\n    if (dto.featured !== undefined) updateData.featured = dto.featured;\n    if (dto.featuredImage !== undefined) updateData.featuredImage = dto.featuredImage;\n    if (dto.categories !== undefined) updateData.categories = dto.categories;\n    if (dto.tags !== undefined) updateData.tags = dto.tags;\n    if (dto.scheduledFor !== undefined) updateData.scheduledFor = dto.scheduledFor;\n    if (dto.relatedArticles !== undefined) updateData.relatedArticles = dto.relatedArticles;\n    if (dto.images !== undefined) updateData.images = dto.images;\n\n    const updated = await this.newsReleaseModel.findByIdAndUpdate(id, updateData, { new: true });\n\n    await this.auditLogService.logAction({\n      entityId: id,\n      action: 'update',\n      performedBy: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n      },\n      changes: dto,\n    });\n\n    return updated;\n  }\n\n  async remove(id: string, user: any): Promise<void> {\n    await this.findOne(id);\n\n    await this.newsReleaseModel.findByIdAndUpdate(id, {\n      isDeleted: true,\n      deletedAt: new Date(),\n      $inc: { version: 1 },\n    });\n\n    await this.auditLogService.logAction({\n      entityId: id,\n      action: 'delete',\n      performedBy: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n      },\n    });\n  }\n\n  async restore(id: string, user: any): Promise<NewsReleaseDocument> {\n    const newsRelease = await this.newsReleaseModel.findById(id);\n    if (!newsRelease) {\n      throw new NotFoundException('News release not found');\n    }\n\n    const restored = await this.newsReleaseModel.findByIdAndUpdate(\n      id,\n      {\n        isDeleted: false,\n        $unset: { deletedAt: 1 },\n        $inc: { version: 1 },\n      },\n      { new: true },\n    );\n\n    await this.auditLogService.logAction({\n      entityId: id,\n      action: 'restore',\n      performedBy: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n      },\n    });\n\n    return restored;\n  }\n\n  async publish(id: string, user: any): Promise<NewsReleaseDocument> {\n    const newsRelease = await this.findOne(id);\n\n    if (newsRelease.status === NewsReleaseStatus.PUBLISHED) {\n      throw new ConflictException('News release is already published');\n    }\n\n    const published = await this.newsReleaseModel.findByIdAndUpdate(\n      id,\n      {\n        status: NewsReleaseStatus.PUBLISHED,\n        publishedAt: new Date(),\n        $inc: { version: 1 },\n      },\n      { new: true },\n    );\n\n    await this.auditLogService.logAction({\n      entityId: id,\n      action: 'publish',\n      performedBy: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n      },\n    });\n\n    return published;\n  }\n\n  async archive(id: string, user: any): Promise<NewsReleaseDocument> {\n    await this.findOne(id);\n\n    const archived = await this.newsReleaseModel.findByIdAndUpdate(\n      id,\n      {\n        status: NewsReleaseStatus.ARCHIVED,\n        $inc: { version: 1 },\n      },\n      { new: true },\n    );\n\n    await this.auditLogService.logAction({\n      entityId: id,\n      action: 'archive',\n      performedBy: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n      },\n    });\n\n    return archived;\n  }\n\n  async uploadImage(\n    id: string,\n    file: Express.Multer.File,\n    metadata: {\n      caption?: Record<string, string>;\n      altText?: Record<string, string>;\n      order?: number;\n    },\n  ): Promise<NewsReleaseDocument> {\n    const newsRelease = await this.findOne(id);\n\n    const maxImages = 20;\n    if (newsRelease.images.length >= maxImages) {\n      throw new BadRequestException(`Maximum of ${maxImages} images allowed per article`);\n    }\n\n    const { url, thumbnailUrl } = await this.imageProcessingService.uploadImage(file);\n\n    const newImage = {\n      _id: new this.newsReleaseModel().id,\n      url,\n      thumbnailUrl,\n      caption: metadata.caption || {},\n      altText: metadata.altText || {},\n      order: metadata.order || newsRelease.images.length,\n      uploadedAt: new Date(),\n    };\n\n    const updated = await this.newsReleaseModel.findByIdAndUpdate(\n      id,\n      {\n        $push: { images: newImage },\n        $inc: { version: 1 },\n      },\n      { new: true },\n    );\n\n    return updated;\n  }\n\n  async removeImage(id: string, imageId: string): Promise<NewsReleaseDocument> {\n    const newsRelease = await this.findOne(id);\n\n    const image = newsRelease.images.find((img) => img._id?.toString() === imageId);\n    if (!image) {\n      throw new NotFoundException('Image not found');\n    }\n\n    await this.imageProcessingService.deleteImage(image.url);\n\n    const updated = await this.newsReleaseModel.findByIdAndUpdate(\n      id,\n      {\n        $pull: { images: { _id: imageId } },\n        $inc: { version: 1 },\n      },\n      { new: true },\n    );\n\n    return updated;\n  }\n\n  async reorderImages(id: string, imageIds: string[]): Promise<NewsReleaseDocument> {\n    const newsRelease = await this.findOne(id);\n\n    const reorderedImages = imageIds.map((imageId, index) => {\n      const image = newsRelease.images.find((img) => img._id?.toString() === imageId);\n      if (!image) {\n        throw new BadRequestException(`Image with ID ${imageId} not found`);\n      }\n      return { ...image, order: index };\n    });\n\n    const updated = await this.newsReleaseModel.findByIdAndUpdate(\n      id,\n      {\n        images: reorderedImages,\n        $inc: { version: 1 },\n      },\n      { new: true },\n    );\n\n    return updated;\n  }\n\n  async incrementViewCount(id: string): Promise<void> {\n    await this.newsReleaseModel.findByIdAndUpdate(id, {\n      $inc: { viewCount: 1 },\n    });\n  }\n\n  async getFeaturedNews(limit: number = 5): Promise<NewsReleaseDocument[]> {\n    return this.newsReleaseModel\n      .find({\n        featured: true,\n        status: NewsReleaseStatus.PUBLISHED,\n        isDeleted: false,\n      })\n      .sort({ publishedAt: -1 })\n      .limit(limit)\n      .exec();\n  }\n\n  async getPublicNews(query: {\n    page?: number;\n    limit?: number;\n    language?: 'pt-BR' | 'en' | 'es';\n    category?: string;\n    tag?: string;\n  }): Promise<{\n    items: NewsReleaseDocument[];\n    total: number;\n    page: number;\n    pages: number;\n  }> {\n    const page = query.page || 1;\n    const limit = Math.min(query.limit || 20, 100);\n\n    const filter: any = {\n      status: NewsReleaseStatus.PUBLISHED,\n      isDeleted: false,\n    };\n\n    if (query.category) {\n      filter.categories = query.category;\n    }\n\n    if (query.tag) {\n      filter.tags = query.tag;\n    }\n\n    const total = await this.newsReleaseModel.countDocuments(filter);\n    const pages = Math.ceil(total / limit);\n    const skip = (page - 1) * limit;\n\n    const items = await this.newsReleaseModel\n      .find(filter)\n      .sort({ publishedAt: -1 })\n      .skip(skip)\n      .limit(limit)\n      .exec();\n\n    return {\n      items,\n      total,\n      page,\n      pages,\n    };\n  }\n\n  async generateRssFeed(language: 'pt-BR' | 'en' | 'es' = 'en'): Promise<string> {\n    const releases = await this.newsReleaseModel\n      .find({\n        status: NewsReleaseStatus.PUBLISHED,\n        isDeleted: false,\n      })\n      .sort({ publishedAt: -1 })\n      .limit(50)\n      .exec();\n\n    return this.feedGeneratorService.generateRssFeed(releases, language);\n  }\n\n  async generateAtomFeed(language: 'pt-BR' | 'en' | 'es' = 'en'): Promise<string> {\n    const releases = await this.newsReleaseModel\n      .find({\n        status: NewsReleaseStatus.PUBLISHED,\n        isDeleted: false,\n      })\n      .sort({ publishedAt: -1 })\n      .limit(50)\n      .exec();\n\n    return this.feedGeneratorService.generateAtomFeed(releases, language);\n  }\n}\n"],"version":3}