{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/news-releases.controller.ts","mappings":"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","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/news-releases.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n  UseInterceptors,\n  UploadedFile,\n  Res,\n  HttpStatus,\n  HttpCode,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiConsumes,\n  ApiParam,\n  ApiQuery,\n} from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { NewsReleasesService } from './news-releases.service';\nimport { CreateNewsReleaseDto } from './dto/create-news-release.dto';\nimport { UpdateNewsReleaseDto } from './dto/update-news-release.dto';\nimport { QueryNewsReleaseDto } from './dto/query-news-release.dto';\nimport { ImageUploadDto, ReorderImagesDto } from './dto/image-upload.dto';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../auth/guards/roles.guard';\nimport { Roles } from '../auth/decorators/roles.decorator';\nimport { Public } from '../auth/decorators/public.decorator';\nimport { CurrentUser } from '../auth/decorators/current-user.decorator';\nimport { UserRole } from '@vtexday26/shared';\nimport { Throttle } from '@nestjs/throttler';\n\n@ApiTags('news-releases')\n@Controller('news-releases')\n@UseGuards(JwtAuthGuard, RolesGuard)\nexport class NewsReleasesController {\n  constructor(private readonly newsReleasesService: NewsReleasesService) {}\n\n  @Post()\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Create a new news release' })\n  @ApiResponse({ status: 201, description: 'News release created successfully' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @Throttle({ default: { limit: 20, ttl: 60000 } })\n  async create(@Body() createNewsReleaseDto: CreateNewsReleaseDto, @CurrentUser() user: any) {\n    return this.newsReleasesService.create(createNewsReleaseDto, user);\n  }\n\n  @Get()\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Get all news releases (admin)' })\n  @ApiResponse({ status: 200, description: 'List of news releases' })\n  async findAll(@Query() query: QueryNewsReleaseDto) {\n    return this.newsReleasesService.findAll(query);\n  }\n\n  @Get(':id')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Get a news release by ID' })\n  @ApiParam({ name: 'id', description: 'News release ID' })\n  @ApiResponse({ status: 200, description: 'News release found' })\n  @ApiResponse({ status: 404, description: 'News release not found' })\n  async findOne(@Param('id') id: string) {\n    return this.newsReleasesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Update a news release' })\n  @ApiParam({ name: 'id', description: 'News release ID' })\n  @ApiResponse({ status: 200, description: 'News release updated' })\n  @ApiResponse({ status: 404, description: 'News release not found' })\n  @Throttle({ default: { limit: 20, ttl: 60000 } })\n  async update(\n    @Param('id') id: string,\n    @Body() updateNewsReleaseDto: UpdateNewsReleaseDto,\n    @CurrentUser() user: any,\n  ) {\n    return this.newsReleasesService.update(id, updateNewsReleaseDto, user);\n  }\n\n  @Delete(':id')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Delete a news release (soft delete)' })\n  @ApiParam({ name: 'id', description: 'News release ID' })\n  @ApiResponse({ status: 204, description: 'News release deleted' })\n  @ApiResponse({ status: 404, description: 'News release not found' })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async remove(@Param('id') id: string, @CurrentUser() user: any) {\n    return this.newsReleasesService.remove(id, user);\n  }\n\n  @Post(':id/restore')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Restore a deleted news release' })\n  @ApiParam({ name: 'id', description: 'News release ID' })\n  @ApiResponse({ status: 200, description: 'News release restored' })\n  @ApiResponse({ status: 404, description: 'News release not found' })\n  async restore(@Param('id') id: string, @CurrentUser() user: any) {\n    return this.newsReleasesService.restore(id, user);\n  }\n\n  @Post(':id/publish')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Publish a news release' })\n  @ApiParam({ name: 'id', description: 'News release ID' })\n  @ApiResponse({ status: 200, description: 'News release published' })\n  @ApiResponse({ status: 404, description: 'News release not found' })\n  @ApiResponse({ status: 409, description: 'News release already published' })\n  async publish(@Param('id') id: string, @CurrentUser() user: any) {\n    return this.newsReleasesService.publish(id, user);\n  }\n\n  @Post(':id/archive')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Archive a news release' })\n  @ApiParam({ name: 'id', description: 'News release ID' })\n  @ApiResponse({ status: 200, description: 'News release archived' })\n  @ApiResponse({ status: 404, description: 'News release not found' })\n  async archive(@Param('id') id: string, @CurrentUser() user: any) {\n    return this.newsReleasesService.archive(id, user);\n  }\n\n  @Post(':id/images')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Upload image to news release' })\n  @ApiParam({ name: 'id', description: 'News release ID' })\n  @ApiConsumes('multipart/form-data')\n  @ApiResponse({ status: 200, description: 'Image uploaded successfully' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiResponse({ status: 404, description: 'News release not found' })\n  @UseInterceptors(FileInterceptor('image'))\n  @Throttle({ default: { limit: 10, ttl: 60000 } })\n  async uploadImage(\n    @Param('id') id: string,\n    @UploadedFile() file: Express.Multer.File,\n    @Body() imageUploadDto: ImageUploadDto,\n  ) {\n    return this.newsReleasesService.uploadImage(id, file, imageUploadDto);\n  }\n\n  @Delete(':id/images/:imageId')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Remove image from news release' })\n  @ApiParam({ name: 'id', description: 'News release ID' })\n  @ApiParam({ name: 'imageId', description: 'Image ID' })\n  @ApiResponse({ status: 200, description: 'Image removed successfully' })\n  @ApiResponse({ status: 404, description: 'News release or image not found' })\n  async removeImage(@Param('id') id: string, @Param('imageId') imageId: string) {\n    return this.newsReleasesService.removeImage(id, imageId);\n  }\n\n  @Patch(':id/images/reorder')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Reorder images in news release' })\n  @ApiParam({ name: 'id', description: 'News release ID' })\n  @ApiResponse({ status: 200, description: 'Images reordered successfully' })\n  @ApiResponse({ status: 400, description: 'Bad request' })\n  @ApiResponse({ status: 404, description: 'News release not found' })\n  async reorderImages(@Param('id') id: string, @Body() reorderImagesDto: ReorderImagesDto) {\n    return this.newsReleasesService.reorderImages(id, reorderImagesDto.imageIds);\n  }\n}\n\n@ApiTags('public-news')\n@Controller('public/news')\nexport class PublicNewsController {\n  constructor(private readonly newsReleasesService: NewsReleasesService) {}\n\n  @Get()\n  @Public()\n  @ApiOperation({ summary: 'Get published news releases' })\n  @ApiQuery({ name: 'page', required: false, type: Number })\n  @ApiQuery({ name: 'limit', required: false, type: Number })\n  @ApiQuery({ name: 'language', required: false, enum: ['pt-BR', 'en', 'es'] })\n  @ApiQuery({ name: 'category', required: false, type: String })\n  @ApiQuery({ name: 'tag', required: false, type: String })\n  @ApiResponse({ status: 200, description: 'List of published news releases' })\n  @Throttle({ default: { limit: 100, ttl: 60000 } })\n  async getPublicNews(\n    @Query('page') page?: number,\n    @Query('limit') limit?: number,\n    @Query('language') language?: 'pt-BR' | 'en' | 'es',\n    @Query('category') category?: string,\n    @Query('tag') tag?: string,\n  ) {\n    return this.newsReleasesService.getPublicNews({\n      page,\n      limit,\n      language,\n      category,\n      tag,\n    });\n  }\n\n  @Get('featured')\n  @Public()\n  @ApiOperation({ summary: 'Get featured news releases' })\n  @ApiQuery({ name: 'limit', required: false, type: Number, default: 5 })\n  @ApiResponse({ status: 200, description: 'List of featured news releases' })\n  @Throttle({ default: { limit: 100, ttl: 60000 } })\n  async getFeaturedNews(@Query('limit') limit?: number) {\n    return this.newsReleasesService.getFeaturedNews(limit || 5);\n  }\n\n  @Get('feed.rss')\n  @Public()\n  @ApiOperation({ summary: 'Get RSS feed of news releases' })\n  @ApiQuery({ name: 'lang', required: false, enum: ['pt-BR', 'en', 'es'], default: 'en' })\n  @ApiResponse({ status: 200, description: 'RSS feed', content: { 'application/rss+xml': {} } })\n  @Throttle({ default: { limit: 100, ttl: 60000 } })\n  async getRssFeed(@Query('lang') lang: 'pt-BR' | 'en' | 'es' = 'en', @Res() res: Response) {\n    const feed = await this.newsReleasesService.generateRssFeed(lang);\n    res.header('Content-Type', 'application/rss+xml; charset=utf-8');\n    res.send(feed);\n  }\n\n  @Get('feed.atom')\n  @Public()\n  @ApiOperation({ summary: 'Get Atom feed of news releases' })\n  @ApiQuery({ name: 'lang', required: false, enum: ['pt-BR', 'en', 'es'], default: 'en' })\n  @ApiResponse({ status: 200, description: 'Atom feed', content: { 'application/atom+xml': {} } })\n  @Throttle({ default: { limit: 100, ttl: 60000 } })\n  async getAtomFeed(@Query('lang') lang: 'pt-BR' | 'en' | 'es' = 'en', @Res() res: Response) {\n    const feed = await this.newsReleasesService.generateAtomFeed(lang);\n    res.header('Content-Type', 'application/atom+xml; charset=utf-8');\n    res.send(feed);\n  }\n\n  @Get(':slug')\n  @Public()\n  @ApiOperation({ summary: 'Get a news release by slug' })\n  @ApiParam({ name: 'slug', description: 'News release slug' })\n  @ApiResponse({ status: 200, description: 'News release found' })\n  @ApiResponse({ status: 404, description: 'News release not found' })\n  @Throttle({ default: { limit: 100, ttl: 60000 } })\n  async getBySlug(@Param('slug') slug: string) {\n    const newsRelease = await this.newsReleasesService.findBySlug(slug);\n    await this.newsReleasesService.incrementViewCount(newsRelease._id.toString());\n    return newsRelease;\n  }\n}\n"],"version":3}