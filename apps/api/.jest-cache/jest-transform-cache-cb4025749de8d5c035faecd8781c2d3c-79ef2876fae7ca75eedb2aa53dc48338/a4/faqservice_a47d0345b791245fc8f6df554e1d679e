8295d3ef3517ec9295d57f1b209392c8
"use strict";

/* istanbul ignore next */
function cov_261sd32qwf() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/faq.service.ts";
  var hash = "319d043b2a397248e989acd92f57279bea3f8a9f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/faq.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "17": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "19": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "20": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "21": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 52
        }
      },
      "22": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 20,
          column: 70
        }
      },
      "23": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 50
        }
      },
      "24": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 304,
          column: 1
        }
      },
      "25": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "26": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "27": {
        start: {
          line: 32,
          column: 25
        },
        end: {
          line: 32,
          column: 84
        }
      },
      "28": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "29": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 108
        }
      },
      "30": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "31": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "32": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 73
        }
      },
      "33": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 53,
          column: 14
        }
      },
      "34": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "35": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 116
        }
      },
      "36": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 58
        }
      },
      "37": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 33
        }
      },
      "38": {
        start: {
          line: 62,
          column: 82
        },
        end: {
          line: 62,
          column: 91
        }
      },
      "39": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 41
        }
      },
      "40": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "41": {
        start: {
          line: 65,
          column: 33
        },
        end: {
          line: 65,
          column: 95
        }
      },
      "42": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "43": {
        start: {
          line: 68,
          column: 35
        },
        end: {
          line: 68,
          column: 73
        }
      },
      "44": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 72,
          column: 18
        }
      },
      "45": {
        start: {
          line: 70,
          column: 50
        },
        end: {
          line: 70,
          column: 96
        }
      },
      "46": {
        start: {
          line: 71,
          column: 52
        },
        end: {
          line: 71,
          column: 98
        }
      },
      "47": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 106
        }
      },
      "48": {
        start: {
          line: 75,
          column: 57
        },
        end: {
          line: 75,
          column: 103
        }
      },
      "49": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "50": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 38
        }
      },
      "51": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "52": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 40
        }
      },
      "53": {
        start: {
          line: 84,
          column: 21
        },
        end: {
          line: 84,
          column: 39
        }
      },
      "54": {
        start: {
          line: 85,
          column: 26
        },
        end: {
          line: 85,
          column: 59
        }
      },
      "55": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "56": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 29
        }
      },
      "57": {
        start: {
          line: 88,
          column: 31
        },
        end: {
          line: 88,
          column: 46
        }
      },
      "58": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "59": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 95,
          column: 17
        }
      },
      "60": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 57
        }
      },
      "61": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 43
        }
      },
      "62": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "63": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "64": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 132,
          column: 19
        }
      },
      "65": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "66": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 80
        }
      },
      "67": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 19
        }
      },
      "68": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 147,
          column: 20
        }
      },
      "69": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "70": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "71": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 80
        }
      },
      "72": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "73": {
        start: {
          line: 159,
          column: 29
        },
        end: {
          line: 159,
          column: 88
        }
      },
      "74": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "75": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 112
        }
      },
      "76": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "77": {
        start: {
          line: 166,
          column: 31
        },
        end: {
          line: 166,
          column: 68
        }
      },
      "78": {
        start: {
          line: 167,
          column: 26
        },
        end: {
          line: 167,
          column: 91
        }
      },
      "79": {
        start: {
          line: 168,
          column: 32
        },
        end: {
          line: 173,
          column: 14
        }
      },
      "80": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "81": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 116
        }
      },
      "82": {
        start: {
          line: 179,
          column: 27
        },
        end: {
          line: 179,
          column: 129
        }
      },
      "83": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 26
        }
      },
      "84": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "85": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "86": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 80
        }
      },
      "87": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 35
        }
      },
      "88": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 34
        }
      },
      "89": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "90": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 73
        }
      },
      "91": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 25
        }
      },
      "92": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 201,
          column: 10
        }
      },
      "93": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "94": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 88
        }
      },
      "95": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 29
        }
      },
      "96": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 29
        }
      },
      "97": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 32
        }
      },
      "98": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 26
        }
      },
      "99": {
        start: {
          line: 212,
          column: 33
        },
        end: {
          line: 218,
          column: 10
        }
      },
      "100": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "101": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 100
        }
      },
      "102": {
        start: {
          line: 222,
          column: 32
        },
        end: {
          line: 222,
          column: 76
        }
      },
      "103": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 38
        }
      },
      "104": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 70
        }
      },
      "105": {
        start: {
          line: 229,
          column: 25
        },
        end: {
          line: 229,
          column: 65
        }
      },
      "106": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "107": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 89
        }
      },
      "108": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 24
        }
      },
      "109": {
        start: {
          line: 236,
          column: 25
        },
        end: {
          line: 236,
          column: 65
        }
      },
      "110": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "111": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 89
        }
      },
      "112": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "113": {
        start: {
          line: 242,
          column: 33
        },
        end: {
          line: 248,
          column: 14
        }
      },
      "114": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "115": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 103
        }
      },
      "116": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "117": {
        start: {
          line: 255,
          column: 29
        },
        end: {
          line: 255,
          column: 43
        }
      },
      "118": {
        start: {
          line: 256,
          column: 29
        },
        end: {
          line: 256,
          column: 52
        }
      },
      "119": {
        start: {
          line: 258,
          column: 35
        },
        end: {
          line: 261,
          column: 14
        }
      },
      "120": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 284,
          column: 13
        }
      },
      "121": {
        start: {
          line: 264,
          column: 34
        },
        end: {
          line: 264,
          column: 49
        }
      },
      "122": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 268,
          column: 19
        }
      },
      "123": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 272,
          column: 19
        }
      },
      "124": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 276,
          column: 19
        }
      },
      "125": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 281,
          column: 17
        }
      },
      "126": {
        start: {
          line: 279,
          column: 44
        },
        end: {
          line: 279,
          column: 174
        }
      },
      "127": {
        start: {
          line: 280,
          column: 20
        },
        end: {
          line: 280,
          column: 43
        }
      },
      "128": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 58
        }
      },
      "129": {
        start: {
          line: 287,
          column: 32
        },
        end: {
          line: 287,
          column: 147
        }
      },
      "130": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 31
        }
      },
      "131": {
        start: {
          line: 292,
          column: 31
        },
        end: {
          line: 295,
          column: 10
        }
      },
      "132": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "133": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 117
        }
      },
      "134": {
        start: {
          line: 299,
          column: 23
        },
        end: {
          line: 299,
          column: 73
        }
      },
      "135": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "136": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 89
        }
      },
      "137": {
        start: {
          line: 305,
          column: 0
        },
        end: {
          line: 305,
          column: 32
        }
      },
      "138": {
        start: {
          line: 306,
          column: 0
        },
        end: {
          line: 312,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 61
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 70,
            column: 38
          },
          end: {
            line: 70,
            column: 39
          }
        },
        loc: {
          start: {
            line: 70,
            column: 50
          },
          end: {
            line: 70,
            column: 96
          }
        },
        line: 70
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 71,
            column: 41
          }
        },
        loc: {
          start: {
            line: 71,
            column: 52
          },
          end: {
            line: 71,
            column: 98
          }
        },
        line: 71
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 75,
            column: 45
          },
          end: {
            line: 75,
            column: 46
          }
        },
        loc: {
          start: {
            line: 75,
            column: 57
          },
          end: {
            line: 75,
            column: 103
          }
        },
        line: 75
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 26
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 120
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        loc: {
          start: {
            line: 138,
            column: 87
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 138
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 38
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 149
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 40
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 182
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 25
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 197
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 44
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 211
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        loc: {
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 225
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 31
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 228
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 48
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 235
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 29
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 290
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "14": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "15": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: 47,
            column: 13
          },
          end: {
            line: 57,
            column: 9
          }
        }],
        line: 37
      },
      "16": {
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 68
          }
        }, {
          start: {
            line: 45,
            column: 71
          },
          end: {
            line: 45,
            column: 72
          }
        }],
        line: 45
      },
      "17": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "18": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 24
          }
        }],
        line: 62
      },
      "19": {
        loc: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 34
          },
          end: {
            line: 62,
            column: 36
          }
        }],
        line: 62
      },
      "20": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "21": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: 74,
            column: 17
          },
          end: {
            line: 76,
            column: 13
          }
        }],
        line: 66
      },
      "22": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "23": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "24": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "25": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 95,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 95,
            column: 17
          }
        }, {
          start: {
            line: 93,
            column: 21
          },
          end: {
            line: 95,
            column: 17
          }
        }],
        line: 90
      },
      "26": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "27": {
        loc: {
          start: {
            line: 138,
            column: 26
          },
          end: {
            line: 138,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 138,
            column: 34
          },
          end: {
            line: 138,
            column: 85
          }
        }],
        line: 138
      },
      "28": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "29": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "30": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "31": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "32": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 33
          }
        }, {
          start: {
            line: 165,
            column: 37
          },
          end: {
            line: 165,
            column: 69
          }
        }],
        line: 165
      },
      "33": {
        loc: {
          start: {
            line: 166,
            column: 31
          },
          end: {
            line: 166,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 31
          },
          end: {
            line: 166,
            column: 52
          }
        }, {
          start: {
            line: 166,
            column: 56
          },
          end: {
            line: 166,
            column: 68
          }
        }],
        line: 166
      },
      "34": {
        loc: {
          start: {
            line: 167,
            column: 26
          },
          end: {
            line: 167,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 61
          },
          end: {
            line: 167,
            column: 79
          }
        }, {
          start: {
            line: 167,
            column: 82
          },
          end: {
            line: 167,
            column: 91
          }
        }],
        line: 167
      },
      "35": {
        loc: {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "36": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "37": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "38": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "39": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "40": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "41": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "42": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "43": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "44": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "45": {
        loc: {
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 254,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 254,
            column: 49
          }
        }, {
          start: {
            line: 254,
            column: 53
          },
          end: {
            line: 254,
            column: 95
          }
        }],
        line: 254
      },
      "46": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "47": {
        loc: {
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 281,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 281,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "48": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "49": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/faq.service.ts",
      mappings: "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",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/faq.service.ts"],
      sourcesContent: ["import { Injectable, NotFoundException, ConflictException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Schema as MongooseSchema } from 'mongoose';\nimport { Faq, FaqDocument } from './schemas/faq.schema';\nimport { FaqCategory, FaqCategoryDocument } from './schemas/faq-category.schema';\nimport { CreateFaqDto } from './dto/create-faq.dto';\nimport { UpdateFaqDto } from './dto/update-faq.dto';\nimport { FaqFilterDto } from './dto/faq-filter.dto';\nimport { CreateFaqCategoryDto } from './dto/create-faq-category.dto';\nimport { UpdateFaqCategoryDto } from './dto/update-faq-category.dto';\nimport { PaginatedResponse } from '@common/dto/pagination.dto';\nimport { FAQ_CONSTANTS } from './faq.constants';\n\n@Injectable()\nexport class FaqService {\n  constructor(\n    @InjectModel(Faq.name) private faqModel: Model<FaqDocument>,\n    @InjectModel(FaqCategory.name) private faqCategoryModel: Model<FaqCategoryDocument>,\n  ) {}\n\n  // FAQ CRUD\n  async createFaq(createFaqDto: CreateFaqDto): Promise<FaqDocument> {\n    // Verify category exists\n    const category = await this.faqCategoryModel.findById(createFaqDto.category);\n    if (!category) {\n      throw new NotFoundException(`FAQ category with ID ${createFaqDto.category} not found`);\n    }\n\n    // Auto-generate order if not provided\n    if (createFaqDto.order === undefined) {\n      const maxOrderFaq = await this.faqModel\n        .findOne({\n          category: createFaqDto.category,\n          deletedAt: null,\n        })\n        .sort({ order: -1 })\n        .exec();\n\n      createFaqDto.order = maxOrderFaq ? maxOrderFaq.order + 1 : 0;\n    } else {\n      // Check for order conflicts within the category if order is provided\n      const existingFaq = await this.faqModel.findOne({\n        category: createFaqDto.category,\n        order: createFaqDto.order,\n        deletedAt: null,\n      });\n\n      if (existingFaq) {\n        throw new ConflictException('Another FAQ with this order already exists in this category');\n      }\n    }\n\n    const createdFaq = new this.faqModel(createFaqDto);\n    return createdFaq.save();\n  }\n\n  async findAllFaqs(filterDto: FaqFilterDto): Promise<PaginatedResponse<FaqDocument>> {\n    const { page = 1, limit = 20, sort, search, category, isVisible, lang } = filterDto;\n\n    const query: any = { deletedAt: null };\n\n    if (search) {\n      const searchFields = ['question.pt-BR', 'question.en', 'answer.pt-BR', 'answer.en'];\n      if (lang) {\n        // If language specified, prioritize search in that language\n        const langFields = [`question.${lang}`, `answer.${lang}`];\n        query.$or = [\n          ...langFields.map((field) => ({ [field]: { $regex: search, $options: 'i' } })),\n          ...searchFields.map((field) => ({ [field]: { $regex: search, $options: 'i' } })),\n        ];\n      } else {\n        query.$or = searchFields.map((field) => ({ [field]: { $regex: search, $options: 'i' } }));\n      }\n    }\n\n    if (category) {\n      query.category = category;\n    }\n\n    if (typeof isVisible !== 'undefined') {\n      query.isVisible = isVisible;\n    }\n\n    const skip = (page - 1) * limit;\n\n    let sortOptions: any = { 'category.order': 1, order: 1 };\n    if (sort) {\n      sortOptions = {};\n      const sortFields = sort.split(',');\n      for (const field of sortFields) {\n        if (field.startsWith('-')) {\n          sortOptions[field.substring(1)] = -1;\n        } else {\n          sortOptions[field] = 1;\n        }\n      }\n    }\n\n    const [data, total] = await Promise.all([\n      this.faqModel\n        .find(query)\n        .populate('category')\n        .sort(sortOptions)\n        .skip(skip)\n        .limit(limit)\n        .exec(),\n      this.faqModel.countDocuments(query),\n    ]);\n\n    return {\n      success: true,\n      data,\n      metadata: {\n        total,\n        page,\n        limit,\n        hasNext: skip + data.length < total,\n        hasPrev: page > 1,\n      },\n    };\n  }\n\n  async findFaqById(id: string): Promise<FaqDocument> {\n    // Use atomic operation to increment view count and return updated document\n    const faq = await this.faqModel\n      .findOneAndUpdate(\n        {\n          _id: id,\n          deletedAt: null,\n        },\n        {\n          $inc: { viewCount: 1 },\n        },\n        {\n          new: true, // Return the updated document\n        },\n      )\n      .populate('category')\n      .exec();\n\n    if (!faq) {\n      throw new NotFoundException(`FAQ with ID ${id} not found`);\n    }\n\n    return faq;\n  }\n\n  async findPopularFaqs(\n    limit: number = FAQ_CONSTANTS.DEFAULT_POPULAR_LIMIT,\n  ): Promise<FaqDocument[]> {\n    return this.faqModel\n      .find({\n        isVisible: true,\n        deletedAt: null,\n      })\n      .populate('category')\n      .sort({ viewCount: -1 })\n      .limit(limit)\n      .exec();\n  }\n\n  async updateFaq(id: string, updateFaqDto: UpdateFaqDto): Promise<FaqDocument> {\n    const faq = await this.faqModel.findOne({\n      _id: id,\n      deletedAt: null,\n    });\n\n    if (!faq) {\n      throw new NotFoundException(`FAQ with ID ${id} not found`);\n    }\n\n    // Check category exists if being updated\n    if (updateFaqDto.category) {\n      const category = await this.faqCategoryModel.findById(updateFaqDto.category);\n      if (!category) {\n        throw new NotFoundException(`FAQ category with ID ${updateFaqDto.category} not found`);\n      }\n    }\n\n    // Check for order conflicts if category or order is being updated\n    if (updateFaqDto.category || updateFaqDto.order !== undefined) {\n      const categoryId = updateFaqDto.category || faq.category;\n      const order = updateFaqDto.order !== undefined ? updateFaqDto.order : faq.order;\n\n      const existingFaq = await this.faqModel.findOne({\n        _id: { $ne: id },\n        category: categoryId,\n        order: order,\n        deletedAt: null,\n      });\n\n      if (existingFaq) {\n        throw new ConflictException('Another FAQ with this order already exists in this category');\n      }\n    }\n\n    // Use findByIdAndUpdate to perform partial update without triggering validation on unchanged required fields\n    const updatedFaq = await this.faqModel.findByIdAndUpdate(\n      id,\n      { $set: updateFaqDto },\n      { new: true, runValidators: false },\n    );\n\n    return updatedFaq;\n  }\n\n  async removeFaq(id: string, reason?: string, userId?: string): Promise<void> {\n    const faq = await this.faqModel.findOne({\n      _id: id,\n      deletedAt: null,\n    });\n\n    if (!faq) {\n      throw new NotFoundException(`FAQ with ID ${id} not found`);\n    }\n\n    faq.deletedAt = new Date();\n    faq.deleteReason = reason;\n\n    if (userId) {\n      faq.deletedBy = new MongooseSchema.Types.ObjectId(userId);\n    }\n\n    await faq.save();\n  }\n\n  async restoreFaq(id: string): Promise<FaqDocument> {\n    const faq = await this.faqModel.findOne({\n      _id: id,\n      deletedAt: { $ne: null },\n    });\n\n    if (!faq) {\n      throw new NotFoundException(`Deleted FAQ with ID ${id} not found`);\n    }\n\n    faq.deletedAt = null;\n    faq.deletedBy = null;\n    faq.deleteReason = null;\n\n    return faq.save();\n  }\n\n  // FAQ Category CRUD\n  async createCategory(createCategoryDto: CreateFaqCategoryDto): Promise<FaqCategoryDocument> {\n    const existingCategory = await this.faqCategoryModel.findOne({\n      $or: [\n        { 'name.pt-BR': createCategoryDto.name['pt-BR'] },\n        { 'name.en': createCategoryDto.name.en },\n        { order: createCategoryDto.order },\n      ],\n    });\n\n    if (existingCategory) {\n      throw new ConflictException('Category with this name or order already exists');\n    }\n\n    const createdCategory = new this.faqCategoryModel(createCategoryDto);\n    return createdCategory.save();\n  }\n\n  async findAllCategories(): Promise<FaqCategoryDocument[]> {\n    return this.faqCategoryModel.find().sort({ order: 1 }).exec();\n  }\n\n  async findCategoryById(id: string): Promise<FaqCategoryDocument> {\n    const category = await this.faqCategoryModel.findById(id);\n    if (!category) {\n      throw new NotFoundException(`FAQ category with ID ${id} not found`);\n    }\n    return category;\n  }\n\n  async updateCategory(\n    id: string,\n    updateCategoryDto: UpdateFaqCategoryDto,\n  ): Promise<FaqCategoryDocument> {\n    const category = await this.faqCategoryModel.findById(id);\n    if (!category) {\n      throw new NotFoundException(`FAQ category with ID ${id} not found`);\n    }\n\n    // Check for name conflicts if name is being updated\n    if (updateCategoryDto.name) {\n      const nameConflict = await this.faqCategoryModel.findOne({\n        _id: { $ne: id },\n        $or: [\n          { 'name.pt-BR': updateCategoryDto.name['pt-BR'] },\n          { 'name.en': updateCategoryDto.name.en },\n        ],\n      });\n\n      if (nameConflict) {\n        throw new ConflictException('Another category with this name already exists');\n      }\n    }\n\n    // Handle order reordering if order is being updated\n    if (updateCategoryDto.order !== undefined && updateCategoryDto.order !== category.order) {\n      const oldOrder = category.order;\n      const newOrder = updateCategoryDto.order;\n\n      // Check if the new order position exists\n      const targetCategory = await this.faqCategoryModel.findOne({\n        _id: { $ne: id },\n        order: newOrder,\n      });\n\n      if (targetCategory) {\n        // Use a temporary negative value to avoid unique constraint violation during swap\n        const tempOrder = -1 - Date.now(); // Guaranteed unique temporary value\n\n        // Step 1: Move current category to temporary value\n        await this.faqCategoryModel.findByIdAndUpdate(id, {\n          $set: { order: tempOrder },\n        });\n\n        // Step 2: Move target category to old position\n        await this.faqCategoryModel.findByIdAndUpdate(targetCategory._id, {\n          $set: { order: oldOrder },\n        });\n\n        // Step 3: Move current category to new position\n        await this.faqCategoryModel.findByIdAndUpdate(id, {\n          $set: { order: newOrder },\n        });\n\n        // If there are other fields to update, apply them now\n        if (updateCategoryDto.name) {\n          const updatedCategory = await this.faqCategoryModel.findByIdAndUpdate(\n            id,\n            { $set: { name: updateCategoryDto.name } },\n            { new: true, runValidators: false },\n          );\n          return updatedCategory;\n        }\n\n        // Return the updated category\n        return this.faqCategoryModel.findById(id);\n      }\n    }\n\n    // Use findByIdAndUpdate to perform partial update without triggering validation on unchanged required fields\n    const updatedCategory = await this.faqCategoryModel.findByIdAndUpdate(\n      id,\n      { $set: updateCategoryDto },\n      { new: true, runValidators: false },\n    );\n\n    return updatedCategory;\n  }\n\n  async removeCategory(id: string): Promise<void> {\n    // Check if any FAQs are using this category\n    const faqsInCategory = await this.faqModel.findOne({\n      category: id,\n      deletedAt: null,\n    });\n\n    if (faqsInCategory) {\n      throw new ConflictException(\n        'Cannot delete category: FAQs are still assigned to this category',\n      );\n    }\n\n    const result = await this.faqCategoryModel.deleteOne({ _id: id });\n    if (result.deletedCount === 0) {\n      throw new NotFoundException(`FAQ category with ID ${id} not found`);\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "319d043b2a397248e989acd92f57279bea3f8a9f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_261sd32qwf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_261sd32qwf();
var __decorate =
/* istanbul ignore next */
(cov_261sd32qwf().s[0]++,
/* istanbul ignore next */
(cov_261sd32qwf().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_261sd32qwf().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_261sd32qwf().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_261sd32qwf().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_261sd32qwf().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_261sd32qwf().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_261sd32qwf().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_261sd32qwf().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_261sd32qwf().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_261sd32qwf().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_261sd32qwf().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_261sd32qwf().b[3][0]++;
    cov_261sd32qwf().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_261sd32qwf().b[3][1]++;
    cov_261sd32qwf().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_261sd32qwf().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_261sd32qwf().b[5][0]++;
        cov_261sd32qwf().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_261sd32qwf().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_261sd32qwf().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_261sd32qwf().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_261sd32qwf().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_261sd32qwf().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_261sd32qwf().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_261sd32qwf().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_261sd32qwf().s[9]++;
  return /* istanbul ignore next */(cov_261sd32qwf().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_261sd32qwf().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_261sd32qwf().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_261sd32qwf().s[10]++,
/* istanbul ignore next */
(cov_261sd32qwf().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_261sd32qwf().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_261sd32qwf().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_261sd32qwf().f[1]++;
  cov_261sd32qwf().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_261sd32qwf().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_261sd32qwf().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_261sd32qwf().b[11][0]++;
    cov_261sd32qwf().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_261sd32qwf().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_261sd32qwf().s[13]++,
/* istanbul ignore next */
(cov_261sd32qwf().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_261sd32qwf().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_261sd32qwf().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_261sd32qwf().f[2]++;
  cov_261sd32qwf().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[3]++;
    cov_261sd32qwf().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
/* istanbul ignore next */
cov_261sd32qwf().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_261sd32qwf().s[17]++;
exports.FaqService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_261sd32qwf().s[18]++, require("@nestjs/common"));
const mongoose_1 =
/* istanbul ignore next */
(cov_261sd32qwf().s[19]++, require("@nestjs/mongoose"));
const mongoose_2 =
/* istanbul ignore next */
(cov_261sd32qwf().s[20]++, require("mongoose"));
const faq_schema_1 =
/* istanbul ignore next */
(cov_261sd32qwf().s[21]++, require("./schemas/faq.schema"));
const faq_category_schema_1 =
/* istanbul ignore next */
(cov_261sd32qwf().s[22]++, require("./schemas/faq-category.schema"));
const faq_constants_1 =
/* istanbul ignore next */
(cov_261sd32qwf().s[23]++, require("./faq.constants"));
/* istanbul ignore next */
cov_261sd32qwf().s[24]++;
let FaqService = class FaqService {
  faqModel;
  faqCategoryModel;
  constructor(faqModel, faqCategoryModel) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[4]++;
    cov_261sd32qwf().s[25]++;
    this.faqModel = faqModel;
    /* istanbul ignore next */
    cov_261sd32qwf().s[26]++;
    this.faqCategoryModel = faqCategoryModel;
  }
  // FAQ CRUD
  async createFaq(createFaqDto) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[5]++;
    // Verify category exists
    const category =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[27]++, await this.faqCategoryModel.findById(createFaqDto.category));
    /* istanbul ignore next */
    cov_261sd32qwf().s[28]++;
    if (!category) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[14][0]++;
      cov_261sd32qwf().s[29]++;
      throw new common_1.NotFoundException(`FAQ category with ID ${createFaqDto.category} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[14][1]++;
    }
    // Auto-generate order if not provided
    cov_261sd32qwf().s[30]++;
    if (createFaqDto.order === undefined) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[15][0]++;
      const maxOrderFaq =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[31]++, await this.faqModel.findOne({
        category: createFaqDto.category,
        deletedAt: null
      }).sort({
        order: -1
      }).exec());
      /* istanbul ignore next */
      cov_261sd32qwf().s[32]++;
      createFaqDto.order = maxOrderFaq ?
      /* istanbul ignore next */
      (cov_261sd32qwf().b[16][0]++, maxOrderFaq.order + 1) :
      /* istanbul ignore next */
      (cov_261sd32qwf().b[16][1]++, 0);
    } else {
      /* istanbul ignore next */
      cov_261sd32qwf().b[15][1]++;
      // Check for order conflicts within the category if order is provided
      const existingFaq =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[33]++, await this.faqModel.findOne({
        category: createFaqDto.category,
        order: createFaqDto.order,
        deletedAt: null
      }));
      /* istanbul ignore next */
      cov_261sd32qwf().s[34]++;
      if (existingFaq) {
        /* istanbul ignore next */
        cov_261sd32qwf().b[17][0]++;
        cov_261sd32qwf().s[35]++;
        throw new common_1.ConflictException('Another FAQ with this order already exists in this category');
      } else
      /* istanbul ignore next */
      {
        cov_261sd32qwf().b[17][1]++;
      }
    }
    const createdFaq =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[36]++, new this.faqModel(createFaqDto));
    /* istanbul ignore next */
    cov_261sd32qwf().s[37]++;
    return createdFaq.save();
  }
  async findAllFaqs(filterDto) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[6]++;
    const {
      page =
      /* istanbul ignore next */
      (cov_261sd32qwf().b[18][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_261sd32qwf().b[19][0]++, 20),
      sort,
      search,
      category,
      isVisible,
      lang
    } =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[38]++, filterDto);
    const query =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[39]++, {
      deletedAt: null
    });
    /* istanbul ignore next */
    cov_261sd32qwf().s[40]++;
    if (search) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[20][0]++;
      const searchFields =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[41]++, ['question.pt-BR', 'question.en', 'answer.pt-BR', 'answer.en']);
      /* istanbul ignore next */
      cov_261sd32qwf().s[42]++;
      if (lang) {
        /* istanbul ignore next */
        cov_261sd32qwf().b[21][0]++;
        // If language specified, prioritize search in that language
        const langFields =
        /* istanbul ignore next */
        (cov_261sd32qwf().s[43]++, [`question.${lang}`, `answer.${lang}`]);
        /* istanbul ignore next */
        cov_261sd32qwf().s[44]++;
        query.$or = [...langFields.map(field => {
          /* istanbul ignore next */
          cov_261sd32qwf().f[7]++;
          cov_261sd32qwf().s[45]++;
          return {
            [field]: {
              $regex: search,
              $options: 'i'
            }
          };
        }), ...searchFields.map(field => {
          /* istanbul ignore next */
          cov_261sd32qwf().f[8]++;
          cov_261sd32qwf().s[46]++;
          return {
            [field]: {
              $regex: search,
              $options: 'i'
            }
          };
        })];
      } else {
        /* istanbul ignore next */
        cov_261sd32qwf().b[21][1]++;
        cov_261sd32qwf().s[47]++;
        query.$or = searchFields.map(field => {
          /* istanbul ignore next */
          cov_261sd32qwf().f[9]++;
          cov_261sd32qwf().s[48]++;
          return {
            [field]: {
              $regex: search,
              $options: 'i'
            }
          };
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[20][1]++;
    }
    cov_261sd32qwf().s[49]++;
    if (category) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[22][0]++;
      cov_261sd32qwf().s[50]++;
      query.category = category;
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[22][1]++;
    }
    cov_261sd32qwf().s[51]++;
    if (typeof isVisible !== 'undefined') {
      /* istanbul ignore next */
      cov_261sd32qwf().b[23][0]++;
      cov_261sd32qwf().s[52]++;
      query.isVisible = isVisible;
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[23][1]++;
    }
    const skip =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[53]++, (page - 1) * limit);
    let sortOptions =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[54]++, {
      'category.order': 1,
      order: 1
    });
    /* istanbul ignore next */
    cov_261sd32qwf().s[55]++;
    if (sort) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[24][0]++;
      cov_261sd32qwf().s[56]++;
      sortOptions = {};
      const sortFields =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[57]++, sort.split(','));
      /* istanbul ignore next */
      cov_261sd32qwf().s[58]++;
      for (const field of sortFields) {
        /* istanbul ignore next */
        cov_261sd32qwf().s[59]++;
        if (field.startsWith('-')) {
          /* istanbul ignore next */
          cov_261sd32qwf().b[25][0]++;
          cov_261sd32qwf().s[60]++;
          sortOptions[field.substring(1)] = -1;
        } else {
          /* istanbul ignore next */
          cov_261sd32qwf().b[25][1]++;
          cov_261sd32qwf().s[61]++;
          sortOptions[field] = 1;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[24][1]++;
    }
    const [data, total] =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[62]++, await Promise.all([this.faqModel.find(query).populate('category').sort(sortOptions).skip(skip).limit(limit).exec(), this.faqModel.countDocuments(query)]));
    /* istanbul ignore next */
    cov_261sd32qwf().s[63]++;
    return {
      success: true,
      data,
      metadata: {
        total,
        page,
        limit,
        hasNext: skip + data.length < total,
        hasPrev: page > 1
      }
    };
  }
  async findFaqById(id) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[10]++;
    // Use atomic operation to increment view count and return updated document
    const faq =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[64]++, await this.faqModel.findOneAndUpdate({
      _id: id,
      deletedAt: null
    }, {
      $inc: {
        viewCount: 1
      }
    }, {
      new: true // Return the updated document
    }).populate('category').exec());
    /* istanbul ignore next */
    cov_261sd32qwf().s[65]++;
    if (!faq) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[26][0]++;
      cov_261sd32qwf().s[66]++;
      throw new common_1.NotFoundException(`FAQ with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[26][1]++;
    }
    cov_261sd32qwf().s[67]++;
    return faq;
  }
  async findPopularFaqs(limit =
  /* istanbul ignore next */
  (cov_261sd32qwf().b[27][0]++, faq_constants_1.FAQ_CONSTANTS.DEFAULT_POPULAR_LIMIT)) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[11]++;
    cov_261sd32qwf().s[68]++;
    return this.faqModel.find({
      isVisible: true,
      deletedAt: null
    }).populate('category').sort({
      viewCount: -1
    }).limit(limit).exec();
  }
  async updateFaq(id, updateFaqDto) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[12]++;
    const faq =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[69]++, await this.faqModel.findOne({
      _id: id,
      deletedAt: null
    }));
    /* istanbul ignore next */
    cov_261sd32qwf().s[70]++;
    if (!faq) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[28][0]++;
      cov_261sd32qwf().s[71]++;
      throw new common_1.NotFoundException(`FAQ with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[28][1]++;
    }
    // Check category exists if being updated
    cov_261sd32qwf().s[72]++;
    if (updateFaqDto.category) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[29][0]++;
      const category =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[73]++, await this.faqCategoryModel.findById(updateFaqDto.category));
      /* istanbul ignore next */
      cov_261sd32qwf().s[74]++;
      if (!category) {
        /* istanbul ignore next */
        cov_261sd32qwf().b[30][0]++;
        cov_261sd32qwf().s[75]++;
        throw new common_1.NotFoundException(`FAQ category with ID ${updateFaqDto.category} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_261sd32qwf().b[30][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[29][1]++;
    }
    // Check for order conflicts if category or order is being updated
    cov_261sd32qwf().s[76]++;
    if (
    /* istanbul ignore next */
    (cov_261sd32qwf().b[32][0]++, updateFaqDto.category) ||
    /* istanbul ignore next */
    (cov_261sd32qwf().b[32][1]++, updateFaqDto.order !== undefined)) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[31][0]++;
      const categoryId =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[77]++,
      /* istanbul ignore next */
      (cov_261sd32qwf().b[33][0]++, updateFaqDto.category) ||
      /* istanbul ignore next */
      (cov_261sd32qwf().b[33][1]++, faq.category));
      const order =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[78]++, updateFaqDto.order !== undefined ?
      /* istanbul ignore next */
      (cov_261sd32qwf().b[34][0]++, updateFaqDto.order) :
      /* istanbul ignore next */
      (cov_261sd32qwf().b[34][1]++, faq.order));
      const existingFaq =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[79]++, await this.faqModel.findOne({
        _id: {
          $ne: id
        },
        category: categoryId,
        order: order,
        deletedAt: null
      }));
      /* istanbul ignore next */
      cov_261sd32qwf().s[80]++;
      if (existingFaq) {
        /* istanbul ignore next */
        cov_261sd32qwf().b[35][0]++;
        cov_261sd32qwf().s[81]++;
        throw new common_1.ConflictException('Another FAQ with this order already exists in this category');
      } else
      /* istanbul ignore next */
      {
        cov_261sd32qwf().b[35][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[31][1]++;
    }
    // Use findByIdAndUpdate to perform partial update without triggering validation on unchanged required fields
    const updatedFaq =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[82]++, await this.faqModel.findByIdAndUpdate(id, {
      $set: updateFaqDto
    }, {
      new: true,
      runValidators: false
    }));
    /* istanbul ignore next */
    cov_261sd32qwf().s[83]++;
    return updatedFaq;
  }
  async removeFaq(id, reason, userId) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[13]++;
    const faq =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[84]++, await this.faqModel.findOne({
      _id: id,
      deletedAt: null
    }));
    /* istanbul ignore next */
    cov_261sd32qwf().s[85]++;
    if (!faq) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[36][0]++;
      cov_261sd32qwf().s[86]++;
      throw new common_1.NotFoundException(`FAQ with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[36][1]++;
    }
    cov_261sd32qwf().s[87]++;
    faq.deletedAt = new Date();
    /* istanbul ignore next */
    cov_261sd32qwf().s[88]++;
    faq.deleteReason = reason;
    /* istanbul ignore next */
    cov_261sd32qwf().s[89]++;
    if (userId) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[37][0]++;
      cov_261sd32qwf().s[90]++;
      faq.deletedBy = new mongoose_2.Schema.Types.ObjectId(userId);
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[37][1]++;
    }
    cov_261sd32qwf().s[91]++;
    await faq.save();
  }
  async restoreFaq(id) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[14]++;
    const faq =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[92]++, await this.faqModel.findOne({
      _id: id,
      deletedAt: {
        $ne: null
      }
    }));
    /* istanbul ignore next */
    cov_261sd32qwf().s[93]++;
    if (!faq) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[38][0]++;
      cov_261sd32qwf().s[94]++;
      throw new common_1.NotFoundException(`Deleted FAQ with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[38][1]++;
    }
    cov_261sd32qwf().s[95]++;
    faq.deletedAt = null;
    /* istanbul ignore next */
    cov_261sd32qwf().s[96]++;
    faq.deletedBy = null;
    /* istanbul ignore next */
    cov_261sd32qwf().s[97]++;
    faq.deleteReason = null;
    /* istanbul ignore next */
    cov_261sd32qwf().s[98]++;
    return faq.save();
  }
  // FAQ Category CRUD
  async createCategory(createCategoryDto) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[15]++;
    const existingCategory =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[99]++, await this.faqCategoryModel.findOne({
      $or: [{
        'name.pt-BR': createCategoryDto.name['pt-BR']
      }, {
        'name.en': createCategoryDto.name.en
      }, {
        order: createCategoryDto.order
      }]
    }));
    /* istanbul ignore next */
    cov_261sd32qwf().s[100]++;
    if (existingCategory) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[39][0]++;
      cov_261sd32qwf().s[101]++;
      throw new common_1.ConflictException('Category with this name or order already exists');
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[39][1]++;
    }
    const createdCategory =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[102]++, new this.faqCategoryModel(createCategoryDto));
    /* istanbul ignore next */
    cov_261sd32qwf().s[103]++;
    return createdCategory.save();
  }
  async findAllCategories() {
    /* istanbul ignore next */
    cov_261sd32qwf().f[16]++;
    cov_261sd32qwf().s[104]++;
    return this.faqCategoryModel.find().sort({
      order: 1
    }).exec();
  }
  async findCategoryById(id) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[17]++;
    const category =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[105]++, await this.faqCategoryModel.findById(id));
    /* istanbul ignore next */
    cov_261sd32qwf().s[106]++;
    if (!category) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[40][0]++;
      cov_261sd32qwf().s[107]++;
      throw new common_1.NotFoundException(`FAQ category with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[40][1]++;
    }
    cov_261sd32qwf().s[108]++;
    return category;
  }
  async updateCategory(id, updateCategoryDto) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[18]++;
    const category =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[109]++, await this.faqCategoryModel.findById(id));
    /* istanbul ignore next */
    cov_261sd32qwf().s[110]++;
    if (!category) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[41][0]++;
      cov_261sd32qwf().s[111]++;
      throw new common_1.NotFoundException(`FAQ category with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[41][1]++;
    }
    // Check for name conflicts if name is being updated
    cov_261sd32qwf().s[112]++;
    if (updateCategoryDto.name) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[42][0]++;
      const nameConflict =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[113]++, await this.faqCategoryModel.findOne({
        _id: {
          $ne: id
        },
        $or: [{
          'name.pt-BR': updateCategoryDto.name['pt-BR']
        }, {
          'name.en': updateCategoryDto.name.en
        }]
      }));
      /* istanbul ignore next */
      cov_261sd32qwf().s[114]++;
      if (nameConflict) {
        /* istanbul ignore next */
        cov_261sd32qwf().b[43][0]++;
        cov_261sd32qwf().s[115]++;
        throw new common_1.ConflictException('Another category with this name already exists');
      } else
      /* istanbul ignore next */
      {
        cov_261sd32qwf().b[43][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[42][1]++;
    }
    // Handle order reordering if order is being updated
    cov_261sd32qwf().s[116]++;
    if (
    /* istanbul ignore next */
    (cov_261sd32qwf().b[45][0]++, updateCategoryDto.order !== undefined) &&
    /* istanbul ignore next */
    (cov_261sd32qwf().b[45][1]++, updateCategoryDto.order !== category.order)) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[44][0]++;
      const oldOrder =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[117]++, category.order);
      const newOrder =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[118]++, updateCategoryDto.order);
      // Check if the new order position exists
      const targetCategory =
      /* istanbul ignore next */
      (cov_261sd32qwf().s[119]++, await this.faqCategoryModel.findOne({
        _id: {
          $ne: id
        },
        order: newOrder
      }));
      /* istanbul ignore next */
      cov_261sd32qwf().s[120]++;
      if (targetCategory) {
        /* istanbul ignore next */
        cov_261sd32qwf().b[46][0]++;
        // Use a temporary negative value to avoid unique constraint violation during swap
        const tempOrder =
        /* istanbul ignore next */
        (cov_261sd32qwf().s[121]++, -1 - Date.now()); // Guaranteed unique temporary value
        // Step 1: Move current category to temporary value
        /* istanbul ignore next */
        cov_261sd32qwf().s[122]++;
        await this.faqCategoryModel.findByIdAndUpdate(id, {
          $set: {
            order: tempOrder
          }
        });
        // Step 2: Move target category to old position
        /* istanbul ignore next */
        cov_261sd32qwf().s[123]++;
        await this.faqCategoryModel.findByIdAndUpdate(targetCategory._id, {
          $set: {
            order: oldOrder
          }
        });
        // Step 3: Move current category to new position
        /* istanbul ignore next */
        cov_261sd32qwf().s[124]++;
        await this.faqCategoryModel.findByIdAndUpdate(id, {
          $set: {
            order: newOrder
          }
        });
        // If there are other fields to update, apply them now
        /* istanbul ignore next */
        cov_261sd32qwf().s[125]++;
        if (updateCategoryDto.name) {
          /* istanbul ignore next */
          cov_261sd32qwf().b[47][0]++;
          const updatedCategory =
          /* istanbul ignore next */
          (cov_261sd32qwf().s[126]++, await this.faqCategoryModel.findByIdAndUpdate(id, {
            $set: {
              name: updateCategoryDto.name
            }
          }, {
            new: true,
            runValidators: false
          }));
          /* istanbul ignore next */
          cov_261sd32qwf().s[127]++;
          return updatedCategory;
        } else
        /* istanbul ignore next */
        {
          cov_261sd32qwf().b[47][1]++;
        }
        // Return the updated category
        cov_261sd32qwf().s[128]++;
        return this.faqCategoryModel.findById(id);
      } else
      /* istanbul ignore next */
      {
        cov_261sd32qwf().b[46][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[44][1]++;
    }
    // Use findByIdAndUpdate to perform partial update without triggering validation on unchanged required fields
    const updatedCategory =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[129]++, await this.faqCategoryModel.findByIdAndUpdate(id, {
      $set: updateCategoryDto
    }, {
      new: true,
      runValidators: false
    }));
    /* istanbul ignore next */
    cov_261sd32qwf().s[130]++;
    return updatedCategory;
  }
  async removeCategory(id) {
    /* istanbul ignore next */
    cov_261sd32qwf().f[19]++;
    // Check if any FAQs are using this category
    const faqsInCategory =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[131]++, await this.faqModel.findOne({
      category: id,
      deletedAt: null
    }));
    /* istanbul ignore next */
    cov_261sd32qwf().s[132]++;
    if (faqsInCategory) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[48][0]++;
      cov_261sd32qwf().s[133]++;
      throw new common_1.ConflictException('Cannot delete category: FAQs are still assigned to this category');
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[48][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_261sd32qwf().s[134]++, await this.faqCategoryModel.deleteOne({
      _id: id
    }));
    /* istanbul ignore next */
    cov_261sd32qwf().s[135]++;
    if (result.deletedCount === 0) {
      /* istanbul ignore next */
      cov_261sd32qwf().b[49][0]++;
      cov_261sd32qwf().s[136]++;
      throw new common_1.NotFoundException(`FAQ category with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_261sd32qwf().b[49][1]++;
    }
  }
};
/* istanbul ignore next */
cov_261sd32qwf().s[137]++;
exports.FaqService = FaqService;
/* istanbul ignore next */
cov_261sd32qwf().s[138]++;
exports.FaqService = FaqService = __decorate([(0, common_1.Injectable)(), __param(0, (0, mongoose_1.InjectModel)(faq_schema_1.Faq.name)), __param(1, (0, mongoose_1.InjectModel)(faq_category_schema_1.FaqCategory.name)), __metadata("design:paramtypes", [mongoose_2.Model, mongoose_2.Model])], FaqService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,