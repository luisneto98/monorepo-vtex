1248752cffdf98d77c5b39c59ec0caf7
"use strict";

/* istanbul ignore next */
function cov_1efwlb9kli() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/auth.controller.ts";
  var hash = "d18d70edf1762b2e21eea83a7832886f82833503";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/auth.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "17": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "19": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "20": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 48
        }
      },
      "21": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "22": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "23": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 65
        }
      },
      "24": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 73
        }
      },
      "25": {
        start: {
          line: 23,
          column: 33
        },
        end: {
          line: 23,
          column: 85
        }
      },
      "26": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 48
        }
      },
      "27": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "28": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 39
        }
      },
      "29": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 65
        }
      },
      "30": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 70
        }
      },
      "31": {
        start: {
          line: 35,
          column: 44
        },
        end: {
          line: 35,
          column: 54
        }
      },
      "32": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 22
        }
      },
      "33": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "34": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "35": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 83
        }
      },
      "36": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 43,
          column: 77
        }
      },
      "37": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 70
        }
      },
      "38": {
        start: {
          line: 47,
          column: 47
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "39": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 22
        }
      },
      "40": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 48
        }
      },
      "41": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 47
        }
      },
      "42": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "43": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "44": {
        start: {
          line: 64,
          column: 27
        },
        end: {
          line: 64,
          column: 71
        }
      },
      "45": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 70
        }
      },
      "46": {
        start: {
          line: 68,
          column: 48
        },
        end: {
          line: 68,
          column: 58
        }
      },
      "47": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 22
        }
      },
      "48": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "49": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 69
        }
      },
      "50": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "51": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 57
        }
      },
      "52": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 94,
          column: 40
        }
      },
      "53": {
        start: {
          line: 95,
          column: 0
        },
        end: {
          line: 162,
          column: 44
        }
      },
      "54": {
        start: {
          line: 163,
          column: 0
        },
        end: {
          line: 200,
          column: 46
        }
      },
      "55": {
        start: {
          line: 201,
          column: 0
        },
        end: {
          line: 220,
          column: 45
        }
      },
      "56": {
        start: {
          line: 221,
          column: 0
        },
        end: {
          line: 245,
          column: 49
        }
      },
      "57": {
        start: {
          line: 246,
          column: 0
        },
        end: {
          line: 306,
          column: 47
        }
      },
      "58": {
        start: {
          line: 307,
          column: 0
        },
        end: {
          line: 311,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 36
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 37
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 50
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 21
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 56
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 42
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 63
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 50
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 71
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 38
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 81
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 43
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 90
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "14": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 15
          },
          end: {
            line: 91,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 15
          },
          end: {
            line: 91,
            column: 48
          }
        }, {
          start: {
            line: 91,
            column: 52
          },
          end: {
            line: 91,
            column: 56
          }
        }],
        line: 91
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/auth.controller.ts",
      mappings: "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",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/auth.controller.ts"],
      sourcesContent: ["import {\n  Controller,\n  Post,\n  Body,\n  UseGuards,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Res,\n  Req,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBody, ApiBearerAuth } from '@nestjs/swagger';\nimport { Response, Request as ExpressRequest } from 'express';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\nimport { JwtAuthGuard } from '@common/guards/jwt-auth.guard';\nimport { Public } from '@common/decorators/public.decorator';\nimport { CurrentUser } from '@common/decorators/current-user.decorator';\nimport { Throttle } from '@nestjs/throttler';\n\n@ApiTags('Authentication')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @Throttle({ default: { limit: 5, ttl: 60000 } }) // 5 requests per minute\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  @ApiOperation({ summary: 'User login' })\n  @ApiBody({\n    type: LoginDto,\n    examples: {\n      admin: {\n        value: {\n          email: 'admin@vtexday.com',\n          password: 'SecurePassword123!',\n        },\n        description: 'Admin user login',\n      },\n      regular: {\n        value: {\n          email: 'user@example.com',\n          password: 'UserPassword456!',\n        },\n        description: 'Regular user login',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Login successful',\n    schema: {\n      example: {\n        accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n        user: {\n          id: '507f1f77bcf86cd799439011',\n          email: 'admin@vtexday.com',\n          role: 'admin',\n        },\n      },\n    },\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Invalid credentials',\n    schema: {\n      example: {\n        statusCode: 401,\n        message: 'Invalid credentials',\n        error: 'Unauthorized',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 429,\n    description: 'Too many requests',\n    schema: {\n      example: {\n        statusCode: 429,\n        message: 'ThrottlerException: Too Many Requests',\n        error: 'Too Many Requests',\n      },\n    },\n  })\n  async login(@Body() loginDto: LoginDto, @Res({ passthrough: true }) response: Response) {\n    const authResult = await this.authService.login(loginDto);\n\n    // Set refresh token in HttpOnly cookie\n    this.setRefreshTokenCookie(response, authResult.refreshToken);\n\n    // Return auth response without refresh token in body\n    const { refreshToken, ...result } = authResult;\n    return result;\n  }\n\n  @Public()\n  @Throttle({ default: { limit: 5, ttl: 60000 } }) // 5 requests per minute\n  @HttpCode(HttpStatus.OK)\n  @Post('refresh')\n  @ApiOperation({ summary: 'Refresh access token using refresh token from cookie' })\n  @ApiResponse({\n    status: 200,\n    description: 'Token refreshed successfully',\n    schema: {\n      example: {\n        accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n        user: {\n          id: '507f1f77bcf86cd799439011',\n          email: 'admin@vtexday.com',\n          role: 'admin',\n        },\n      },\n    },\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Invalid or expired refresh token',\n    schema: {\n      example: {\n        statusCode: 401,\n        message: 'Invalid or expired refresh token',\n        error: 'Unauthorized',\n      },\n    },\n  })\n  async refresh(@Req() request: ExpressRequest, @Res({ passthrough: true }) response: Response) {\n    const refreshToken = this.extractRefreshTokenFromCookie(request);\n\n    if (!refreshToken) {\n      throw new UnauthorizedException('Refresh token not provided');\n    }\n\n    const authResult = await this.authService.refreshTokens(refreshToken);\n\n    // Set new refresh token in HttpOnly cookie\n    this.setRefreshTokenCookie(response, authResult.refreshToken);\n\n    // Return auth response without refresh token in body\n    const { refreshToken: _, ...result } = authResult;\n    return result;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Post('logout')\n  @ApiBearerAuth('JWT-auth')\n  @ApiOperation({ summary: 'Logout user and invalidate tokens' })\n  @ApiResponse({\n    status: 204,\n    description: 'Logout successful',\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized - Invalid or missing JWT token',\n  })\n  async logout(@CurrentUser() user: any, @Res({ passthrough: true }) response: Response) {\n    await this.authService.logout(user.sub);\n\n    // Clear refresh token cookie\n    this.clearRefreshTokenCookie(response);\n\n    return;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  @ApiBearerAuth('JWT-auth')\n  @ApiOperation({ summary: 'Get current user profile' })\n  @ApiResponse({\n    status: 200,\n    description: 'User profile retrieved successfully',\n    schema: {\n      example: {\n        id: '507f1f77bcf86cd799439011',\n        email: 'admin@vtexday.com',\n        role: 'admin',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized - Invalid or missing JWT token',\n  })\n  getProfile(@CurrentUser() user: any) {\n    return {\n      id: user.sub,\n      email: user.email,\n      role: user.role,\n    };\n  }\n\n  @Public()\n  @Post('register')\n  @ApiOperation({ summary: 'Register new user' })\n  @ApiBody({\n    type: RegisterDto,\n    examples: {\n      newUser: {\n        value: {\n          email: 'newuser@example.com',\n          password: 'SecurePassword123!',\n          name: 'Jo\xE3o Silva',\n          company: 'VTEX',\n          phone: '+5511999999999',\n        },\n        description: 'New user registration',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'User registered successfully',\n    schema: {\n      example: {\n        accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n        user: {\n          id: '507f1f77bcf86cd799439011',\n          email: 'newuser@example.com',\n          role: 'user',\n        },\n      },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Validation error or user already exists',\n    schema: {\n      example: {\n        statusCode: 400,\n        message: ['email must be an email', 'password is too weak'],\n        error: 'Bad Request',\n      },\n    },\n  })\n  @ApiResponse({\n    status: 409,\n    description: 'Email already registered',\n    schema: {\n      example: {\n        statusCode: 409,\n        message: 'Email already registered',\n        error: 'Conflict',\n      },\n    },\n  })\n  async register(@Body() registerDto: RegisterDto, @Res({ passthrough: true }) response: Response) {\n    const authResult = await this.authService.register(registerDto);\n\n    // Set refresh token in HttpOnly cookie\n    this.setRefreshTokenCookie(response, authResult.refreshToken);\n\n    // Return auth response without refresh token in body\n    const { refreshToken: __, ...result } = authResult;\n    return result;\n  }\n\n  private setRefreshTokenCookie(response: Response, refreshToken: string) {\n    const cookieOptions = {\n      httpOnly: true,\n      secure: process.env['NODE_ENV'] === 'production',\n      sameSite: 'strict' as const,\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n      path: '/auth/refresh',\n    };\n\n    response.cookie('refreshToken', refreshToken, cookieOptions);\n  }\n\n  private clearRefreshTokenCookie(response: Response) {\n    response.cookie('refreshToken', '', {\n      httpOnly: true,\n      secure: process.env['NODE_ENV'] === 'production',\n      sameSite: 'strict' as const,\n      expires: new Date(0),\n      path: '/auth/refresh',\n    });\n  }\n\n  private extractRefreshTokenFromCookie(request: ExpressRequest): string | null {\n    return request.cookies?.['refreshToken'] || null;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d18d70edf1762b2e21eea83a7832886f82833503"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1efwlb9kli = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1efwlb9kli();
var __decorate =
/* istanbul ignore next */
(cov_1efwlb9kli().s[0]++,
/* istanbul ignore next */
(cov_1efwlb9kli().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1efwlb9kli().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_1efwlb9kli().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_1efwlb9kli().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_1efwlb9kli().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_1efwlb9kli().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_1efwlb9kli().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_1efwlb9kli().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_1efwlb9kli().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_1efwlb9kli().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1efwlb9kli().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_1efwlb9kli().b[3][0]++;
    cov_1efwlb9kli().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_1efwlb9kli().b[3][1]++;
    cov_1efwlb9kli().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_1efwlb9kli().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_1efwlb9kli().b[5][0]++;
        cov_1efwlb9kli().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_1efwlb9kli().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_1efwlb9kli().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_1efwlb9kli().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_1efwlb9kli().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_1efwlb9kli().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_1efwlb9kli().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_1efwlb9kli().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1efwlb9kli().s[9]++;
  return /* istanbul ignore next */(cov_1efwlb9kli().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_1efwlb9kli().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_1efwlb9kli().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_1efwlb9kli().s[10]++,
/* istanbul ignore next */
(cov_1efwlb9kli().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1efwlb9kli().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_1efwlb9kli().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_1efwlb9kli().f[1]++;
  cov_1efwlb9kli().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1efwlb9kli().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1efwlb9kli().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_1efwlb9kli().b[11][0]++;
    cov_1efwlb9kli().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_1efwlb9kli().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_1efwlb9kli().s[13]++,
/* istanbul ignore next */
(cov_1efwlb9kli().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_1efwlb9kli().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_1efwlb9kli().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_1efwlb9kli().f[2]++;
  cov_1efwlb9kli().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[3]++;
    cov_1efwlb9kli().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
/* istanbul ignore next */
cov_1efwlb9kli().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1efwlb9kli().s[17]++;
exports.AuthController = void 0;
const common_1 =
/* istanbul ignore next */
(cov_1efwlb9kli().s[18]++, require("@nestjs/common"));
const swagger_1 =
/* istanbul ignore next */
(cov_1efwlb9kli().s[19]++, require("@nestjs/swagger"));
const auth_service_1 =
/* istanbul ignore next */
(cov_1efwlb9kli().s[20]++, require("./auth.service"));
const login_dto_1 =
/* istanbul ignore next */
(cov_1efwlb9kli().s[21]++, require("./dto/login.dto"));
const register_dto_1 =
/* istanbul ignore next */
(cov_1efwlb9kli().s[22]++, require("./dto/register.dto"));
const jwt_auth_guard_1 =
/* istanbul ignore next */
(cov_1efwlb9kli().s[23]++, require("@common/guards/jwt-auth.guard"));
const public_decorator_1 =
/* istanbul ignore next */
(cov_1efwlb9kli().s[24]++, require("@common/decorators/public.decorator"));
const current_user_decorator_1 =
/* istanbul ignore next */
(cov_1efwlb9kli().s[25]++, require("@common/decorators/current-user.decorator"));
const throttler_1 =
/* istanbul ignore next */
(cov_1efwlb9kli().s[26]++, require("@nestjs/throttler"));
/* istanbul ignore next */
cov_1efwlb9kli().s[27]++;
let AuthController = class AuthController {
  authService;
  constructor(authService) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[4]++;
    cov_1efwlb9kli().s[28]++;
    this.authService = authService;
  }
  async login(loginDto, response) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[5]++;
    const authResult =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[29]++, await this.authService.login(loginDto));
    // Set refresh token in HttpOnly cookie
    /* istanbul ignore next */
    cov_1efwlb9kli().s[30]++;
    this.setRefreshTokenCookie(response, authResult.refreshToken);
    // Return auth response without refresh token in body
    const {
      refreshToken,
      ...result
    } =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[31]++, authResult);
    /* istanbul ignore next */
    cov_1efwlb9kli().s[32]++;
    return result;
  }
  async refresh(request, response) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[6]++;
    const refreshToken =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[33]++, this.extractRefreshTokenFromCookie(request));
    /* istanbul ignore next */
    cov_1efwlb9kli().s[34]++;
    if (!refreshToken) {
      /* istanbul ignore next */
      cov_1efwlb9kli().b[14][0]++;
      cov_1efwlb9kli().s[35]++;
      throw new common_1.UnauthorizedException('Refresh token not provided');
    } else
    /* istanbul ignore next */
    {
      cov_1efwlb9kli().b[14][1]++;
    }
    const authResult =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[36]++, await this.authService.refreshTokens(refreshToken));
    // Set new refresh token in HttpOnly cookie
    /* istanbul ignore next */
    cov_1efwlb9kli().s[37]++;
    this.setRefreshTokenCookie(response, authResult.refreshToken);
    // Return auth response without refresh token in body
    const {
      refreshToken: _,
      ...result
    } =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[38]++, authResult);
    /* istanbul ignore next */
    cov_1efwlb9kli().s[39]++;
    return result;
  }
  async logout(user, response) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[7]++;
    cov_1efwlb9kli().s[40]++;
    await this.authService.logout(user.sub);
    // Clear refresh token cookie
    /* istanbul ignore next */
    cov_1efwlb9kli().s[41]++;
    this.clearRefreshTokenCookie(response);
    /* istanbul ignore next */
    cov_1efwlb9kli().s[42]++;
    return;
  }
  getProfile(user) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[8]++;
    cov_1efwlb9kli().s[43]++;
    return {
      id: user.sub,
      email: user.email,
      role: user.role
    };
  }
  async register(registerDto, response) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[9]++;
    const authResult =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[44]++, await this.authService.register(registerDto));
    // Set refresh token in HttpOnly cookie
    /* istanbul ignore next */
    cov_1efwlb9kli().s[45]++;
    this.setRefreshTokenCookie(response, authResult.refreshToken);
    // Return auth response without refresh token in body
    const {
      refreshToken: __,
      ...result
    } =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[46]++, authResult);
    /* istanbul ignore next */
    cov_1efwlb9kli().s[47]++;
    return result;
  }
  setRefreshTokenCookie(response, refreshToken) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[10]++;
    const cookieOptions =
    /* istanbul ignore next */
    (cov_1efwlb9kli().s[48]++, {
      httpOnly: true,
      secure: process.env['NODE_ENV'] === 'production',
      sameSite: 'strict',
      maxAge: 7 * 24 * 60 * 60 * 1000,
      // 7 days
      path: '/auth/refresh'
    });
    /* istanbul ignore next */
    cov_1efwlb9kli().s[49]++;
    response.cookie('refreshToken', refreshToken, cookieOptions);
  }
  clearRefreshTokenCookie(response) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[11]++;
    cov_1efwlb9kli().s[50]++;
    response.cookie('refreshToken', '', {
      httpOnly: true,
      secure: process.env['NODE_ENV'] === 'production',
      sameSite: 'strict',
      expires: new Date(0),
      path: '/auth/refresh'
    });
  }
  extractRefreshTokenFromCookie(request) {
    /* istanbul ignore next */
    cov_1efwlb9kli().f[12]++;
    cov_1efwlb9kli().s[51]++;
    return /* istanbul ignore next */(cov_1efwlb9kli().b[15][0]++, request.cookies?.['refreshToken']) ||
    /* istanbul ignore next */
    (cov_1efwlb9kli().b[15][1]++, null);
  }
};
/* istanbul ignore next */
cov_1efwlb9kli().s[52]++;
exports.AuthController = AuthController;
/* istanbul ignore next */
cov_1efwlb9kli().s[53]++;
__decorate([(0, public_decorator_1.Public)(), (0, throttler_1.Throttle)({
  default: {
    limit: 5,
    ttl: 60000
  }
}) // 5 requests per minute
, (0, common_1.HttpCode)(common_1.HttpStatus.OK), (0, common_1.Post)('login'), (0, swagger_1.ApiOperation)({
  summary: 'User login'
}), (0, swagger_1.ApiBody)({
  type: login_dto_1.LoginDto,
  examples: {
    admin: {
      value: {
        email: 'admin@vtexday.com',
        password: 'SecurePassword123!'
      },
      description: 'Admin user login'
    },
    regular: {
      value: {
        email: 'user@example.com',
        password: 'UserPassword456!'
      },
      description: 'Regular user login'
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'Login successful',
  schema: {
    example: {
      accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',
      user: {
        id: '507f1f77bcf86cd799439011',
        email: 'admin@vtexday.com',
        role: 'admin'
      }
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Invalid credentials',
  schema: {
    example: {
      statusCode: 401,
      message: 'Invalid credentials',
      error: 'Unauthorized'
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 429,
  description: 'Too many requests',
  schema: {
    example: {
      statusCode: 429,
      message: 'ThrottlerException: Too Many Requests',
      error: 'Too Many Requests'
    }
  }
}), __param(0, (0, common_1.Body)()), __param(1, (0, common_1.Res)({
  passthrough: true
})), __metadata("design:type", Function), __metadata("design:paramtypes", [login_dto_1.LoginDto, Object]), __metadata("design:returntype", Promise)], AuthController.prototype, "login", null);
/* istanbul ignore next */
cov_1efwlb9kli().s[54]++;
__decorate([(0, public_decorator_1.Public)(), (0, throttler_1.Throttle)({
  default: {
    limit: 5,
    ttl: 60000
  }
}) // 5 requests per minute
, (0, common_1.HttpCode)(common_1.HttpStatus.OK), (0, common_1.Post)('refresh'), (0, swagger_1.ApiOperation)({
  summary: 'Refresh access token using refresh token from cookie'
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'Token refreshed successfully',
  schema: {
    example: {
      accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',
      user: {
        id: '507f1f77bcf86cd799439011',
        email: 'admin@vtexday.com',
        role: 'admin'
      }
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Invalid or expired refresh token',
  schema: {
    example: {
      statusCode: 401,
      message: 'Invalid or expired refresh token',
      error: 'Unauthorized'
    }
  }
}), __param(0, (0, common_1.Req)()), __param(1, (0, common_1.Res)({
  passthrough: true
})), __metadata("design:type", Function), __metadata("design:paramtypes", [Object, Object]), __metadata("design:returntype", Promise)], AuthController.prototype, "refresh", null);
/* istanbul ignore next */
cov_1efwlb9kli().s[55]++;
__decorate([(0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard), (0, common_1.HttpCode)(common_1.HttpStatus.NO_CONTENT), (0, common_1.Post)('logout'), (0, swagger_1.ApiBearerAuth)('JWT-auth'), (0, swagger_1.ApiOperation)({
  summary: 'Logout user and invalidate tokens'
}), (0, swagger_1.ApiResponse)({
  status: 204,
  description: 'Logout successful'
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Unauthorized - Invalid or missing JWT token'
}), __param(0, (0, current_user_decorator_1.CurrentUser)()), __param(1, (0, common_1.Res)({
  passthrough: true
})), __metadata("design:type", Function), __metadata("design:paramtypes", [Object, Object]), __metadata("design:returntype", Promise)], AuthController.prototype, "logout", null);
/* istanbul ignore next */
cov_1efwlb9kli().s[56]++;
__decorate([(0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard), (0, common_1.Get)('profile'), (0, swagger_1.ApiBearerAuth)('JWT-auth'), (0, swagger_1.ApiOperation)({
  summary: 'Get current user profile'
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'User profile retrieved successfully',
  schema: {
    example: {
      id: '507f1f77bcf86cd799439011',
      email: 'admin@vtexday.com',
      role: 'admin'
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Unauthorized - Invalid or missing JWT token'
}), __param(0, (0, current_user_decorator_1.CurrentUser)()), __metadata("design:type", Function), __metadata("design:paramtypes", [Object]), __metadata("design:returntype", void 0)], AuthController.prototype, "getProfile", null);
/* istanbul ignore next */
cov_1efwlb9kli().s[57]++;
__decorate([(0, public_decorator_1.Public)(), (0, common_1.Post)('register'), (0, swagger_1.ApiOperation)({
  summary: 'Register new user'
}), (0, swagger_1.ApiBody)({
  type: register_dto_1.RegisterDto,
  examples: {
    newUser: {
      value: {
        email: 'newuser@example.com',
        password: 'SecurePassword123!',
        name: 'João Silva',
        company: 'VTEX',
        phone: '+5511999999999'
      },
      description: 'New user registration'
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 201,
  description: 'User registered successfully',
  schema: {
    example: {
      accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',
      user: {
        id: '507f1f77bcf86cd799439011',
        email: 'newuser@example.com',
        role: 'user'
      }
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 400,
  description: 'Validation error or user already exists',
  schema: {
    example: {
      statusCode: 400,
      message: ['email must be an email', 'password is too weak'],
      error: 'Bad Request'
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 409,
  description: 'Email already registered',
  schema: {
    example: {
      statusCode: 409,
      message: 'Email already registered',
      error: 'Conflict'
    }
  }
}), __param(0, (0, common_1.Body)()), __param(1, (0, common_1.Res)({
  passthrough: true
})), __metadata("design:type", Function), __metadata("design:paramtypes", [register_dto_1.RegisterDto, Object]), __metadata("design:returntype", Promise)], AuthController.prototype, "register", null);
/* istanbul ignore next */
cov_1efwlb9kli().s[58]++;
exports.AuthController = AuthController = __decorate([(0, swagger_1.ApiTags)('Authentication'), (0, common_1.Controller)('auth'), __metadata("design:paramtypes", [auth_service_1.AuthService])], AuthController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,