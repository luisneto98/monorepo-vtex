{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/notifications/schemas/notification.schema.ts","mappings":";;;;;;;;;;;;AAAA,+CAA+D;AAC/D,uCAA2C;AAI3C,IAAY,kBAMX;AAND,WAAY,kBAAkB;IAC5B,qCAAe,CAAA;IACf,6CAAuB,CAAA;IACvB,yCAAmB,CAAA;IACnB,mCAAa,CAAA;IACb,uCAAiB,CAAA;AACnB,CAAC,EANW,kBAAkB,kCAAlB,kBAAkB,QAM7B;AAGM,IAAM,YAAY,GAAlB,MAAM,YAAY;IAEvB,KAAK,CAAS;IAGd,OAAO,CAAS;IAGhB,WAAW,CAAQ;IAGnB,MAAM,CAAQ;IAOd,MAAM,CAAqB;IAG3B,WAAW,CAAS;IAGpB,cAAc,CAAS;IAGvB,WAAW,CAAS;IAGpB,SAAS,CAAiB;IAG1B,QAAQ,CAAW;IAGnB,QAAQ,CAAuB;IAG/B,SAAS,CAAO;IAGhB,SAAS,CAAO;CACjB,CAAA;AA3CY,oCAAY;AAEvB;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;;2CAC1B;AAGd;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;;6CACzB;AAGhB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;8BACP,IAAI;iDAAC;AAGnB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;8BACZ,IAAI;4CAAC;AAOd;IALC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC;QACvC,OAAO,EAAE,kBAAkB,CAAC,KAAK;KAClC,CAAC;;4CACyB;AAG3B;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;;iDACjB;AAGpB;IADC,IAAA,eAAI,EAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;;oDACE;AAGvB;IADC,IAAA,eAAI,EAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;;iDACD;AAGpB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACjD,gBAAK,CAAC,QAAQ;+CAAC;AAG1B;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;;8CACnB;AAGnB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;8CACQ;AAG/B;IADC,IAAA,eAAI,GAAE;8BACI,IAAI;+CAAC;AAGhB;IADC,IAAA,eAAI,GAAE;8BACI,IAAI;+CAAC;uBA1CL,YAAY;IADxB,IAAA,iBAAM,EAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;GAChB,YAAY,CA2CxB;AAEY,QAAA,kBAAkB,GAAG,wBAAa,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AAE7E,0BAA0B;AAC1B,0BAAkB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;AACxD,0BAAkB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1D,0BAAkB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/notifications/schemas/notification.schema.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\nexport type NotificationDocument = Notification & Document;\n\nexport enum NotificationStatus {\n  DRAFT = 'draft',\n  SCHEDULED = 'scheduled',\n  SENDING = 'sending',\n  SENT = 'sent',\n  FAILED = 'failed',\n}\n\n@Schema({ timestamps: true })\nexport class Notification {\n  @Prop({ required: true, maxlength: 65 })\n  title: string;\n\n  @Prop({ required: true, maxlength: 240 })\n  message: string;\n\n  @Prop({ type: Date })\n  scheduledAt?: Date;\n\n  @Prop({ type: Date })\n  sentAt?: Date;\n\n  @Prop({\n    type: String,\n    enum: Object.values(NotificationStatus),\n    default: NotificationStatus.DRAFT,\n  })\n  status: NotificationStatus;\n\n  @Prop({ required: true, default: 0 })\n  deviceCount: number;\n\n  @Prop({ default: 0 })\n  deliveredCount: number;\n\n  @Prop({ default: 0 })\n  failedCount: number;\n\n  @Prop({ type: Types.ObjectId, ref: 'User', required: true })\n  createdBy: Types.ObjectId;\n\n  @Prop({ type: [String], default: [] })\n  segments: string[];\n\n  @Prop({ type: Object })\n  metadata?: Record<string, any>;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const NotificationSchema = SchemaFactory.createForClass(Notification);\n\n// Indexes for performance\nNotificationSchema.index({ status: 1, scheduledAt: 1 });\nNotificationSchema.index({ createdBy: 1, createdAt: -1 });\nNotificationSchema.index({ sentAt: -1 });\n"],"version":3}