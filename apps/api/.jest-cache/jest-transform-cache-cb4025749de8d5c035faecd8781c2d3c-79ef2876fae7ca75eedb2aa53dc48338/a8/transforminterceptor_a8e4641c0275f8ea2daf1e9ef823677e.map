{"version":3,"names":["cov_pgbc49huk","actualCoverage","common_1","s","require","operators_1","TransformInterceptor","intercept","context","next","f","ctx","switchToHttp","response","getResponse","handle","pipe","map","data","statusCode","message","timestamp","Date","toISOString","exports","__decorate","Injectable"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/interceptors/transform.interceptor.ts"],"sourcesContent":["import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response<T> {\n  statusCode: number;\n  message: string;\n  data: T;\n  timestamp: string;\n}\n\n@Injectable()\nexport class TransformInterceptor<T> implements NestInterceptor<T, Response<T>> {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<Response<T>> {\n    const ctx = context.switchToHttp();\n    const response = ctx.getResponse();\n\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: response.statusCode,\n        message: 'Success',\n        data,\n        timestamp: new Date().toISOString(),\n      })),\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBI;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjBJ,MAAAE,QAAA;AAAA;AAAA,CAAAF,aAAA,GAAAG,CAAA,QAAAC,OAAA;AAEA,MAAAC,WAAA;AAAA;AAAA,CAAAL,aAAA,GAAAG,CAAA,QAAAC,OAAA;AAAqC;AAAAJ,aAAA,GAAAG,CAAA;AAU9B,IAAMG,oBAAoB,GAA1B,MAAMA,oBAAoB;EAC/BC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;IAAA;IAAAT,aAAA,GAAAU,CAAA;IACpD,MAAMC,GAAG;IAAA;IAAA,CAAAX,aAAA,GAAAG,CAAA,QAAGK,OAAO,CAACI,YAAY,EAAE;IAClC,MAAMC,QAAQ;IAAA;IAAA,CAAAb,aAAA,GAAAG,CAAA,QAAGQ,GAAG,CAACG,WAAW,EAAE;IAAC;IAAAd,aAAA,GAAAG,CAAA;IAEnC,OAAOM,IAAI,CAACM,MAAM,EAAE,CAACC,IAAI,CACvB,IAAAX,WAAA,CAAAY,GAAG,EAAEC,IAAI,IAAM;MAAA;MAAAlB,aAAA,GAAAU,CAAA;MAAAV,aAAA,GAAAG,CAAA;MAAA;QACbgB,UAAU,EAAEN,QAAQ,CAACM,UAAU;QAC/BC,OAAO,EAAE,SAAS;QAClBF,IAAI;QACJG,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;OAClC;KAAC,CAAC,CACJ;EACH;CACD;AAAA;AAAAvB,aAAA,GAAAG,CAAA;AAdYqB,OAAA,CAAAlB,oBAAA,GAAAA,oBAAA;AAAoB;AAAAN,aAAA,GAAAG,CAAA;+BAApBG,oBAAoB,GAAAmB,UAAA,EADhC,IAAAvB,QAAA,CAAAwB,UAAU,GAAE,C,EACApB,oBAAoB,CAchC","ignoreList":[]}