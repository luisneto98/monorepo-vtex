e54aca8e68ab2e66f3114e225b7d0a97
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateSpeakerDto = exports.SocialLinksDto = void 0;
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const swagger_1 = require("@nestjs/swagger");
const multilingual_dto_1 = require("@common/dto/multilingual.dto");
class SocialLinksDto {
    linkedin;
    twitter;
    github;
    website;
}
exports.SocialLinksDto = SocialLinksDto;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'LinkedIn profile URL',
        example: 'https://linkedin.com/in/carlos-silva',
        format: 'url',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUrl)(),
    __metadata("design:type", String)
], SocialLinksDto.prototype, "linkedin", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Twitter/X profile URL',
        example: 'https://twitter.com/carlossilva',
        format: 'url',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUrl)(),
    __metadata("design:type", String)
], SocialLinksDto.prototype, "twitter", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'GitHub profile URL',
        example: 'https://github.com/carlossilva',
        format: 'url',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUrl)(),
    __metadata("design:type", String)
], SocialLinksDto.prototype, "github", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Personal website URL',
        example: 'https://carlossilva.com',
        format: 'url',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsUrl)(),
    __metadata("design:type", String)
], SocialLinksDto.prototype, "website", void 0);
class CreateSpeakerDto {
    name;
    bio;
    photoUrl;
    company;
    position;
    socialLinks;
    isHighlight;
    tags;
    isVisible;
}
exports.CreateSpeakerDto = CreateSpeakerDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Speaker full name',
        example: 'Carlos Eduardo Silva',
        minLength: 3,
        maxLength: 100,
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MinLength)(3),
    (0, class_validator_1.MaxLength)(100),
    __metadata("design:type", String)
], CreateSpeakerDto.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Speaker biography in multiple languages',
        type: multilingual_dto_1.MultilingualTextDto,
        example: {
            'pt-BR': 'Carlos é um especialista em tecnologia com mais de 15 anos de experiência...',
            en: 'Carlos is a technology specialist with over 15 years of experience...',
        },
    }),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => multilingual_dto_1.MultilingualTextDto),
    __metadata("design:type", multilingual_dto_1.MultilingualTextDto)
], CreateSpeakerDto.prototype, "bio", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'URL to speaker photo',
        example: 'https://cdn.vtexday.com/speakers/carlos-silva.jpg',
        format: 'url',
    }),
    (0, class_validator_1.IsUrl)(),
    __metadata("design:type", String)
], CreateSpeakerDto.prototype, "photoUrl", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Speaker company',
        example: 'VTEX',
        maxLength: 100,
    }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.MaxLength)(100),
    __metadata("design:type", String)
], CreateSpeakerDto.prototype, "company", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Speaker position/title in multiple languages',
        type: multilingual_dto_1.MultilingualTextDto,
        example: {
            'pt-BR': 'Diretor de Tecnologia',
            en: 'Chief Technology Officer',
        },
    }),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => multilingual_dto_1.MultilingualTextDto),
    __metadata("design:type", multilingual_dto_1.MultilingualTextDto)
], CreateSpeakerDto.prototype, "position", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Social media links',
        type: SocialLinksDto,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => SocialLinksDto),
    __metadata("design:type", SocialLinksDto)
], CreateSpeakerDto.prototype, "socialLinks", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Mark speaker as highlighted',
        default: false,
        example: true,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateSpeakerDto.prototype, "isHighlight", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Tags for categorization',
        example: ['AI', 'E-commerce', 'Innovation'],
        type: [String],
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsString)({ each: true }),
    __metadata("design:type", Array)
], CreateSpeakerDto.prototype, "tags", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Speaker visibility status',
        default: true,
        example: true,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateSpeakerDto.prototype, "isVisible", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,