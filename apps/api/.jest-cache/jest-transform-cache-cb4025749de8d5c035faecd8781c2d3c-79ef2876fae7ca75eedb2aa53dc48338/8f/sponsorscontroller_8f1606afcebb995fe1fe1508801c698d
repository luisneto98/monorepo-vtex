bedf76c8da934f4c978071fd5ec6991b
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SponsorsController = void 0;
const common_1 = require("@nestjs/common");
const platform_express_1 = require("@nestjs/platform-express");
const throttler_1 = require("@nestjs/throttler");
const swagger_1 = require("@nestjs/swagger");
const sponsors_service_1 = require("./sponsors.service");
const jwt_auth_guard_1 = require("@common/guards/jwt-auth.guard");
const roles_guard_1 = require("@common/guards/roles.guard");
const roles_decorator_1 = require("@common/decorators/roles.decorator");
const user_types_1 = require("@shared/types/user.types");
const public_decorator_1 = require("@common/decorators/public.decorator");
const create_sponsor_dto_1 = require("./dto/create-sponsor.dto");
const update_sponsor_dto_1 = require("./dto/update-sponsor.dto");
const sponsor_filter_dto_1 = require("./dto/sponsor-filter.dto");
const create_sponsor_tier_dto_1 = require("./dto/create-sponsor-tier.dto");
const update_sponsor_tier_dto_1 = require("./dto/update-sponsor-tier.dto");
const reorder_tiers_dto_1 = require("./dto/reorder-tiers.dto");
const api_response_dto_1 = require("@common/dto/api-response.dto");
let SponsorsController = class SponsorsController {
    sponsorsService;
    constructor(sponsorsService) {
        this.sponsorsService = sponsorsService;
    }
    // ====================================
    // SPONSOR TIER ENDPOINTS (must come before :id routes)
    // ====================================
    async createTier(createTierDto) {
        const tier = await this.sponsorsService.createTier(createTierDto);
        return api_response_dto_1.ApiResponse.success(tier);
    }
    async findAllTiers() {
        const tiers = await this.sponsorsService.findAllTiers();
        return api_response_dto_1.ApiResponse.success(tiers);
    }
    async findOneTier(id) {
        const tier = await this.sponsorsService.findTierById(id);
        return api_response_dto_1.ApiResponse.success(tier);
    }
    async reorderTiers(reorderDto) {
        await this.sponsorsService.reorderTiers(reorderDto.tierIds);
        return api_response_dto_1.ApiResponse.success({ message: 'Tiers reordered successfully' });
    }
    async updateTier(id, updateTierDto) {
        const tier = await this.sponsorsService.updateTier(id, updateTierDto);
        return api_response_dto_1.ApiResponse.success(tier);
    }
    async removeTier(id) {
        await this.sponsorsService.removeTier(id);
    }
    // ====================================
    // SPONSOR ENDPOINTS
    // ====================================
    async create(createSponsorDto) {
        const sponsor = await this.sponsorsService.createSponsor(createSponsorDto);
        return api_response_dto_1.ApiResponse.success(sponsor);
    }
    async findAll(filterDto) {
        const result = await this.sponsorsService.findAllSponsors(filterDto);
        return api_response_dto_1.ApiResponse.success(result.data, result.metadata);
    }
    async findPublicSponsors(page, limit) {
        const result = await this.sponsorsService.findPublicSponsors(page, limit);
        return api_response_dto_1.ApiResponse.success(result.data, result.metadata);
    }
    async findPublicSponsorsByTier() {
        const sponsors = await this.sponsorsService.findPublicSponsorsByTier();
        return api_response_dto_1.ApiResponse.success(sponsors);
    }
    async findGroupedByTier() {
        const sponsors = await this.sponsorsService.findSponsorsByTier();
        return api_response_dto_1.ApiResponse.success(sponsors);
    }
    async findOne(id) {
        const sponsor = await this.sponsorsService.findSponsorById(id);
        return api_response_dto_1.ApiResponse.success(sponsor);
    }
    async update(id, updateSponsorDto) {
        const sponsor = await this.sponsorsService.updateSponsor(id, updateSponsorDto);
        return api_response_dto_1.ApiResponse.success(sponsor);
    }
    async remove(id, req, reason) {
        const userId = req.user?.id;
        await this.sponsorsService.removeSponsor(id, reason, userId);
    }
    async restore(id) {
        const sponsor = await this.sponsorsService.restoreSponsor(id);
        return api_response_dto_1.ApiResponse.success(sponsor);
    }
    async uploadLogo(id, file) {
        if (!file) {
            throw new common_1.BadRequestException('No file provided');
        }
        const logoUrl = await this.sponsorsService.uploadLogo(id, file);
        return api_response_dto_1.ApiResponse.success({ logoUrl });
    }
};
exports.SponsorsController = SponsorsController;
__decorate([
    (0, swagger_1.ApiTags)('Sponsor Tiers'),
    (0, common_1.Post)('tiers'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN),
    (0, common_1.HttpCode)(common_1.HttpStatus.CREATED),
    (0, swagger_1.ApiBearerAuth)('JWT-auth'),
    (0, swagger_1.ApiOperation)({ summary: 'Create new sponsor tier (Super Admin only)' }),
    (0, swagger_1.ApiBody)({ type: create_sponsor_tier_dto_1.CreateSponsorTierDto }),
    (0, swagger_1.ApiResponse)({
        status: 201,
        description: 'Tier created successfully',
        schema: {
            example: {
                success: true,
                data: {
                    _id: '507f1f77bcf86cd799439012',
                    name: { 'pt-BR': 'Diamante', en: 'Diamond' },
                    priority: 1,
                    benefits: { 'pt-BR': ['Benefício 1', 'Benefício 2'], en: ['Benefit 1', 'Benefit 2'] },
                    maxSlots: 3,
                },
            },
        },
    }),
    (0, swagger_1.ApiResponse)({ status: 400, description: 'Validation error' }),
    (0, swagger_1.ApiResponse)({ status: 401, description: 'Unauthorized' }),
    (0, swagger_1.ApiResponse)({ status: 403, description: 'Forbidden' }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [create_sponsor_tier_dto_1.CreateSponsorTierDto]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "createTier", null);
__decorate([
    (0, swagger_1.ApiTags)('Sponsor Tiers'),
    (0, common_1.Get)('tiers'),
    (0, public_decorator_1.Public)(),
    (0, swagger_1.ApiOperation)({ summary: 'List all sponsor tiers' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'List of sponsor tiers',
        schema: {
            example: {
                success: true,
                data: [
                    {
                        _id: '507f1f77bcf86cd799439012',
                        name: { 'pt-BR': 'Diamante', en: 'Diamond' },
                        priority: 1,
                        maxSlots: 3,
                        currentSponsors: 2,
                    },
                ],
            },
        },
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "findAllTiers", null);
__decorate([
    (0, swagger_1.ApiTags)('Sponsor Tiers'),
    (0, common_1.Get)('tiers/:id'),
    (0, public_decorator_1.Public)(),
    (0, swagger_1.ApiOperation)({ summary: 'Get sponsor tier by ID' }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'Tier ID' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Tier details',
    }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Tier not found' }),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "findOneTier", null);
__decorate([
    (0, swagger_1.ApiTags)('Sponsor Tiers'),
    (0, common_1.Patch)('tiers/reorder'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN),
    (0, swagger_1.ApiBearerAuth)('JWT-auth'),
    (0, swagger_1.ApiOperation)({ summary: 'Reorder sponsor tiers (Super Admin only)' }),
    (0, swagger_1.ApiBody)({ type: reorder_tiers_dto_1.ReorderTiersDto }),
    (0, swagger_1.ApiResponse)({ status: 200, description: 'Tiers reordered successfully' }),
    (0, swagger_1.ApiResponse)({ status: 400, description: 'Validation error' }),
    (0, swagger_1.ApiResponse)({ status: 401, description: 'Unauthorized' }),
    (0, swagger_1.ApiResponse)({ status: 403, description: 'Forbidden' }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [reorder_tiers_dto_1.ReorderTiersDto]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "reorderTiers", null);
__decorate([
    (0, swagger_1.ApiTags)('Sponsor Tiers'),
    (0, common_1.Patch)('tiers/:id'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN),
    (0, swagger_1.ApiBearerAuth)('JWT-auth'),
    (0, swagger_1.ApiOperation)({ summary: 'Update sponsor tier (Super Admin only)' }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'Tier ID' }),
    (0, swagger_1.ApiBody)({ type: update_sponsor_tier_dto_1.UpdateSponsorTierDto }),
    (0, swagger_1.ApiResponse)({ status: 200, description: 'Tier updated successfully' }),
    (0, swagger_1.ApiResponse)({ status: 400, description: 'Validation error' }),
    (0, swagger_1.ApiResponse)({ status: 401, description: 'Unauthorized' }),
    (0, swagger_1.ApiResponse)({ status: 403, description: 'Forbidden' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Tier not found' }),
    __param(0, (0, common_1.Param)('id')),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, update_sponsor_tier_dto_1.UpdateSponsorTierDto]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "updateTier", null);
__decorate([
    (0, swagger_1.ApiTags)('Sponsor Tiers'),
    (0, common_1.Delete)('tiers/:id'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN),
    (0, common_1.HttpCode)(common_1.HttpStatus.NO_CONTENT),
    (0, swagger_1.ApiBearerAuth)('JWT-auth'),
    (0, swagger_1.ApiOperation)({ summary: 'Delete sponsor tier (Super Admin only)' }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'Tier ID' }),
    (0, swagger_1.ApiResponse)({ status: 204, description: 'Tier deleted successfully' }),
    (0, swagger_1.ApiResponse)({ status: 401, description: 'Unauthorized' }),
    (0, swagger_1.ApiResponse)({ status: 403, description: 'Forbidden' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Tier not found' }),
    (0, swagger_1.ApiResponse)({ status: 409, description: 'Cannot delete tier with existing sponsors' }),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "removeTier", null);
__decorate([
    (0, common_1.Post)(),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN, user_types_1.UserRole.PRODUCER),
    (0, common_1.HttpCode)(common_1.HttpStatus.CREATED),
    (0, swagger_1.ApiBearerAuth)('JWT-auth'),
    (0, swagger_1.ApiOperation)({ summary: 'Create new sponsor (Admin/Producer only)' }),
    (0, swagger_1.ApiBody)({ type: create_sponsor_dto_1.CreateSponsorDto }),
    (0, swagger_1.ApiResponse)({
        status: 201,
        description: 'Sponsor created successfully',
        schema: {
            example: {
                success: true,
                data: {
                    _id: '507f1f77bcf86cd799439011',
                    name: 'VTEX',
                    description: { 'pt-BR': 'Descrição...', en: 'Description...' },
                    logoUrl: 'https://cdn.vtexday.com/sponsors/vtex.png',
                    website: 'https://vtex.com',
                    tier: '507f1f77bcf86cd799439012',
                    socialLinks: { linkedin: 'https://linkedin.com/company/vtex' },
                    orderInTier: 1,
                },
            },
        },
    }),
    (0, swagger_1.ApiResponse)({ status: 400, description: 'Validation error' }),
    (0, swagger_1.ApiResponse)({ status: 401, description: 'Unauthorized' }),
    (0, swagger_1.ApiResponse)({ status: 403, description: 'Forbidden - insufficient role' }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [create_sponsor_dto_1.CreateSponsorDto]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "create", null);
__decorate([
    (0, common_1.Get)(),
    (0, public_decorator_1.Public)(),
    (0, swagger_1.ApiOperation)({ summary: 'List all sponsors with filters and pagination' }),
    (0, swagger_1.ApiQuery)({ name: 'page', required: false, type: Number, example: 1 }),
    (0, swagger_1.ApiQuery)({ name: 'limit', required: false, type: Number, example: 20 }),
    (0, swagger_1.ApiQuery)({ name: 'sort', required: false, type: String, example: 'tier.priority,orderInTier' }),
    (0, swagger_1.ApiQuery)({
        name: 'search',
        required: false,
        type: String,
        description: 'Search in name and description',
    }),
    (0, swagger_1.ApiQuery)({ name: 'tier', required: false, type: String, description: 'Filter by tier ID' }),
    (0, swagger_1.ApiQuery)({
        name: 'isActive',
        required: false,
        type: Boolean,
        description: 'Filter active sponsors',
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'List of sponsors with pagination',
        schema: {
            example: {
                success: true,
                data: [
                    {
                        _id: '507f1f77bcf86cd799439011',
                        name: 'VTEX',
                        logoUrl: 'https://cdn.vtexday.com/sponsors/vtex.png',
                        tier: { _id: '507f1f77bcf86cd799439012', name: 'Diamond', priority: 1 },
                        orderInTier: 1,
                    },
                ],
                metadata: {
                    total: 25,
                    page: 1,
                    limit: 20,
                    totalPages: 2,
                    hasNext: true,
                    hasPrev: false,
                },
            },
        },
    }),
    __param(0, (0, common_1.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [sponsor_filter_dto_1.SponsorFilterDto]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "findAll", null);
__decorate([
    (0, common_1.Get)('public'),
    (0, public_decorator_1.Public)(),
    (0, swagger_1.ApiOperation)({ summary: 'List all visible sponsors for public display' }),
    (0, swagger_1.ApiQuery)({ name: 'page', required: false, type: Number, example: 1 }),
    (0, swagger_1.ApiQuery)({ name: 'limit', required: false, type: Number, example: 20 }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'List of visible sponsors (excludes sensitive fields)',
        schema: {
            example: {
                success: true,
                data: [
                    {
                        _id: '507f1f77bcf86cd799439011',
                        name: 'VTEX',
                        slug: 'vtex',
                        description: { 'pt-BR': 'Plataforma de comércio digital', en: 'Digital commerce platform' },
                        logoUrl: 'https://cdn.vtexday.com/sponsors/vtex.png',
                        tier: '507f1f77bcf86cd799439012',
                        orderInTier: 1,
                        websiteUrl: 'https://vtex.com',
                        standLocation: 'A1',
                        contactEmail: 'contact@vtex.com',
                        socialLinks: { linkedin: 'https://linkedin.com/company/vtex' },
                        tags: ['technology', 'ecommerce'],
                        isVisible: true,
                    },
                ],
                metadata: {
                    total: 25,
                    page: 1,
                    limit: 20,
                    hasNext: true,
                    hasPrev: false,
                },
            },
        },
    }),
    __param(0, (0, common_1.Query)('page')),
    __param(1, (0, common_1.Query)('limit')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Number, Number]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "findPublicSponsors", null);
__decorate([
    (0, common_1.Get)('public/grouped-by-tier'),
    (0, public_decorator_1.Public)(),
    (0, swagger_1.ApiOperation)({ summary: 'Get visible sponsors grouped by tier for public display' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Visible sponsors grouped by tier (excludes sensitive fields)',
        schema: {
            example: {
                success: true,
                data: [
                    {
                        tier: { _id: '507f1f77bcf86cd799439012', name: 'Diamond', order: 1 },
                        sponsors: [
                            {
                                _id: '507f1f77bcf86cd799439011',
                                name: 'VTEX',
                                slug: 'vtex',
                                description: { 'pt-BR': 'Plataforma de comércio digital', en: 'Digital commerce platform' },
                                logoUrl: 'https://cdn.vtexday.com/sponsors/vtex.png',
                                tier: '507f1f77bcf86cd799439012',
                                orderInTier: 1,
                                websiteUrl: 'https://vtex.com',
                                standLocation: 'A1',
                                socialLinks: { linkedin: 'https://linkedin.com/company/vtex' },
                                tags: ['technology'],
                                isVisible: true,
                            },
                        ],
                    },
                    {
                        tier: { _id: '507f1f77bcf86cd799439013', name: 'Gold', order: 2 },
                        sponsors: [
                            {
                                _id: '507f1f77bcf86cd799439014',
                                name: 'AWS',
                                slug: 'aws',
                                description: { 'pt-BR': 'Computação em nuvem', en: 'Cloud computing' },
                                logoUrl: 'https://cdn.vtexday.com/sponsors/aws.png',
                                tier: '507f1f77bcf86cd799439013',
                                orderInTier: 1,
                                websiteUrl: 'https://aws.amazon.com',
                                tags: ['cloud'],
                                isVisible: true,
                            },
                        ],
                    },
                ],
            },
        },
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "findPublicSponsorsByTier", null);
__decorate([
    (0, common_1.Get)('grouped-by-tier'),
    (0, public_decorator_1.Public)(),
    (0, swagger_1.ApiOperation)({ summary: 'Get sponsors grouped by tier' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Sponsors grouped by tier',
        schema: {
            example: {
                success: true,
                data: [
                    {
                        tier: { _id: '507f1f77bcf86cd799439012', name: 'Diamond', priority: 1 },
                        sponsors: [
                            {
                                _id: '507f1f77bcf86cd799439011',
                                name: 'VTEX',
                                logoUrl: 'https://cdn.vtexday.com/sponsors/vtex.png',
                            },
                        ],
                    },
                    {
                        tier: { _id: '507f1f77bcf86cd799439013', name: 'Gold', priority: 2 },
                        sponsors: [
                            {
                                _id: '507f1f77bcf86cd799439014',
                                name: 'AWS',
                                logoUrl: 'https://cdn.vtexday.com/sponsors/aws.png',
                            },
                        ],
                    },
                ],
            },
        },
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "findGroupedByTier", null);
__decorate([
    (0, common_1.Get)(':id'),
    (0, public_decorator_1.Public)(),
    (0, swagger_1.ApiOperation)({ summary: 'Get sponsor by ID' }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'Sponsor ID', example: '507f1f77bcf86cd799439011' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Sponsor details',
        schema: {
            example: {
                success: true,
                data: {
                    _id: '507f1f77bcf86cd799439011',
                    name: 'VTEX',
                    description: { 'pt-BR': 'Plataforma de comércio...', en: 'Commerce platform...' },
                    logoUrl: 'https://cdn.vtexday.com/sponsors/vtex.png',
                    website: 'https://vtex.com',
                    tier: { _id: '507f1f77bcf86cd799439012', name: 'Diamond' },
                    socialLinks: { linkedin: 'https://linkedin.com/company/vtex', twitter: '@vtex' },
                    boothNumber: 'A1',
                    contactPerson: { name: 'João Silva', email: 'joao@vtex.com', phone: '+5511999999999' },
                },
            },
        },
    }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Sponsor not found' }),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "findOne", null);
__decorate([
    (0, common_1.Patch)(':id'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN, user_types_1.UserRole.PRODUCER),
    (0, swagger_1.ApiBearerAuth)('JWT-auth'),
    (0, swagger_1.ApiOperation)({ summary: 'Update sponsor (Admin/Producer only)' }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'Sponsor ID' }),
    (0, swagger_1.ApiBody)({ type: update_sponsor_dto_1.UpdateSponsorDto }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Sponsor updated successfully',
    }),
    (0, swagger_1.ApiResponse)({ status: 400, description: 'Validation error' }),
    (0, swagger_1.ApiResponse)({ status: 401, description: 'Unauthorized' }),
    (0, swagger_1.ApiResponse)({ status: 403, description: 'Forbidden' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Sponsor not found' }),
    __param(0, (0, common_1.Param)('id')),
    __param(1, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, update_sponsor_dto_1.UpdateSponsorDto]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "update", null);
__decorate([
    (0, common_1.Delete)(':id'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN),
    (0, common_1.HttpCode)(common_1.HttpStatus.NO_CONTENT),
    (0, swagger_1.ApiBearerAuth)('JWT-auth'),
    (0, swagger_1.ApiOperation)({ summary: 'Soft delete sponsor (Super Admin only)' }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'Sponsor ID' }),
    (0, swagger_1.ApiQuery)({ name: 'reason', required: false, description: 'Reason for deletion' }),
    (0, swagger_1.ApiResponse)({ status: 204, description: 'Sponsor deleted successfully' }),
    (0, swagger_1.ApiResponse)({ status: 401, description: 'Unauthorized' }),
    (0, swagger_1.ApiResponse)({ status: 403, description: 'Forbidden' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Sponsor not found' }),
    __param(0, (0, common_1.Param)('id')),
    __param(1, (0, common_1.Req)()),
    __param(2, (0, common_1.Query)('reason')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object, String]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "remove", null);
__decorate([
    (0, common_1.Post)(':id/restore'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN),
    (0, swagger_1.ApiBearerAuth)('JWT-auth'),
    (0, swagger_1.ApiOperation)({ summary: 'Restore soft-deleted sponsor (Super Admin only)' }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'Sponsor ID' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Sponsor restored successfully',
    }),
    (0, swagger_1.ApiResponse)({ status: 401, description: 'Unauthorized' }),
    (0, swagger_1.ApiResponse)({ status: 403, description: 'Forbidden' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Sponsor not found' }),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "restore", null);
__decorate([
    (0, common_1.Post)(':id/upload-logo'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN, user_types_1.UserRole.PRODUCER),
    (0, common_1.UseInterceptors)((0, platform_express_1.FileInterceptor)('file')),
    (0, throttler_1.Throttle)({ default: { limit: 5, ttl: 60000 } }),
    (0, swagger_1.ApiBearerAuth)('JWT-auth'),
    (0, swagger_1.ApiConsumes)('multipart/form-data'),
    (0, swagger_1.ApiOperation)({ summary: 'Upload sponsor logo (Admin/Producer only)' }),
    (0, swagger_1.ApiParam)({ name: 'id', description: 'Sponsor ID', example: '507f1f77bcf86cd799439011' }),
    (0, swagger_1.ApiBody)({
        schema: {
            type: 'object',
            properties: {
                file: {
                    type: 'string',
                    format: 'binary',
                    description: 'Sponsor logo (JPEG, PNG, or WebP, max 5MB)',
                },
            },
        },
    }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Logo uploaded successfully',
        schema: {
            example: {
                success: true,
                data: {
                    logoUrl: 'https://bucket.s3.region.amazonaws.com/sponsor-logos/1234567890-abc123.jpg',
                },
            },
        },
    }),
    (0, swagger_1.ApiResponse)({
        status: 400,
        description: 'Invalid file type or size, or virus detected',
        schema: {
            example: {
                success: false,
                error: 'Invalid file type. Only JPEG, PNG, WEBP files are allowed.',
            },
        },
    }),
    (0, swagger_1.ApiResponse)({ status: 401, description: 'Unauthorized' }),
    (0, swagger_1.ApiResponse)({ status: 403, description: 'Forbidden - insufficient role' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Sponsor not found' }),
    (0, swagger_1.ApiResponse)({
        status: 429,
        description: 'Rate limit exceeded',
        schema: {
            example: {
                success: false,
                error: 'Upload rate limit exceeded. Please try again later.',
            },
        },
    }),
    __param(0, (0, common_1.Param)('id')),
    __param(1, (0, common_1.UploadedFile)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], SponsorsController.prototype, "uploadLogo", null);
exports.SponsorsController = SponsorsController = __decorate([
    (0, swagger_1.ApiTags)('Sponsors'),
    (0, common_1.Controller)('sponsors'),
    __metadata("design:paramtypes", [sponsors_service_1.SponsorsService])
], SponsorsController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,