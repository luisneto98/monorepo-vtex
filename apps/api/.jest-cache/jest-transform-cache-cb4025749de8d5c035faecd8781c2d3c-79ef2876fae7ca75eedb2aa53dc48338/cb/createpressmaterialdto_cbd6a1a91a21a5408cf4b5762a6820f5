05da44eadd32dedd31f07370bcc1aede
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreatePressMaterialDto = void 0;
const class_validator_1 = require("class-validator");
const class_transformer_1 = require("class-transformer");
const swagger_1 = require("@nestjs/swagger");
class LocalizedStringDto {
    pt;
    en;
    es;
}
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Portuguese (Brazil) text' }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], LocalizedStringDto.prototype, "pt", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'English text' }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], LocalizedStringDto.prototype, "en", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Spanish text' }),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], LocalizedStringDto.prototype, "es", void 0);
class CreatePressMaterialDto {
    type;
    title;
    description;
    tags;
    status;
    accessLevel;
}
exports.CreatePressMaterialDto = CreatePressMaterialDto;
__decorate([
    (0, swagger_1.ApiProperty)({
        enum: ['press_kit', 'logo_package', 'photo', 'video', 'presentation'],
        description: 'Type of press material',
    }),
    (0, class_validator_1.IsEnum)(['press_kit', 'logo_package', 'photo', 'video', 'presentation']),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], CreatePressMaterialDto.prototype, "type", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        type: LocalizedStringDto,
        description: 'Title in multiple languages',
    }),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => LocalizedStringDto),
    __metadata("design:type", Object)
], CreatePressMaterialDto.prototype, "title", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: LocalizedStringDto,
        description: 'Description in multiple languages',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => LocalizedStringDto),
    __metadata("design:type", Object)
], CreatePressMaterialDto.prototype, "description", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        type: [String],
        description: 'Tags for categorization',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.IsString)({ each: true }),
    __metadata("design:type", Array)
], CreatePressMaterialDto.prototype, "tags", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        enum: ['draft', 'published', 'archived'],
        default: 'draft',
        description: 'Publication status',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsEnum)(['draft', 'published', 'archived']),
    __metadata("design:type", String)
], CreatePressMaterialDto.prototype, "status", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        enum: ['public', 'restricted'],
        default: 'public',
        description: 'Access level',
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsEnum)(['public', 'restricted']),
    __metadata("design:type", String)
], CreatePressMaterialDto.prototype, "accessLevel", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvbHVpc25ldG85OC9Eb2N1bWVudG9zL0NvZGUvbW9ub3JlcG8tdnRleC9hcHBzL2FwaS9zcmMvbW9kdWxlcy9wcmVzcy1tYXRlcmlhbHMvZHRvL2NyZWF0ZS1wcmVzcy1tYXRlcmlhbC5kdG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEscURBUXlCO0FBQ3pCLHlEQUF5QztBQUN6Qyw2Q0FBbUU7QUFRbkUsTUFBTSxrQkFBa0I7SUFJdEIsRUFBRSxDQUFTO0lBS1gsRUFBRSxDQUFTO0lBS1gsRUFBRSxDQUFTO0NBQ1o7QUFYQztJQUhDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSwwQkFBMEIsRUFBRSxDQUFDO0lBQ3hELElBQUEsMEJBQVEsR0FBRTtJQUNWLElBQUEsNEJBQVUsR0FBRTs7OENBQ0Y7QUFLWDtJQUhDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSxjQUFjLEVBQUUsQ0FBQztJQUM1QyxJQUFBLDBCQUFRLEdBQUU7SUFDVixJQUFBLDRCQUFVLEdBQUU7OzhDQUNGO0FBS1g7SUFIQyxJQUFBLHFCQUFXLEVBQUMsRUFBRSxXQUFXLEVBQUUsY0FBYyxFQUFFLENBQUM7SUFDNUMsSUFBQSwwQkFBUSxHQUFFO0lBQ1YsSUFBQSw0QkFBVSxHQUFFOzs4Q0FDRjtBQUdiLE1BQWEsc0JBQXNCO0lBT2pDLElBQUksQ0FBb0I7SUFTeEIsS0FBSyxDQUFrQjtJQVV2QixXQUFXLENBQW1CO0lBUzlCLElBQUksQ0FBWTtJQVNoQixNQUFNLENBQXFCO0lBUzNCLFdBQVcsQ0FBZTtDQUMzQjtBQXRERCx3REFzREM7QUEvQ0M7SUFOQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsY0FBYyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsY0FBYyxDQUFDO1FBQ3JFLFdBQVcsRUFBRSx3QkFBd0I7S0FDdEMsQ0FBQztJQUNELElBQUEsd0JBQU0sRUFBQyxDQUFDLFdBQVcsRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxjQUFjLENBQUMsQ0FBQztJQUN2RSxJQUFBLDRCQUFVLEdBQUU7O29EQUNXO0FBU3hCO0lBUEMsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixXQUFXLEVBQUUsNkJBQTZCO0tBQzNDLENBQUM7SUFDRCxJQUFBLDBCQUFRLEdBQUU7SUFDVixJQUFBLGdDQUFjLEdBQUU7SUFDaEIsSUFBQSx3QkFBSSxFQUFDLEdBQUcsRUFBRSxDQUFDLGtCQUFrQixDQUFDOztxREFDUjtBQVV2QjtJQVJDLElBQUEsNkJBQW1CLEVBQUM7UUFDbkIsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixXQUFXLEVBQUUsbUNBQW1DO0tBQ2pELENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEdBQUU7SUFDVixJQUFBLGdDQUFjLEdBQUU7SUFDaEIsSUFBQSx3QkFBSSxFQUFDLEdBQUcsRUFBRSxDQUFDLGtCQUFrQixDQUFDOzsyREFDRDtBQVM5QjtJQVBDLElBQUEsNkJBQW1CLEVBQUM7UUFDbkIsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDO1FBQ2QsV0FBVyxFQUFFLHlCQUF5QjtLQUN2QyxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSx5QkFBTyxHQUFFO0lBQ1QsSUFBQSwwQkFBUSxFQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDOztvREFDVDtBQVNoQjtJQVBDLElBQUEsNkJBQW1CLEVBQUM7UUFDbkIsSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUM7UUFDeEMsT0FBTyxFQUFFLE9BQU87UUFDaEIsV0FBVyxFQUFFLG9CQUFvQjtLQUNsQyxDQUFDO0lBQ0QsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSx3QkFBTSxFQUFDLENBQUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsQ0FBQzs7c0RBQ2hCO0FBUzNCO0lBUEMsSUFBQSw2QkFBbUIsRUFBQztRQUNuQixJQUFJLEVBQUUsQ0FBQyxRQUFRLEVBQUUsWUFBWSxDQUFDO1FBQzlCLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLFdBQVcsRUFBRSxjQUFjO0tBQzVCLENBQUM7SUFDRCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHdCQUFNLEVBQUMsQ0FBQyxRQUFRLEVBQUUsWUFBWSxDQUFDLENBQUM7OzJEQUNQIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL2x1aXNuZXRvOTgvRG9jdW1lbnRvcy9Db2RlL21vbm9yZXBvLXZ0ZXgvYXBwcy9hcGkvc3JjL21vZHVsZXMvcHJlc3MtbWF0ZXJpYWxzL2R0by9jcmVhdGUtcHJlc3MtbWF0ZXJpYWwuZHRvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIElzRW51bSxcbiAgSXNOb3RFbXB0eSxcbiAgSXNPYmplY3QsXG4gIElzT3B0aW9uYWwsXG4gIElzU3RyaW5nLFxuICBJc0FycmF5LFxuICBWYWxpZGF0ZU5lc3RlZCxcbn0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcbmltcG9ydCB7IFR5cGUgfSBmcm9tICdjbGFzcy10cmFuc2Zvcm1lcic7XG5pbXBvcnQgeyBBcGlQcm9wZXJ0eSwgQXBpUHJvcGVydHlPcHRpb25hbCB9IGZyb20gJ0BuZXN0anMvc3dhZ2dlcic7XG5pbXBvcnQge1xuICBQcmVzc01hdGVyaWFsVHlwZSxcbiAgUHVibGljYXRpb25TdGF0dXMsXG4gIEFjY2Vzc0xldmVsLFxuICBMb2NhbGl6ZWRTdHJpbmcsXG59IGZyb20gJ0B2dGV4ZGF5MjYvc2hhcmVkJztcblxuY2xhc3MgTG9jYWxpemVkU3RyaW5nRHRvIGltcGxlbWVudHMgTG9jYWxpemVkU3RyaW5nIHtcbiAgQEFwaVByb3BlcnR5KHsgZGVzY3JpcHRpb246ICdQb3J0dWd1ZXNlIChCcmF6aWwpIHRleHQnIH0pXG4gIEBJc1N0cmluZygpXG4gIEBJc05vdEVtcHR5KClcbiAgcHQ6IHN0cmluZztcblxuICBAQXBpUHJvcGVydHkoeyBkZXNjcmlwdGlvbjogJ0VuZ2xpc2ggdGV4dCcgfSlcbiAgQElzU3RyaW5nKClcbiAgQElzTm90RW1wdHkoKVxuICBlbjogc3RyaW5nO1xuXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnU3BhbmlzaCB0ZXh0JyB9KVxuICBASXNTdHJpbmcoKVxuICBASXNOb3RFbXB0eSgpXG4gIGVzOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBDcmVhdGVQcmVzc01hdGVyaWFsRHRvIHtcbiAgQEFwaVByb3BlcnR5KHtcbiAgICBlbnVtOiBbJ3ByZXNzX2tpdCcsICdsb2dvX3BhY2thZ2UnLCAncGhvdG8nLCAndmlkZW8nLCAncHJlc2VudGF0aW9uJ10sXG4gICAgZGVzY3JpcHRpb246ICdUeXBlIG9mIHByZXNzIG1hdGVyaWFsJyxcbiAgfSlcbiAgQElzRW51bShbJ3ByZXNzX2tpdCcsICdsb2dvX3BhY2thZ2UnLCAncGhvdG8nLCAndmlkZW8nLCAncHJlc2VudGF0aW9uJ10pXG4gIEBJc05vdEVtcHR5KClcbiAgdHlwZTogUHJlc3NNYXRlcmlhbFR5cGU7XG5cbiAgQEFwaVByb3BlcnR5KHtcbiAgICB0eXBlOiBMb2NhbGl6ZWRTdHJpbmdEdG8sXG4gICAgZGVzY3JpcHRpb246ICdUaXRsZSBpbiBtdWx0aXBsZSBsYW5ndWFnZXMnLFxuICB9KVxuICBASXNPYmplY3QoKVxuICBAVmFsaWRhdGVOZXN0ZWQoKVxuICBAVHlwZSgoKSA9PiBMb2NhbGl6ZWRTdHJpbmdEdG8pXG4gIHRpdGxlOiBMb2NhbGl6ZWRTdHJpbmc7XG5cbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoe1xuICAgIHR5cGU6IExvY2FsaXplZFN0cmluZ0R0byxcbiAgICBkZXNjcmlwdGlvbjogJ0Rlc2NyaXB0aW9uIGluIG11bHRpcGxlIGxhbmd1YWdlcycsXG4gIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQElzT2JqZWN0KClcbiAgQFZhbGlkYXRlTmVzdGVkKClcbiAgQFR5cGUoKCkgPT4gTG9jYWxpemVkU3RyaW5nRHRvKVxuICBkZXNjcmlwdGlvbj86IExvY2FsaXplZFN0cmluZztcblxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7XG4gICAgdHlwZTogW1N0cmluZ10sXG4gICAgZGVzY3JpcHRpb246ICdUYWdzIGZvciBjYXRlZ29yaXphdGlvbicsXG4gIH0pXG4gIEBJc09wdGlvbmFsKClcbiAgQElzQXJyYXkoKVxuICBASXNTdHJpbmcoeyBlYWNoOiB0cnVlIH0pXG4gIHRhZ3M/OiBzdHJpbmdbXTtcblxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7XG4gICAgZW51bTogWydkcmFmdCcsICdwdWJsaXNoZWQnLCAnYXJjaGl2ZWQnXSxcbiAgICBkZWZhdWx0OiAnZHJhZnQnLFxuICAgIGRlc2NyaXB0aW9uOiAnUHVibGljYXRpb24gc3RhdHVzJyxcbiAgfSlcbiAgQElzT3B0aW9uYWwoKVxuICBASXNFbnVtKFsnZHJhZnQnLCAncHVibGlzaGVkJywgJ2FyY2hpdmVkJ10pXG4gIHN0YXR1cz86IFB1YmxpY2F0aW9uU3RhdHVzO1xuXG4gIEBBcGlQcm9wZXJ0eU9wdGlvbmFsKHtcbiAgICBlbnVtOiBbJ3B1YmxpYycsICdyZXN0cmljdGVkJ10sXG4gICAgZGVmYXVsdDogJ3B1YmxpYycsXG4gICAgZGVzY3JpcHRpb246ICdBY2Nlc3MgbGV2ZWwnLFxuICB9KVxuICBASXNPcHRpb25hbCgpXG4gIEBJc0VudW0oWydwdWJsaWMnLCAncmVzdHJpY3RlZCddKVxuICBhY2Nlc3NMZXZlbD86IEFjY2Vzc0xldmVsO1xufVxuIl0sInZlcnNpb24iOjN9