32dc50b04259e596c7f1394f47694fba
"use strict";

/* istanbul ignore next */
function cov_ua5ox8ywx() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/config/multer.config.ts";
  var hash = "eac9471181348616a3a05761ae56b5b3ddfd2903";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/config/multer.config.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 64
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 5,
          column: 20
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 22,
          column: 2
        }
      },
      "5": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 11,
          column: 75
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 14,
          column: 9
        }
      },
      "7": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 100
        }
      },
      "8": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 125
        }
      },
      "9": {
        start: {
          line: 16,
          column: 97
        },
        end: {
          line: 16,
          column: 124
        }
      },
      "10": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "11": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 111
        }
      },
      "12": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "13": {
        start: {
          line: 23,
          column: 32
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "14": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 78
        }
      },
      "15": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 134
        }
      },
      "16": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 40,
          column: 6
        }
      },
      "17": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 31,
          column: 79
        }
      },
      "18": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "19": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 104
        }
      },
      "20": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "21": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 135
        }
      },
      "22": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 33
        }
      },
      "23": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 10,
            column: 17
          }
        },
        loc: {
          start: {
            line: 10,
            column: 42
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 84
          },
          end: {
            line: 16,
            column: 85
          }
        },
        loc: {
          start: {
            line: 16,
            column: 97
          },
          end: {
            line: 16,
            column: 124
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 50
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 21
          }
        },
        loc: {
          start: {
            line: 30,
            column: 46
          },
          end: {
            line: 39,
            column: 9
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 25,
            column: 88
          }
        }, {
          start: {
            line: 25,
            column: 91
          },
          end: {
            line: 25,
            column: 134
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 35,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 35,
            column: 31
          }
        }, {
          start: {
            line: 35,
            column: 35
          },
          end: {
            line: 35,
            column: 70
          }
        }],
        line: 35
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/config/multer.config.ts",
      mappings: ";;;AACA,2CAAqD;AACrD,2CAAwC;AAE3B,QAAA,YAAY,GAAkB;IACzC,MAAM,EAAE;QACN,QAAQ,EAAE,qBAAS,CAAC,aAAa,CAAC,OAAO;KAC1C;IACD,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;QACnC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,WAAW,EAAE,CAAC;QAEpE,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO,QAAQ,CAAC,IAAI,4BAAmB,CAAC,6BAA6B,CAAC,EAAE,KAAK,CAAC,CAAC;QACjF,CAAC;QAED,sDAAsD;QACtD,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAS,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAC1E,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC5B,CAAC;QAEF,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO,QAAQ,CAAC,IAAI,4BAAmB,CAAC,cAAc,SAAS,iBAAiB,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5F,CAAC;QAED,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACvB,CAAC;CACF,CAAC;AAEK,MAAM,uBAAuB,GAAG,CAAC,YAAoB,EAAiB,EAAE;IAC7E,MAAM,cAAc,GAAG,qBAAS,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;IAC/D,MAAM,OAAO,GACX,YAAY,KAAK,OAAO,CAAC,CAAC,CAAC,qBAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,qBAAS,CAAC,aAAa,CAAC,OAAO,CAAC;IAE7F,OAAO;QACL,MAAM,EAAE;YACN,QAAQ,EAAE,OAAO;SAClB;QACD,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;YACnC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,WAAW,EAAE,CAAC;YAEpE,IAAI,CAAC,SAAS,EAAE,CAAC;gBACf,OAAO,QAAQ,CAAC,IAAI,4BAAmB,CAAC,6BAA6B,CAAC,EAAE,KAAK,CAAC,CAAC;YACjF,CAAC;YAED,IAAI,CAAC,cAAc,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC3D,OAAO,QAAQ,CACb,IAAI,4BAAmB,CAAC,cAAc,SAAS,uBAAuB,YAAY,EAAE,CAAC,EACrF,KAAK,CACN,CAAC;YACJ,CAAC;YAED,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AA1BW,QAAA,uBAAuB,2BA0BlC",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/config/multer.config.ts"],
      sourcesContent: ["import { MulterOptions } from '@nestjs/platform-express/multer/interfaces/multer-options.interface';\nimport { BadRequestException } from '@nestjs/common';\nimport { S3_CONFIG } from './s3.config';\n\nexport const multerConfig: MulterOptions = {\n  limits: {\n    fileSize: S3_CONFIG.MAX_FILE_SIZE.default,\n  },\n  fileFilter: (_req, file, callback) => {\n    const extension = file.originalname.split('.').pop()?.toLowerCase();\n\n    if (!extension) {\n      return callback(new BadRequestException('File must have an extension'), false);\n    }\n\n    // Check if extension is allowed for any material type\n    const isAllowed = Object.values(S3_CONFIG.ALLOWED_FORMATS).some((formats) =>\n      formats.includes(extension),\n    );\n\n    if (!isAllowed) {\n      return callback(new BadRequestException(`File type .${extension} is not allowed`), false);\n    }\n\n    callback(null, true);\n  },\n};\n\nexport const getMulterOptionsForType = (materialType: string): MulterOptions => {\n  const allowedFormats = S3_CONFIG.ALLOWED_FORMATS[materialType];\n  const maxSize =\n    materialType === 'video' ? S3_CONFIG.MAX_FILE_SIZE.video : S3_CONFIG.MAX_FILE_SIZE.default;\n\n  return {\n    limits: {\n      fileSize: maxSize,\n    },\n    fileFilter: (_req, file, callback) => {\n      const extension = file.originalname.split('.').pop()?.toLowerCase();\n\n      if (!extension) {\n        return callback(new BadRequestException('File must have an extension'), false);\n      }\n\n      if (!allowedFormats || !allowedFormats.includes(extension)) {\n        return callback(\n          new BadRequestException(`File type .${extension} is not allowed for ${materialType}`),\n          false,\n        );\n      }\n\n      callback(null, true);\n    },\n  };\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eac9471181348616a3a05761ae56b5b3ddfd2903"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ua5ox8ywx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ua5ox8ywx();
cov_ua5ox8ywx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ua5ox8ywx().s[1]++;
exports.getMulterOptionsForType = exports.multerConfig = void 0;
const common_1 =
/* istanbul ignore next */
(cov_ua5ox8ywx().s[2]++, require("@nestjs/common"));
const s3_config_1 =
/* istanbul ignore next */
(cov_ua5ox8ywx().s[3]++, require("./s3.config"));
/* istanbul ignore next */
cov_ua5ox8ywx().s[4]++;
exports.multerConfig = {
  limits: {
    fileSize: s3_config_1.S3_CONFIG.MAX_FILE_SIZE.default
  },
  fileFilter: (_req, file, callback) => {
    /* istanbul ignore next */
    cov_ua5ox8ywx().f[0]++;
    const extension =
    /* istanbul ignore next */
    (cov_ua5ox8ywx().s[5]++, file.originalname.split('.').pop()?.toLowerCase());
    /* istanbul ignore next */
    cov_ua5ox8ywx().s[6]++;
    if (!extension) {
      /* istanbul ignore next */
      cov_ua5ox8ywx().b[0][0]++;
      cov_ua5ox8ywx().s[7]++;
      return callback(new common_1.BadRequestException('File must have an extension'), false);
    } else
    /* istanbul ignore next */
    {
      cov_ua5ox8ywx().b[0][1]++;
    }
    // Check if extension is allowed for any material type
    const isAllowed =
    /* istanbul ignore next */
    (cov_ua5ox8ywx().s[8]++, Object.values(s3_config_1.S3_CONFIG.ALLOWED_FORMATS).some(formats => {
      /* istanbul ignore next */
      cov_ua5ox8ywx().f[1]++;
      cov_ua5ox8ywx().s[9]++;
      return formats.includes(extension);
    }));
    /* istanbul ignore next */
    cov_ua5ox8ywx().s[10]++;
    if (!isAllowed) {
      /* istanbul ignore next */
      cov_ua5ox8ywx().b[1][0]++;
      cov_ua5ox8ywx().s[11]++;
      return callback(new common_1.BadRequestException(`File type .${extension} is not allowed`), false);
    } else
    /* istanbul ignore next */
    {
      cov_ua5ox8ywx().b[1][1]++;
    }
    cov_ua5ox8ywx().s[12]++;
    callback(null, true);
  }
};
/* istanbul ignore next */
cov_ua5ox8ywx().s[13]++;
const getMulterOptionsForType = materialType => {
  /* istanbul ignore next */
  cov_ua5ox8ywx().f[2]++;
  const allowedFormats =
  /* istanbul ignore next */
  (cov_ua5ox8ywx().s[14]++, s3_config_1.S3_CONFIG.ALLOWED_FORMATS[materialType]);
  const maxSize =
  /* istanbul ignore next */
  (cov_ua5ox8ywx().s[15]++, materialType === 'video' ?
  /* istanbul ignore next */
  (cov_ua5ox8ywx().b[2][0]++, s3_config_1.S3_CONFIG.MAX_FILE_SIZE.video) :
  /* istanbul ignore next */
  (cov_ua5ox8ywx().b[2][1]++, s3_config_1.S3_CONFIG.MAX_FILE_SIZE.default));
  /* istanbul ignore next */
  cov_ua5ox8ywx().s[16]++;
  return {
    limits: {
      fileSize: maxSize
    },
    fileFilter: (_req, file, callback) => {
      /* istanbul ignore next */
      cov_ua5ox8ywx().f[3]++;
      const extension =
      /* istanbul ignore next */
      (cov_ua5ox8ywx().s[17]++, file.originalname.split('.').pop()?.toLowerCase());
      /* istanbul ignore next */
      cov_ua5ox8ywx().s[18]++;
      if (!extension) {
        /* istanbul ignore next */
        cov_ua5ox8ywx().b[3][0]++;
        cov_ua5ox8ywx().s[19]++;
        return callback(new common_1.BadRequestException('File must have an extension'), false);
      } else
      /* istanbul ignore next */
      {
        cov_ua5ox8ywx().b[3][1]++;
      }
      cov_ua5ox8ywx().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_ua5ox8ywx().b[5][0]++, !allowedFormats) ||
      /* istanbul ignore next */
      (cov_ua5ox8ywx().b[5][1]++, !allowedFormats.includes(extension))) {
        /* istanbul ignore next */
        cov_ua5ox8ywx().b[4][0]++;
        cov_ua5ox8ywx().s[21]++;
        return callback(new common_1.BadRequestException(`File type .${extension} is not allowed for ${materialType}`), false);
      } else
      /* istanbul ignore next */
      {
        cov_ua5ox8ywx().b[4][1]++;
      }
      cov_ua5ox8ywx().s[22]++;
      callback(null, true);
    }
  };
};
/* istanbul ignore next */
cov_ua5ox8ywx().s[23]++;
exports.getMulterOptionsForType = getMulterOptionsForType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfdWE1b3g4eXd4IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiY29tbW9uXzEiLCJyZXF1aXJlIiwiczNfY29uZmlnXzEiLCJleHBvcnRzIiwibXVsdGVyQ29uZmlnIiwibGltaXRzIiwiZmlsZVNpemUiLCJTM19DT05GSUciLCJNQVhfRklMRV9TSVpFIiwiZGVmYXVsdCIsImZpbGVGaWx0ZXIiLCJfcmVxIiwiZmlsZSIsImNhbGxiYWNrIiwiZiIsImV4dGVuc2lvbiIsIm9yaWdpbmFsbmFtZSIsInNwbGl0IiwicG9wIiwidG9Mb3dlckNhc2UiLCJiIiwiQmFkUmVxdWVzdEV4Y2VwdGlvbiIsImlzQWxsb3dlZCIsIk9iamVjdCIsInZhbHVlcyIsIkFMTE9XRURfRk9STUFUUyIsInNvbWUiLCJmb3JtYXRzIiwiaW5jbHVkZXMiLCJnZXRNdWx0ZXJPcHRpb25zRm9yVHlwZSIsIm1hdGVyaWFsVHlwZSIsImFsbG93ZWRGb3JtYXRzIiwibWF4U2l6ZSIsInZpZGVvIl0sInNvdXJjZXMiOlsiL2hvbWUvbHVpc25ldG85OC9Eb2N1bWVudG9zL0NvZGUvbW9ub3JlcG8tdnRleC9hcHBzL2FwaS9zcmMvY29uZmlnL211bHRlci5jb25maWcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTXVsdGVyT3B0aW9ucyB9IGZyb20gJ0BuZXN0anMvcGxhdGZvcm0tZXhwcmVzcy9tdWx0ZXIvaW50ZXJmYWNlcy9tdWx0ZXItb3B0aW9ucy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQmFkUmVxdWVzdEV4Y2VwdGlvbiB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcbmltcG9ydCB7IFMzX0NPTkZJRyB9IGZyb20gJy4vczMuY29uZmlnJztcblxuZXhwb3J0IGNvbnN0IG11bHRlckNvbmZpZzogTXVsdGVyT3B0aW9ucyA9IHtcbiAgbGltaXRzOiB7XG4gICAgZmlsZVNpemU6IFMzX0NPTkZJRy5NQVhfRklMRV9TSVpFLmRlZmF1bHQsXG4gIH0sXG4gIGZpbGVGaWx0ZXI6IChfcmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgIGNvbnN0IGV4dGVuc2lvbiA9IGZpbGUub3JpZ2luYWxuYW1lLnNwbGl0KCcuJykucG9wKCk/LnRvTG93ZXJDYXNlKCk7XG5cbiAgICBpZiAoIWV4dGVuc2lvbikge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBCYWRSZXF1ZXN0RXhjZXB0aW9uKCdGaWxlIG11c3QgaGF2ZSBhbiBleHRlbnNpb24nKSwgZmFsc2UpO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGlmIGV4dGVuc2lvbiBpcyBhbGxvd2VkIGZvciBhbnkgbWF0ZXJpYWwgdHlwZVxuICAgIGNvbnN0IGlzQWxsb3dlZCA9IE9iamVjdC52YWx1ZXMoUzNfQ09ORklHLkFMTE9XRURfRk9STUFUUykuc29tZSgoZm9ybWF0cykgPT5cbiAgICAgIGZvcm1hdHMuaW5jbHVkZXMoZXh0ZW5zaW9uKSxcbiAgICApO1xuXG4gICAgaWYgKCFpc0FsbG93ZWQpIHtcbiAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgQmFkUmVxdWVzdEV4Y2VwdGlvbihgRmlsZSB0eXBlIC4ke2V4dGVuc2lvbn0gaXMgbm90IGFsbG93ZWRgKSwgZmFsc2UpO1xuICAgIH1cblxuICAgIGNhbGxiYWNrKG51bGwsIHRydWUpO1xuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IGdldE11bHRlck9wdGlvbnNGb3JUeXBlID0gKG1hdGVyaWFsVHlwZTogc3RyaW5nKTogTXVsdGVyT3B0aW9ucyA9PiB7XG4gIGNvbnN0IGFsbG93ZWRGb3JtYXRzID0gUzNfQ09ORklHLkFMTE9XRURfRk9STUFUU1ttYXRlcmlhbFR5cGVdO1xuICBjb25zdCBtYXhTaXplID1cbiAgICBtYXRlcmlhbFR5cGUgPT09ICd2aWRlbycgPyBTM19DT05GSUcuTUFYX0ZJTEVfU0laRS52aWRlbyA6IFMzX0NPTkZJRy5NQVhfRklMRV9TSVpFLmRlZmF1bHQ7XG5cbiAgcmV0dXJuIHtcbiAgICBsaW1pdHM6IHtcbiAgICAgIGZpbGVTaXplOiBtYXhTaXplLFxuICAgIH0sXG4gICAgZmlsZUZpbHRlcjogKF9yZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICBjb25zdCBleHRlbnNpb24gPSBmaWxlLm9yaWdpbmFsbmFtZS5zcGxpdCgnLicpLnBvcCgpPy50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICBpZiAoIWV4dGVuc2lvbikge1xuICAgICAgICByZXR1cm4gY2FsbGJhY2sobmV3IEJhZFJlcXVlc3RFeGNlcHRpb24oJ0ZpbGUgbXVzdCBoYXZlIGFuIGV4dGVuc2lvbicpLCBmYWxzZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghYWxsb3dlZEZvcm1hdHMgfHwgIWFsbG93ZWRGb3JtYXRzLmluY2x1ZGVzKGV4dGVuc2lvbikpIHtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKFxuICAgICAgICAgIG5ldyBCYWRSZXF1ZXN0RXhjZXB0aW9uKGBGaWxlIHR5cGUgLiR7ZXh0ZW5zaW9ufSBpcyBub3QgYWxsb3dlZCBmb3IgJHttYXRlcmlhbFR5cGV9YCksXG4gICAgICAgICAgZmFsc2UsXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrKG51bGwsIHRydWUpO1xuICAgIH0sXG4gIH07XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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