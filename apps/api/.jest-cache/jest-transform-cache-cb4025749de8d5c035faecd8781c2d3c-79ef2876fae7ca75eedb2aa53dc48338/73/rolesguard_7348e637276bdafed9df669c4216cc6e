f3a3967ab21cae1f10e67209d522399a
"use strict";

/* istanbul ignore next */
function cov_u0kttfm2g() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/guards/roles.guard.ts";
  var hash = "9310d9a38c0059c0bb028d0976bd08637418cd6c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/guards/roles.guard.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "15": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "16": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "17": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 66
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "19": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "20": {
        start: {
          line: 22,
          column: 30
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "21": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "22": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "23": {
        start: {
          line: 29,
          column: 25
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "24": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 64
        }
      },
      "25": {
        start: {
          line: 30,
          column: 44
        },
        end: {
          line: 30,
          column: 62
        }
      },
      "26": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 32
        }
      },
      "27": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 37,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 30,
            column: 35
          }
        },
        loc: {
          start: {
            line: 30,
            column: 44
          },
          end: {
            line: 30,
            column: 62
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/guards/roles.guard.ts",
      mappings: ";;;;;;;;;;;;AAAA,2CAA2E;AAC3E,uCAAyC;AACzC,mEAA0D;AAGnD,IAAM,UAAU,GAAhB,MAAM,UAAU;IACD;IAApB,YAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;IAE5C,WAAW,CAAC,OAAyB;QACnC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAW,2BAAS,EAAE;YAC1E,OAAO,CAAC,UAAU,EAAE;YACpB,OAAO,CAAC,QAAQ,EAAE;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE,CAAC;YACnB,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACrD,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IAC1D,CAAC;CACF,CAAA;AAdY,gCAAU;qBAAV,UAAU;IADtB,IAAA,mBAAU,GAAE;qCAEoB,gBAAS;GAD7B,UAAU,CActB",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/guards/roles.guard.ts"],
      sourcesContent: ["import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from '../decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride<string[]>(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.role === role);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9310d9a38c0059c0bb028d0976bd08637418cd6c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_u0kttfm2g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_u0kttfm2g();
var __decorate =
/* istanbul ignore next */
(cov_u0kttfm2g().s[0]++,
/* istanbul ignore next */
(cov_u0kttfm2g().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_u0kttfm2g().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_u0kttfm2g().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_u0kttfm2g().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_u0kttfm2g().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_u0kttfm2g().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_u0kttfm2g().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_u0kttfm2g().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_u0kttfm2g().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_u0kttfm2g().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_u0kttfm2g().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_u0kttfm2g().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_u0kttfm2g().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_u0kttfm2g().b[3][0]++;
    cov_u0kttfm2g().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_u0kttfm2g().b[3][1]++;
    cov_u0kttfm2g().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_u0kttfm2g().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_u0kttfm2g().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_u0kttfm2g().b[5][0]++;
        cov_u0kttfm2g().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_u0kttfm2g().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_u0kttfm2g().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_u0kttfm2g().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_u0kttfm2g().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_u0kttfm2g().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_u0kttfm2g().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_u0kttfm2g().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_u0kttfm2g().s[9]++;
  return /* istanbul ignore next */(cov_u0kttfm2g().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_u0kttfm2g().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_u0kttfm2g().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_u0kttfm2g().s[10]++,
/* istanbul ignore next */
(cov_u0kttfm2g().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_u0kttfm2g().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_u0kttfm2g().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_u0kttfm2g().f[1]++;
  cov_u0kttfm2g().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_u0kttfm2g().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_u0kttfm2g().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_u0kttfm2g().b[11][0]++;
    cov_u0kttfm2g().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_u0kttfm2g().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_u0kttfm2g().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_u0kttfm2g().s[14]++;
exports.RolesGuard = void 0;
const common_1 =
/* istanbul ignore next */
(cov_u0kttfm2g().s[15]++, require("@nestjs/common"));
const core_1 =
/* istanbul ignore next */
(cov_u0kttfm2g().s[16]++, require("@nestjs/core"));
const roles_decorator_1 =
/* istanbul ignore next */
(cov_u0kttfm2g().s[17]++, require("../decorators/roles.decorator"));
/* istanbul ignore next */
cov_u0kttfm2g().s[18]++;
let RolesGuard = class RolesGuard {
  reflector;
  constructor(reflector) {
    /* istanbul ignore next */
    cov_u0kttfm2g().f[2]++;
    cov_u0kttfm2g().s[19]++;
    this.reflector = reflector;
  }
  canActivate(context) {
    /* istanbul ignore next */
    cov_u0kttfm2g().f[3]++;
    const requiredRoles =
    /* istanbul ignore next */
    (cov_u0kttfm2g().s[20]++, this.reflector.getAllAndOverride(roles_decorator_1.ROLES_KEY, [context.getHandler(), context.getClass()]));
    /* istanbul ignore next */
    cov_u0kttfm2g().s[21]++;
    if (!requiredRoles) {
      /* istanbul ignore next */
      cov_u0kttfm2g().b[13][0]++;
      cov_u0kttfm2g().s[22]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_u0kttfm2g().b[13][1]++;
    }
    const {
      user
    } =
    /* istanbul ignore next */
    (cov_u0kttfm2g().s[23]++, context.switchToHttp().getRequest());
    /* istanbul ignore next */
    cov_u0kttfm2g().s[24]++;
    return requiredRoles.some(role => {
      /* istanbul ignore next */
      cov_u0kttfm2g().f[4]++;
      cov_u0kttfm2g().s[25]++;
      return user.role === role;
    });
  }
};
/* istanbul ignore next */
cov_u0kttfm2g().s[26]++;
exports.RolesGuard = RolesGuard;
/* istanbul ignore next */
cov_u0kttfm2g().s[27]++;
exports.RolesGuard = RolesGuard = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [core_1.Reflector])], RolesGuard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfdTBrdHRmbTJnIiwiYWN0dWFsQ292ZXJhZ2UiLCJjb21tb25fMSIsInMiLCJyZXF1aXJlIiwiY29yZV8xIiwicm9sZXNfZGVjb3JhdG9yXzEiLCJSb2xlc0d1YXJkIiwicmVmbGVjdG9yIiwiY29uc3RydWN0b3IiLCJmIiwiY2FuQWN0aXZhdGUiLCJjb250ZXh0IiwicmVxdWlyZWRSb2xlcyIsImdldEFsbEFuZE92ZXJyaWRlIiwiUk9MRVNfS0VZIiwiZ2V0SGFuZGxlciIsImdldENsYXNzIiwiYiIsInVzZXIiLCJzd2l0Y2hUb0h0dHAiLCJnZXRSZXF1ZXN0Iiwic29tZSIsInJvbGUiLCJleHBvcnRzIiwiX19kZWNvcmF0ZSIsIkluamVjdGFibGUiLCJSZWZsZWN0b3IiXSwic291cmNlcyI6WyIvaG9tZS9sdWlzbmV0bzk4L0RvY3VtZW50b3MvQ29kZS9tb25vcmVwby12dGV4L2FwcHMvYXBpL3NyYy9tb2R1bGVzL2F1dGgvZ3VhcmRzL3JvbGVzLmd1YXJkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIENhbkFjdGl2YXRlLCBFeGVjdXRpb25Db250ZXh0IH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuaW1wb3J0IHsgUmVmbGVjdG9yIH0gZnJvbSAnQG5lc3Rqcy9jb3JlJztcbmltcG9ydCB7IFJPTEVTX0tFWSB9IGZyb20gJy4uL2RlY29yYXRvcnMvcm9sZXMuZGVjb3JhdG9yJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFJvbGVzR3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVmbGVjdG9yOiBSZWZsZWN0b3IpIHt9XG5cbiAgY2FuQWN0aXZhdGUoY29udGV4dDogRXhlY3V0aW9uQ29udGV4dCk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHJlcXVpcmVkUm9sZXMgPSB0aGlzLnJlZmxlY3Rvci5nZXRBbGxBbmRPdmVycmlkZTxzdHJpbmdbXT4oUk9MRVNfS0VZLCBbXG4gICAgICBjb250ZXh0LmdldEhhbmRsZXIoKSxcbiAgICAgIGNvbnRleHQuZ2V0Q2xhc3MoKSxcbiAgICBdKTtcbiAgICBpZiAoIXJlcXVpcmVkUm9sZXMpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjb25zdCB7IHVzZXIgfSA9IGNvbnRleHQuc3dpdGNoVG9IdHRwKCkuZ2V0UmVxdWVzdCgpO1xuICAgIHJldHVybiByZXF1aXJlZFJvbGVzLnNvbWUoKHJvbGUpID0+IHVzZXIucm9sZSA9PT0gcm9sZSk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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W119