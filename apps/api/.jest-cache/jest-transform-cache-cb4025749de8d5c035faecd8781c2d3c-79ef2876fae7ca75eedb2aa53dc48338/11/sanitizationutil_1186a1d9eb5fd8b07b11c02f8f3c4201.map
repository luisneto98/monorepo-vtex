{"version":3,"names":["cov_1lnp4fnw22","actualCoverage","dompurify_1","s","__importDefault","require","jsdom_1","window","JSDOM","purify","default","SanitizationUtil","sanitizeText","text","f","b","sanitize","ALLOWED_TAGS","ALLOWED_ATTR","KEEP_CONTENT","sanitizeLocalizedString","obj","sanitized","pt","en","es","sanitizeTags","tags","Array","isArray","map","tag","sanitizeFilePath","path","replace","exports"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/utils/sanitization.util.ts"],"sourcesContent":["import DOMPurify from 'dompurify';\nimport { JSDOM } from 'jsdom';\n\nconst window = new JSDOM('').window;\nconst purify = DOMPurify(window as any);\n\nexport class SanitizationUtil {\n  static sanitizeText(text: string): string {\n    if (!text) return text;\n\n    // Remove all HTML tags and scripts\n    return purify.sanitize(text, {\n      ALLOWED_TAGS: [],\n      ALLOWED_ATTR: [],\n      KEEP_CONTENT: true,\n    });\n  }\n\n  static sanitizeLocalizedString(obj: any): any {\n    if (!obj) return obj;\n\n    const sanitized = { ...obj };\n    if (obj.pt) sanitized.pt = SanitizationUtil.sanitizeText(obj.pt);\n    if (obj.en) sanitized.en = SanitizationUtil.sanitizeText(obj.en);\n    if (obj.es) sanitized.es = SanitizationUtil.sanitizeText(obj.es);\n\n    return sanitized;\n  }\n\n  static sanitizeTags(tags: string[]): string[] {\n    if (!tags || !Array.isArray(tags)) return tags;\n    return tags.map((tag) => SanitizationUtil.sanitizeText(tag));\n  }\n\n  static sanitizeFilePath(path: string): string {\n    if (!path) return path;\n\n    // Remove path traversal attempts\n    return path\n      .replace(/\\.\\./g, '')\n      .replace(/^\\/+/, '')\n      .replace(/\\/+/g, '/')\n      .replace(/[^a-zA-Z0-9-_./]/g, '');\n  }\n}\n"],"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","ignoreList":[]}