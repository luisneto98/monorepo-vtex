{"version":3,"names":["cov_11eaikp1mf","actualCoverage","mongoose_1","s","require","mongoose_2","DownloadLog","Document","materialId","ipAddress","userAgent","downloadedAt","userId","exports","__decorate","Prop","type","Types","ObjectId","ref","required","index","default","Date","now","String","Schema","collection","timestamps","DownloadLogSchema","SchemaFactory","createForClass"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/press-materials/schemas/download-log.schema.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, HydratedDocument, Types } from 'mongoose';\n\nexport type DownloadLogDocument = HydratedDocument<DownloadLog>;\n\n@Schema({ collection: 'download_logs', timestamps: false })\nexport class DownloadLog extends Document {\n  @Prop({ type: Types.ObjectId, ref: 'PressMaterial', required: true, index: true })\n  materialId: Types.ObjectId;\n\n  @Prop({ required: true })\n  ipAddress: string;\n\n  @Prop({ required: true })\n  userAgent: string;\n\n  @Prop({ default: Date.now, index: true })\n  downloadedAt: Date;\n\n  @Prop({ type: String })\n  userId?: string;\n}\n\nexport const DownloadLogSchema = SchemaFactory.createForClass(DownloadLog);\n\n// Create indexes for analytics queries\nDownloadLogSchema.index({ materialId: 1, downloadedAt: -1 });\nDownloadLogSchema.index({ downloadedAt: -1 });\n"],"mappingscAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AARF,MAAAE,UAAA;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,QAAAC,OAAA;AACA,MAAAC,UAAA;AAAA;AAAA,CAAAL,cAAA,GAAAG,CAAA,QAAAC,OAAA;AAA6D;AAAAJ,cAAA,GAAAG,CAAA;AAKtD,IAAMG,WAAW,GAAjB,MAAMA,WAAY,SAAQD,UAAA,CAAAE,QAAQ;EAEvCC,UAAU;EAGVC,SAAS;EAGTC,SAAS;EAGTC,YAAY;EAGZC,MAAM;CACP;AAAA;AAAAZ,cAAA,GAAAG,CAAA;AAfYU,OAAA,CAAAP,WAAA,GAAAA,WAAA;AAAW;AAAAN,cAAA,GAAAG,CAAA;AAEtBW,UAAA,EADC,IAAAZ,UAAA,CAAAa,IAAI,EAAC;EAAEC,IAAI,EAAEX,UAAA,CAAAY,KAAK,CAACC,QAAQ;EAAEC,GAAG,EAAE,eAAe;EAAEC,QAAQ,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC,E,0BACtEhB,UAAA,CAAAY,KAAK,CAACC,QAAQ,E,8CAAC;AAAA;AAAAlB,cAAA,GAAAG,CAAA;AAG3BW,UAAA,EADC,IAAAZ,UAAA,CAAAa,IAAI,EAAC;EAAEK,QAAQ,EAAE;AAAI,CAAE,CAAC,E,+EACP;AAAA;AAAApB,cAAA,GAAAG,CAAA;AAGlBW,UAAA,EADC,IAAAZ,UAAA,CAAAa,IAAI,EAAC;EAAEK,QAAQ,EAAE;AAAI,CAAE,CAAC,E,+EACP;AAAA;AAAApB,cAAA,GAAAG,CAAA;AAGlBW,UAAA,EADC,IAAAZ,UAAA,CAAAa,IAAI,EAAC;EAAEO,OAAO,EAAEC,IAAI,CAACC,GAAG;EAAEH,KAAK,EAAE;AAAI,CAAE,CAAC,E,0BAC3BE,IAAI,E,gDAAC;AAAA;AAAAvB,cAAA,GAAAG,CAAA;AAGnBW,UAAA,EADC,IAAAZ,UAAA,CAAAa,IAAI,EAAC;EAAEC,IAAI,EAAES;AAAM,CAAE,CAAC,E,4EACP;AAAA;AAAAzB,cAAA,GAAAG,CAAA;sBAdLG,WAAW,GAAAQ,UAAA,EADvB,IAAAZ,UAAA,CAAAwB,MAAM,EAAC;EAAEC,UAAU,EAAE,eAAe;EAAEC,UAAU,EAAE;AAAK,CAAE,CAAC,C,EAC9CtB,WAAW,CAevB;AAAA;AAAAN,cAAA,GAAAG,CAAA;AAEYU,OAAA,CAAAgB,iBAAiB,GAAG3B,UAAA,CAAA4B,aAAa,CAACC,cAAc,CAACzB,WAAW,CAAC;AAE1E;AAAA;AAAAN,cAAA,GAAAG,CAAA;AACAU,OAAA,CAAAgB,iBAAiB,CAACR,KAAK,CAAC;EAAEb,UAAU,EAAE,CAAC;EAAEG,YAAY,EAAE,CAAC;AAAC,CAAE,CAAC;AAAC;AAAAX,cAAA,GAAAG,CAAA;AAC7DU,OAAA,CAAAgB,iBAAiB,CAACR,KAAK,CAAC;EAAEV,YAAY,EAAE,CAAC;AAAC,CAAE,CAAC","ignoreList":[]}