{"version":3,"names":["cov_1ujiagq938","actualCoverage","common_1","s","require","mongoose_1","mongoose_2","download_log_schema_1","press_material_schema_1","DownloadTrackingService","downloadLogModel","pressMaterialModel","constructor","f","trackDownload","materialId","ipAddress","userAgent","userId","create","Types","ObjectId","downloadedAt","Date","findByIdAndUpdate","$inc","downloadCount","new","error","console","getDownloadStatistics","days","b","startDate","setDate","getDate","stats","aggregate","$match","$gte","$group","_id","$dateToString","format","date","count","$sum","$sort","totalDownloads","countDocuments","uniqueIPs","distinct","uniqueVisitors","length","dailyStats","period","getTopDownloadedMaterials","limit","find","status","sort","select","lean","exports","__decorate","Injectable","__param","InjectModel","DownloadLog","name","PressMaterial","Model"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/press-materials/services/download-tracking.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { DownloadLog, DownloadLogDocument } from '../schemas/download-log.schema';\nimport { PressMaterial, PressMaterialDocument } from '../schemas/press-material.schema';\n\n@Injectable()\nexport class DownloadTrackingService {\n  constructor(\n    @InjectModel(DownloadLog.name)\n    private downloadLogModel: Model<DownloadLogDocument>,\n    @InjectModel(PressMaterial.name)\n    private pressMaterialModel: Model<PressMaterialDocument>,\n  ) {}\n\n  async trackDownload(\n    materialId: string,\n    ipAddress: string,\n    userAgent: string,\n    userId?: string,\n  ): Promise<void> {\n    try {\n      // Create download log\n      await this.downloadLogModel.create({\n        materialId: new Types.ObjectId(materialId),\n        ipAddress,\n        userAgent,\n        userId,\n        downloadedAt: new Date(),\n      });\n\n      // Increment download count on the material\n      await this.pressMaterialModel.findByIdAndUpdate(\n        materialId,\n        { $inc: { downloadCount: 1 } },\n        { new: false },\n      );\n    } catch (error) {\n      console.error('Error tracking download:', error);\n      // Don't throw error - we don't want download tracking failure to prevent download\n    }\n  }\n\n  async getDownloadStatistics(materialId: string, days = 30): Promise<any> {\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n\n    const stats = await this.downloadLogModel.aggregate([\n      {\n        $match: {\n          materialId: new Types.ObjectId(materialId),\n          downloadedAt: { $gte: startDate },\n        },\n      },\n      {\n        $group: {\n          _id: {\n            $dateToString: {\n              format: '%Y-%m-%d',\n              date: '$downloadedAt',\n            },\n          },\n          count: { $sum: 1 },\n        },\n      },\n      {\n        $sort: { _id: 1 },\n      },\n    ]);\n\n    const totalDownloads = await this.downloadLogModel.countDocuments({\n      materialId: new Types.ObjectId(materialId),\n    });\n\n    const uniqueIPs = await this.downloadLogModel.distinct('ipAddress', {\n      materialId: new Types.ObjectId(materialId),\n    });\n\n    return {\n      totalDownloads,\n      uniqueVisitors: uniqueIPs.length,\n      dailyStats: stats,\n      period: `${days} days`,\n    };\n  }\n\n  async getTopDownloadedMaterials(limit = 10): Promise<any[]> {\n    return this.pressMaterialModel\n      .find({ status: 'published' })\n      .sort({ downloadCount: -1 })\n      .limit(limit)\n      .select('title type downloadCount thumbnailUrl')\n      .lean();\n  }\n}\n"],"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","ignoreList":[]}