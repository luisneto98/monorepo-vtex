{"version":3,"names":["cov_2i63tlk60v","actualCoverage","common_1","s","require","swagger_1","users_service_1","jwt_auth_guard_1","roles_guard_1","roles_decorator_1","user_types_1","UsersController","usersService","constructor","f","create","createUserDto","findAll","findOne","id","findById","update","updateUserDto","remove","exports","__decorate","Post","Roles","UserRole","SUPER_ADMIN","ApiOperation","summary","ApiResponse","status","description","ApiUnauthorizedResponse","ApiForbiddenResponse","__param","Body","Get","PRODUCER","ApiParam","name","Param","Patch","Delete","ApiTags","ApiBearerAuth","Controller","UseGuards","JwtAuthGuard","RolesGuard","UsersService"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/users/users.controller.ts"],"sourcesContent":["import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse as SwaggerApiResponse,\n  ApiParam,\n  ApiForbiddenResponse,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { UsersService } from './users.service';\nimport { JwtAuthGuard } from '@common/guards/jwt-auth.guard';\nimport { RolesGuard } from '@common/guards/roles.guard';\nimport { Roles } from '@common/decorators/roles.decorator';\nimport { UserRole } from '@shared/types/user.types';\n\n@ApiTags('Users')\n@ApiBearerAuth('JWT-auth')\n@Controller('users')\n@UseGuards(JwtAuthGuard, RolesGuard)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiOperation({ summary: 'Create new user (Super Admin only)' })\n  @SwaggerApiResponse({ status: 201, description: 'User created successfully' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized - Missing or invalid JWT token' })\n  @ApiForbiddenResponse({ description: 'Forbidden - Requires SUPER_ADMIN role' })\n  create(@Body() createUserDto: any) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @ApiOperation({ summary: 'List all users (Admin/Producer only)' })\n  @SwaggerApiResponse({ status: 200, description: 'Returns list of users' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized - Missing or invalid JWT token' })\n  @ApiForbiddenResponse({ description: 'Forbidden - Requires SUPER_ADMIN or PRODUCER role' })\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get user by ID (Authenticated users only)' })\n  @ApiParam({ name: 'id', description: 'User MongoDB ID' })\n  @SwaggerApiResponse({ status: 200, description: 'Returns user details' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized - Missing or invalid JWT token' })\n  findOne(@Param('id') id: string) {\n    return this.usersService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update user (Authenticated users only)' })\n  @ApiParam({ name: 'id', description: 'User MongoDB ID' })\n  @SwaggerApiResponse({ status: 200, description: 'User updated successfully' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized - Missing or invalid JWT token' })\n  update(@Param('id') id: string, @Body() updateUserDto: any) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiOperation({ summary: 'Delete user (Super Admin only)' })\n  @ApiParam({ name: 'id', description: 'User MongoDB ID' })\n  @SwaggerApiResponse({ status: 200, description: 'User deleted successfully' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized - Missing or invalid JWT token' })\n  @ApiForbiddenResponse({ description: 'Forbidden - Requires SUPER_ADMIN role' })\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n"],"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","ignoreList":[]}