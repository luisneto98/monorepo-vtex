{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/tests/integration/sponsors-public.integration.spec.ts","mappings":"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","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/tests/integration/sponsors-public.integration.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { INestApplication } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport request from 'supertest';\nimport { SponsorsModule } from '../../src/modules/sponsors/sponsors.module';\nimport { DatabaseModule } from '../../src/modules/database/database.module';\nimport { JwtService } from '@nestjs/jwt';\nimport { AuthModule } from '../../src/modules/auth/auth.module';\n\ndescribe('Sponsors Public Endpoints Integration Tests', () => {\n  let app: INestApplication;\n  let jwtService: JwtService;\n  let authToken: string;\n  let tierDiamondId: string;\n  let tierGoldId: string;\n  let invisibleSponsorId: string;\n\n  const testUser = {\n    _id: '507f1f77bcf86cd799439020',\n    email: 'admin@vtexday.com',\n    role: 'super_admin',\n  };\n\n  beforeAll(async () => {\n    const moduleFixture: TestingModule = await Test.createTestingModule({\n      imports: [\n        MongooseModule.forRoot(\n          process.env['MONGODB_TEST_URI'] || 'mongodb://localhost:27017/vtex-day-test',\n        ),\n        DatabaseModule,\n        AuthModule,\n        SponsorsModule,\n      ],\n    }).compile();\n\n    app = moduleFixture.createNestApplication();\n    jwtService = moduleFixture.get<JwtService>(JwtService);\n\n    authToken = jwtService.sign({\n      sub: testUser._id,\n      email: testUser.email,\n      role: testUser.role,\n    });\n\n    await app.init();\n\n    // Create sponsor tiers\n    const tierDiamondResponse = await request(app.getHttpServer())\n      .post('/sponsors/tiers')\n      .set('Authorization', `Bearer ${authToken}`)\n      .send({\n        name: 'Diamond',\n        displayName: { 'pt-BR': 'Diamante', en: 'Diamond' },\n        order: 1,\n        maxPosts: 10,\n      });\n    tierDiamondId = tierDiamondResponse.body.data._id;\n\n    const tierGoldResponse = await request(app.getHttpServer())\n      .post('/sponsors/tiers')\n      .set('Authorization', `Bearer ${authToken}`)\n      .send({\n        name: 'Gold',\n        displayName: { 'pt-BR': 'Ouro', en: 'Gold' },\n        order: 2,\n        maxPosts: 5,\n      });\n    tierGoldId = tierGoldResponse.body.data._id;\n\n    // Create visible sponsor\n    await request(app.getHttpServer())\n      .post('/sponsors')\n      .set('Authorization', `Bearer ${authToken}`)\n      .send({\n        name: 'VTEX',\n        slug: 'vtex',\n        description: {\n          'pt-BR': 'Plataforma de comércio digital',\n          en: 'Digital commerce platform',\n        },\n        tier: tierDiamondId,\n        orderInTier: 1,\n        websiteUrl: 'https://vtex.com',\n        adminEmail: 'admin@vtex.com',\n        contactEmail: 'contact@vtex.com',\n        standLocation: 'A1',\n        socialLinks: {\n          linkedin: 'https://linkedin.com/company/vtex',\n        },\n        tags: ['technology', 'ecommerce'],\n        isVisible: true,\n        maxPosts: 10,\n        postsUsed: 3,\n      });\n\n    // Create invisible sponsor\n    const invisibleSponsorResponse = await request(app.getHttpServer())\n      .post('/sponsors')\n      .set('Authorization', `Bearer ${authToken}`)\n      .send({\n        name: 'Hidden Corp',\n        slug: 'hidden-corp',\n        description: {\n          'pt-BR': 'Empresa oculta',\n          en: 'Hidden company',\n        },\n        tier: tierGoldId,\n        orderInTier: 1,\n        adminEmail: 'admin@hidden.com',\n        isVisible: false,\n        maxPosts: 5,\n        postsUsed: 2,\n      });\n    invisibleSponsorId = invisibleSponsorResponse.body.data._id;\n  });\n\n  afterAll(async () => {\n    await app.close();\n  });\n\n  describe('GET /sponsors/public', () => {\n    it('should return only visible sponsors', async () => {\n      const response = await request(app.getHttpServer())\n        .get('/sponsors/public')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.data).toBeInstanceOf(Array);\n      expect(response.body.data.length).toBeGreaterThan(0);\n\n      // Verify only visible sponsors are returned\n      response.body.data.forEach((sponsor: any) => {\n        expect(sponsor.isVisible).toBe(true);\n      });\n\n      // Verify invisible sponsor is NOT in results\n      const invisibleFound = response.body.data.find(\n        (s: any) => s._id === invisibleSponsorId,\n      );\n      expect(invisibleFound).toBeUndefined();\n    });\n\n    it('should exclude sensitive fields (maxPosts, postsUsed, adminEmail)', async () => {\n      const response = await request(app.getHttpServer())\n        .get('/sponsors/public')\n        .expect(200);\n\n      expect(response.body.data).toBeInstanceOf(Array);\n\n      response.body.data.forEach((sponsor: any) => {\n        expect(sponsor.maxPosts).toBeUndefined();\n        expect(sponsor.postsUsed).toBeUndefined();\n        expect(sponsor.adminEmail).toBeUndefined();\n        expect(sponsor.deletedAt).toBeUndefined();\n        expect(sponsor.deletedBy).toBeUndefined();\n        expect(sponsor.deleteReason).toBeUndefined();\n      });\n    });\n\n    it('should support pagination', async () => {\n      const response = await request(app.getHttpServer())\n        .get('/sponsors/public?page=1&limit=10')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.metadata).toBeDefined();\n      expect(response.body.metadata.page).toBe(1);\n      expect(response.body.metadata.limit).toBe(10);\n      expect(response.body.metadata.total).toBeGreaterThan(0);\n    });\n\n    it('should allow unauthenticated access', async () => {\n      const response = await request(app.getHttpServer())\n        .get('/sponsors/public')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n    });\n  });\n\n  describe('GET /sponsors/public/grouped-by-tier', () => {\n    it('should return sponsors grouped by tier', async () => {\n      const response = await request(app.getHttpServer())\n        .get('/sponsors/public/grouped-by-tier')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.data).toBeInstanceOf(Array);\n      expect(response.body.data.length).toBeGreaterThan(0);\n\n      // Verify structure\n      response.body.data.forEach((tierGroup: any) => {\n        expect(tierGroup.tier).toBeDefined();\n        expect(tierGroup.tier._id).toBeDefined();\n        expect(tierGroup.tier.name).toBeDefined();\n        expect(tierGroup.tier.displayName).toBeDefined();\n        expect(tierGroup.tier.order).toBeDefined();\n        expect(tierGroup.sponsors).toBeInstanceOf(Array);\n      });\n    });\n\n    it('should order tiers by priority', async () => {\n      const response = await request(app.getHttpServer())\n        .get('/sponsors/public/grouped-by-tier')\n        .expect(200);\n\n      const tierGroups = response.body.data;\n\n      for (let i = 0; i < tierGroups.length - 1; i++) {\n        expect(tierGroups[i].tier.order).toBeLessThanOrEqual(\n          tierGroups[i + 1].tier.order,\n        );\n      }\n    });\n\n    it('should only include visible sponsors', async () => {\n      const response = await request(app.getHttpServer())\n        .get('/sponsors/public/grouped-by-tier')\n        .expect(200);\n\n      const allSponsors: any[] = [];\n      response.body.data.forEach((tierGroup: any) => {\n        allSponsors.push(...tierGroup.sponsors);\n      });\n\n      allSponsors.forEach((sponsor) => {\n        expect(sponsor.isVisible).toBe(true);\n      });\n\n      // Verify invisible sponsor is NOT in results\n      const invisibleFound = allSponsors.find(\n        (s: any) => s._id === invisibleSponsorId,\n      );\n      expect(invisibleFound).toBeUndefined();\n    });\n\n    it('should exclude sensitive fields', async () => {\n      const response = await request(app.getHttpServer())\n        .get('/sponsors/public/grouped-by-tier')\n        .expect(200);\n\n      response.body.data.forEach((tierGroup: any) => {\n        tierGroup.sponsors.forEach((sponsor: any) => {\n          expect(sponsor.maxPosts).toBeUndefined();\n          expect(sponsor.postsUsed).toBeUndefined();\n          expect(sponsor.adminEmail).toBeUndefined();\n          expect(sponsor.deletedAt).toBeUndefined();\n        });\n      });\n    });\n\n    it('should allow unauthenticated access', async () => {\n      const response = await request(app.getHttpServer())\n        .get('/sponsors/public/grouped-by-tier')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n    });\n  });\n});\n"],"version":3}