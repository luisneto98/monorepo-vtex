{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/system-config/dto/section-visibility.dto.ts","mappings":";;;;;;;;;;;;AAAA,qDAYyB;AACzB,yDAAyC;AAGzC,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;IAC5B,QAAQ,CAAC,UAAkB,EAAE,KAA0B;QACrD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,iBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC;QACrC,iBAAiB,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;QAE5D,OAAO,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,iBAAiB,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,KAA0B;QACvC,OAAO,+DAA+D,CAAC;IACzE,CAAC;CACF,CAAA;AAbK,wBAAwB;IAD7B,IAAA,qCAAmB,EAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;GACxD,wBAAwB,CAa7B;AAED,MAAM,gBAAgB;IAGpB,OAAO,CAAS;IAIhB,IAAI,CAAS;CACd;AALC;IAFC,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,GAAG,CAAC;;+CACC;AAIhB;IAFC,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,GAAG,CAAC;;4CACF;AAGf,MAAM,sBAAsB;IAG1B,QAAQ,CAAS;IAGjB,QAAQ,CAAS;CAClB;AAJC;IAFC,IAAA,8BAAY,GAAE;IACd,IAAA,0BAAQ,EAAC,wBAAwB,CAAC;;wDAClB;AAGjB;IADC,IAAA,0BAAQ,GAAE;;wDACM;AAGnB,MAAa,0BAA0B;IAGrC,SAAS,CAAW;IAMpB,aAAa,CAAoB;IAKjC,mBAAmB,CAAiC;IAKpD,YAAY,CAAU;CACvB;AApBD,gEAoBC;AAjBC;IAFC,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,GAAE;;6DACQ;AAMpB;IAJC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,gCAAc,GAAE;IAChB,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC;8BACb,gBAAgB;iEAAC;AAKjC;IAHC,IAAA,4BAAU,GAAE;IACZ,IAAA,gCAAc,GAAE;IAChB,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC;8BACb,sBAAsB;uEAAQ;AAKpD;IAHC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,GAAG,CAAC;;gEACO","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/system-config/dto/section-visibility.dto.ts"],"sourcesContent":["import {\n  IsOptional,\n  IsBoolean,\n  IsObject,\n  IsString,\n  IsDateString,\n  MaxLength,\n  ValidateNested,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n  Validate,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\n@ValidatorConstraint({ name: 'isWithin30Days', async: false })\nclass IsWithin30DaysConstraint implements ValidatorConstraintInterface {\n  validate(dateString: string, _args: ValidationArguments) {\n    const date = new Date(dateString);\n    const now = new Date();\n    const thirtyDaysFromNow = new Date();\n    thirtyDaysFromNow.setDate(thirtyDaysFromNow.getDate() + 30);\n\n    return date > now && date <= thirtyDaysFromNow;\n  }\n\n  defaultMessage(_args: ValidationArguments) {\n    return 'Scheduled activation must be between now and 30 days from now';\n  }\n}\n\nclass CustomMessageDto {\n  @IsString()\n  @MaxLength(500)\n  'pt-BR': string;\n\n  @IsString()\n  @MaxLength(500)\n  'en': string;\n}\n\nclass ScheduledActivationDto {\n  @IsDateString()\n  @Validate(IsWithin30DaysConstraint)\n  dateTime: string;\n\n  @IsString()\n  timezone: string;\n}\n\nexport class UpdateSectionVisibilityDto {\n  @IsOptional()\n  @IsBoolean()\n  isVisible?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => CustomMessageDto)\n  customMessage?: CustomMessageDto;\n\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => ScheduledActivationDto)\n  scheduledActivation?: ScheduledActivationDto | null;\n\n  @IsOptional()\n  @IsString()\n  @MaxLength(500)\n  changeReason?: string;\n}\n"],"version":3}