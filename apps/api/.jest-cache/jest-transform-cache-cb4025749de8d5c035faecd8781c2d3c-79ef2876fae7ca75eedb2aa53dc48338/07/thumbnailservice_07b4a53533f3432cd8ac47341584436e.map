{"version":3,"names":["common_1","cov_1t3tesoubu","s","require","sharp","__importStar","config_1","client_s3_1","s3_config_1","ThumbnailService","s3Client","bucketName","constructor","configService","f","createS3Client","getS3BucketName","generateThumbnail","file","materialType","originalFileUrl","b","undefined","generateImageThumbnail","thumbnailBuffer","default","buffer","resize","fit","position","jpeg","quality","toBuffer","thumbnailKey","generateThumbnailKey","send","PutObjectCommand","Bucket","Key","Body","ContentType","error","console","urlParts","split","fileName","length","nameWithoutExtension","path","slice","join","exports","__decorate","Injectable","ConfigService"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/press-materials/services/thumbnail.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport * as sharp from 'sharp';\nimport { ConfigService } from '@nestjs/config';\nimport { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';\nimport { createS3Client, getS3BucketName } from '../../../config/s3.config';\nimport { PressMaterialType } from '@vtexday26/shared';\n\n@Injectable()\nexport class ThumbnailService {\n  private s3Client: S3Client;\n  private bucketName: string;\n\n  constructor(configService: ConfigService) {\n    this.s3Client = createS3Client(configService);\n    this.bucketName = getS3BucketName(configService);\n  }\n\n  async generateThumbnail(\n    file: Express.Multer.File,\n    materialType: PressMaterialType,\n    originalFileUrl: string,\n  ): Promise<string | undefined> {\n    if (materialType !== 'photo' && materialType !== 'video') {\n      return undefined;\n    }\n\n    if (materialType === 'photo') {\n      return this.generateImageThumbnail(file, originalFileUrl);\n    }\n\n    // For video thumbnails, we would need ffmpeg which requires more setup\n    // For now, we'll skip video thumbnails\n    return undefined;\n  }\n\n  private async generateImageThumbnail(\n    file: Express.Multer.File,\n    originalFileUrl: string,\n  ): Promise<string> {\n    try {\n      const thumbnailBuffer = await sharp\n        .default(file.buffer)\n        .resize(300, 300, {\n          fit: 'cover',\n          position: 'center',\n        })\n        .jpeg({ quality: 80 })\n        .toBuffer();\n\n      const thumbnailKey = this.generateThumbnailKey(originalFileUrl);\n\n      await this.s3Client.send(\n        new PutObjectCommand({\n          Bucket: this.bucketName,\n          Key: thumbnailKey,\n          Body: thumbnailBuffer,\n          ContentType: 'image/jpeg',\n        }),\n      );\n\n      return `https://${this.bucketName}.s3.amazonaws.com/${thumbnailKey}`;\n    } catch (error) {\n      console.error('Thumbnail generation error:', error);\n      // Return undefined if thumbnail generation fails\n      // We don't want to fail the entire upload because of thumbnail\n      return undefined;\n    }\n  }\n\n  private generateThumbnailKey(originalFileUrl: string): string {\n    const urlParts = originalFileUrl.split('/');\n    const fileName = urlParts[urlParts.length - 1];\n    const nameWithoutExtension = fileName.split('.')[0];\n    const path = urlParts.slice(3, -1).join('/');\n    return `${path}/thumbnails/${nameWithoutExtension}_thumb.jpg`;\n  }\n}\n"],"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","ignoreList":[]}