{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/tests/unit/modules/sponsors/services/sponsors.service.spec.ts","mappings":"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","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/tests/unit/modules/sponsors/services/sponsors.service.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { getModelToken } from '@nestjs/mongoose';\nimport { SponsorsService } from '../../../../../src/modules/sponsors/sponsors.service';\nimport { Sponsor } from '../../../../../src/modules/sponsors/schemas/sponsor.schema';\nimport { SponsorTier } from '../../../../../src/modules/sponsors/schemas/sponsor-tier.schema';\nimport { NotFoundException, ConflictException, BadRequestException } from '@nestjs/common';\nimport { StorageService } from '../../../../../src/modules/storage/services/storage.service';\nimport { FileCategory } from '../../../../../src/modules/storage/types/storage.types';\n\ndescribe('SponsorsService', () => {\n  let service: SponsorsService;\n\n  const mockSponsorTier = {\n    _id: '507f1f77bcf86cd799439014',\n    name: 'Diamond',\n    description: {\n      'pt-BR': 'Patrocinador Diamante',\n      en: 'Diamond Sponsor',\n    },\n    priority: 1,\n    benefits: ['Logo principal', 'Estande premium'],\n    maxSponsors: 3,\n    price: 50000,\n    isActive: true,\n  };\n\n  const mockSponsor = {\n    _id: '507f1f77bcf86cd799439013',\n    name: 'Tech Corp',\n    description: {\n      'pt-BR': 'Empresa de tecnologia líder',\n      en: 'Leading technology company',\n    },\n    logoUrl: 'https://example.com/logo.png',\n    websiteUrl: 'https://techcorp.com',\n    tier: mockSponsorTier._id,\n    contactInfo: {\n      email: 'contact@techcorp.com',\n      phone: '+55 11 99999-9999',\n    },\n    socialLinks: {\n      linkedin: 'https://linkedin.com/company/techcorp',\n      twitter: 'https://twitter.com/techcorp',\n    },\n    tags: ['Technology', 'SaaS'],\n    isVisible: true,\n    priority: 100,\n    deletedAt: null,\n    save: jest.fn().mockResolvedValue(this),\n  };\n\n  const mockSponsorModel = jest.fn().mockImplementation((dto) => ({\n    ...mockSponsor,\n    ...dto,\n    save: jest.fn().mockResolvedValue({ ...mockSponsor, ...dto }),\n  })) as any;\n\n  const mockSponsorTierModel = jest.fn().mockImplementation((dto) => ({\n    ...mockSponsorTier,\n    ...dto,\n    save: jest.fn().mockResolvedValue({ ...mockSponsorTier, ...dto }),\n  })) as any;\n\n  mockSponsorModel.findOne = jest.fn();\n  mockSponsorModel.find = jest.fn();\n  mockSponsorModel.countDocuments = jest.fn();\n  mockSponsorModel.aggregate = jest.fn();\n  mockSponsorModel.create = jest.fn();\n\n  mockSponsorTierModel.findOne = jest.fn();\n  mockSponsorTierModel.find = jest.fn();\n  mockSponsorTierModel.countDocuments = jest.fn();\n  mockSponsorTierModel.create = jest.fn();\n  mockSponsorTierModel.updateOne = jest.fn();\n  mockSponsorTierModel.deleteOne = jest.fn();\n  mockSponsorTierModel.findById = jest.fn();\n\n  const mockStorageService = {\n    uploadFile: jest.fn(),\n  };\n\n  beforeEach(async () => {\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        SponsorsService,\n        {\n          provide: getModelToken(Sponsor.name),\n          useValue: mockSponsorModel,\n        },\n        {\n          provide: getModelToken(SponsorTier.name),\n          useValue: mockSponsorTierModel,\n        },\n        {\n          provide: StorageService,\n          useValue: mockStorageService,\n        },\n      ],\n    }).compile();\n\n    service = module.get<SponsorsService>(SponsorsService);\n  });\n\n  beforeEach(() => {\n    // Reset storage service mock to default behavior before each test\n    mockStorageService.uploadFile.mockReset();\n    mockStorageService.uploadFile.mockResolvedValue({\n      key: 'sponsor-logos/12345-67890.jpg',\n      url: 'https://test-bucket.s3.us-east-1.amazonaws.com/sponsor-logos/12345-67890.jpg',\n    });\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('create', () => {\n    it('should create a new sponsor', async () => {\n      const createDto = {\n        name: 'New Sponsor',\n        slug: 'new-sponsor',\n        description: {\n          'pt-BR': 'Novo patrocinador',\n          en: 'New sponsor',\n        },\n        logoUrl: 'https://example.com/new-logo.png',\n        websiteUrl: 'https://newsponsor.com',\n        tier: mockSponsorTier._id,\n        orderInTier: 1,\n        adminEmail: 'admin@newsponsor.com',\n      };\n\n      mockSponsorModel.findOne.mockResolvedValue(null);\n      mockSponsorTierModel.findById.mockResolvedValue(mockSponsorTier);\n\n      const result = await service.createSponsor(createDto);\n\n      expect(mockSponsorModel.findOne).toHaveBeenCalled();\n      expect(mockSponsorTierModel.findById).toHaveBeenCalledWith(createDto.tier);\n      expect(result).toBeDefined();\n    });\n\n    it('should throw ConflictException if sponsor already exists', async () => {\n      const createDto = {\n        name: 'Tech Corp',\n        slug: 'tech-corp',\n        description: {\n          'pt-BR': 'Empresa existente',\n          en: 'Existing company',\n        },\n        logoUrl: 'https://example.com/logo.png',\n        websiteUrl: 'https://techcorp.com',\n        tier: mockSponsorTier._id,\n        orderInTier: 1,\n        adminEmail: 'admin@techcorp.com',\n      };\n\n      mockSponsorModel.findOne.mockResolvedValue(mockSponsor);\n\n      await expect(service.createSponsor(createDto)).rejects.toThrow(ConflictException);\n    });\n\n    it('should throw NotFoundException if tier not found', async () => {\n      const createDto = {\n        name: 'New Sponsor',\n        slug: 'new-sponsor',\n        description: {\n          'pt-BR': 'Novo patrocinador',\n          en: 'New sponsor',\n        },\n        logoUrl: 'https://example.com/logo.png',\n        websiteUrl: 'https://newsponsor.com',\n        tier: 'nonexistent-tier-id',\n        orderInTier: 1,\n        adminEmail: 'admin@newsponsor.com',\n      };\n\n      mockSponsorModel.findOne.mockResolvedValue(null);\n      mockSponsorTierModel.findById.mockResolvedValue(null);\n\n      await expect(service.createSponsor(createDto)).rejects.toThrow(NotFoundException);\n    });\n  });\n\n  describe('findAll', () => {\n    it('should return paginated sponsors', async () => {\n      const filterDto = {\n        page: 1,\n        limit: 10,\n        sort: '-priority',\n      };\n\n      const sponsors = [mockSponsor];\n      mockSponsorModel.find.mockReturnValue({\n        populate: jest.fn().mockReturnThis(),\n        sort: jest.fn().mockReturnThis(),\n        skip: jest.fn().mockReturnThis(),\n        limit: jest.fn().mockReturnThis(),\n        exec: jest.fn().mockResolvedValue(sponsors),\n      });\n      mockSponsorModel.countDocuments.mockResolvedValue(1);\n\n      const result = await service.findAllSponsors(filterDto);\n\n      expect(result).toEqual({\n        success: true,\n        data: sponsors,\n        metadata: {\n          total: 1,\n          page: 1,\n          limit: 10,\n          hasNext: false,\n          hasPrev: false,\n        },\n      });\n    });\n\n    it('should apply filters correctly', async () => {\n      const filterDto = {\n        page: 1,\n        limit: 20,\n        tier: 'Diamond',\n        tags: ['Technology', 'SaaS'],\n      };\n\n      mockSponsorModel.find.mockReturnValue({\n        populate: jest.fn().mockReturnThis(),\n        sort: jest.fn().mockReturnThis(),\n        skip: jest.fn().mockReturnThis(),\n        limit: jest.fn().mockReturnThis(),\n        exec: jest.fn().mockResolvedValue([]),\n      });\n      mockSponsorModel.countDocuments.mockResolvedValue(0);\n\n      await service.findAllSponsors(filterDto);\n\n      expect(mockSponsorModel.find).toHaveBeenCalledWith({\n        deletedAt: null,\n        tier: 'Diamond',\n        tags: { $in: ['Technology', 'SaaS'] },\n      });\n    });\n  });\n\n  describe('findById', () => {\n    it('should return a sponsor by id', async () => {\n      mockSponsorModel.findOne.mockReturnValue({\n        populate: jest.fn().mockReturnThis(),\n        exec: jest.fn().mockResolvedValue(mockSponsor),\n      });\n\n      const result = await service.findSponsorById('507f1f77bcf86cd799439013');\n\n      expect(result).toEqual(mockSponsor);\n      expect(mockSponsorModel.findOne).toHaveBeenCalledWith({\n        _id: '507f1f77bcf86cd799439013',\n        deletedAt: null,\n      });\n    });\n\n    it('should throw NotFoundException if sponsor not found', async () => {\n      mockSponsorModel.findOne.mockReturnValue({\n        populate: jest.fn().mockReturnThis(),\n        exec: jest.fn().mockResolvedValue(null),\n      });\n\n      await expect(service.findSponsorById('507f1f77bcf86cd799439013')).rejects.toThrow(\n        NotFoundException,\n      );\n    });\n  });\n\n  describe('update', () => {\n    it('should update a sponsor', async () => {\n      const updateDto = {\n        websiteUrl: 'https://newtechcorp.com',\n      };\n\n      const existingSponsor = {\n        ...mockSponsor,\n        save: jest.fn().mockResolvedValue({ ...mockSponsor, ...updateDto }),\n      };\n\n      mockSponsorModel.findOne.mockResolvedValueOnce(existingSponsor).mockResolvedValueOnce(null);\n\n      const result = await service.updateSponsor('507f1f77bcf86cd799439013', updateDto);\n\n      expect(result).toBeDefined();\n      expect(existingSponsor.save).toHaveBeenCalled();\n    });\n\n    it('should throw NotFoundException if sponsor not found', async () => {\n      mockSponsorModel.findOne.mockResolvedValue(null);\n\n      await expect(service.updateSponsor('507f1f77bcf86cd799439013', {})).rejects.toThrow(\n        NotFoundException,\n      );\n    });\n  });\n\n  describe('remove', () => {\n    it('should soft delete a sponsor', async () => {\n      const sponsor = {\n        ...mockSponsor,\n        deletedAt: null as any,\n        deleteReason: null as any,\n        deletedBy: null as any,\n        save: jest.fn().mockResolvedValue(mockSponsor),\n      };\n\n      mockSponsorModel.findOne.mockResolvedValue(sponsor);\n\n      await service.removeSponsor('507f1f77bcf86cd799439013', 'Test reason', 'userId');\n\n      expect(sponsor.deletedAt).toBeDefined();\n      expect(sponsor.deleteReason).toBe('Test reason');\n      expect(sponsor.save).toHaveBeenCalled();\n    });\n\n    it('should throw NotFoundException if sponsor not found', async () => {\n      mockSponsorModel.findOne.mockResolvedValue(null);\n\n      await expect(service.removeSponsor('507f1f77bcf86cd799439013')).rejects.toThrow(\n        NotFoundException,\n      );\n    });\n  });\n\n  describe('restore', () => {\n    it('should restore a soft-deleted sponsor', async () => {\n      const deletedSponsor = {\n        ...mockSponsor,\n        deletedAt: new Date(),\n        deletedBy: 'userId',\n        deleteReason: 'Test',\n        save: jest.fn().mockResolvedValue(mockSponsor),\n      };\n\n      mockSponsorModel.findOne.mockResolvedValue(deletedSponsor);\n\n      await service.restoreSponsor('507f1f77bcf86cd799439013');\n\n      expect(deletedSponsor.deletedAt).toBeNull();\n      expect(deletedSponsor.deletedBy).toBeNull();\n      expect(deletedSponsor.deleteReason).toBeNull();\n      expect(deletedSponsor.save).toHaveBeenCalled();\n    });\n\n    it('should throw NotFoundException if deleted sponsor not found', async () => {\n      mockSponsorModel.findOne.mockResolvedValue(null);\n\n      await expect(service.restoreSponsor('507f1f77bcf86cd799439013')).rejects.toThrow(\n        NotFoundException,\n      );\n    });\n  });\n\n  describe('findByTier', () => {\n    it('should return sponsors grouped by tier', async () => {\n      const sponsorWithTier = {\n        ...mockSponsor,\n        tier: mockSponsorTier,\n      };\n\n      mockSponsorModel.find.mockReturnValue({\n        populate: jest.fn().mockReturnThis(),\n        sort: jest.fn().mockReturnThis(),\n        exec: jest.fn().mockResolvedValue([sponsorWithTier]),\n      });\n\n      const result = await service.findSponsorsByTier();\n\n      expect(result).toHaveProperty(mockSponsorTier.name);\n      expect(result[mockSponsorTier.name]).toContainEqual(sponsorWithTier);\n      expect(mockSponsorModel.find).toHaveBeenCalledWith({\n        isVisible: true,\n        deletedAt: null,\n      });\n    });\n  });\n\n  describe('SponsorTier CRUD', () => {\n    describe('createTier', () => {\n      it('should create a new sponsor tier', async () => {\n        const createTierDto = {\n          name: 'Gold',\n          displayName: {\n            'pt-BR': 'Patrocinador Ouro',\n            en: 'Gold Sponsor',\n          },\n          order: 2,\n          maxPosts: 5,\n        };\n\n        mockSponsorTierModel.findOne.mockResolvedValue(null);\n\n        const result = await service.createTier(createTierDto);\n\n        expect(mockSponsorTierModel.findOne).toHaveBeenCalled();\n        expect(result).toBeDefined();\n      });\n\n      it('should throw ConflictException if tier already exists', async () => {\n        const createTierDto = {\n          name: 'Diamond',\n          displayName: {\n            'pt-BR': 'Patrocinador Diamante',\n            en: 'Diamond Sponsor',\n          },\n          order: 1,\n          maxPosts: 3,\n        };\n\n        mockSponsorTierModel.findOne.mockResolvedValue(mockSponsorTier);\n\n        await expect(service.createTier(createTierDto)).rejects.toThrow(ConflictException);\n      });\n    });\n\n    describe('findAllTiers', () => {\n      it('should return all sponsor tiers', async () => {\n        const tiers = [mockSponsorTier];\n\n        mockSponsorTierModel.find.mockReturnValue({\n          sort: jest.fn().mockReturnThis(),\n          exec: jest.fn().mockResolvedValue(tiers),\n        });\n\n        const result = await service.findAllTiers();\n\n        expect(result).toEqual(tiers);\n        expect(mockSponsorTierModel.find).toHaveBeenCalled();\n      });\n    });\n\n    describe('updateTier', () => {\n      it('should update a sponsor tier', async () => {\n        const updateTierDto = {\n          maxPosts: 10,\n        };\n\n        const existingTier = {\n          ...mockSponsorTier,\n          save: jest.fn().mockResolvedValue({ ...mockSponsorTier, ...updateTierDto }),\n        };\n\n        mockSponsorTierModel.findById.mockResolvedValue(existingTier);\n\n        const result = await service.updateTier('507f1f77bcf86cd799439014', updateTierDto);\n\n        expect(result).toBeDefined();\n        expect(existingTier.save).toHaveBeenCalled();\n      });\n\n      it('should throw NotFoundException if tier not found', async () => {\n        mockSponsorTierModel.findById.mockResolvedValue(null);\n\n        await expect(service.updateTier('507f1f77bcf86cd799439014', {})).rejects.toThrow(\n          NotFoundException,\n        );\n      });\n    });\n\n    describe('deleteTier', () => {\n      it('should delete a sponsor tier', async () => {\n        mockSponsorModel.findOne.mockResolvedValue(null);\n        mockSponsorTierModel.deleteOne.mockResolvedValue({ deletedCount: 1 });\n\n        await service.removeTier('507f1f77bcf86cd799439014');\n\n        expect(mockSponsorTierModel.deleteOne).toHaveBeenCalledWith({\n          _id: '507f1f77bcf86cd799439014',\n        });\n      });\n\n      it('should throw ConflictException if tier has sponsors', async () => {\n        mockSponsorModel.findOne.mockResolvedValue(mockSponsor);\n\n        await expect(service.removeTier('507f1f77bcf86cd799439014')).rejects.toThrow(\n          ConflictException,\n        );\n      });\n    });\n  });\n\n  describe('uploadLogo', () => {\n    const mockFile: Express.Multer.File = {\n      fieldname: 'file',\n      originalname: 'test-logo.jpg',\n      encoding: '7bit',\n      mimetype: 'image/jpeg',\n      size: 1024 * 500, // 500KB\n      buffer: Buffer.from('fake-image-data'),\n      stream: null as any,\n      destination: '',\n      filename: '',\n      path: '',\n    };\n\n    it('should successfully upload logo and update sponsor', async () => {\n      const sponsorId = mockSponsor._id;\n      const mockSponsorDoc = {\n        ...mockSponsor,\n        save: jest\n          .fn()\n          .mockResolvedValue({ ...mockSponsor, logoUrl: mockStorageService.uploadFile().url }),\n      };\n\n      mockSponsorModel.findOne.mockResolvedValue(mockSponsorDoc);\n\n      const result = await service.uploadLogo(sponsorId, mockFile);\n\n      // Verify sponsor was found\n      expect(mockSponsorModel.findOne).toHaveBeenCalledWith({\n        _id: sponsorId,\n        deletedAt: null,\n      });\n\n      // Verify file was uploaded to storage\n      expect(mockStorageService.uploadFile).toHaveBeenCalledWith(\n        mockFile,\n        FileCategory.SPONSOR_LOGOS,\n      );\n\n      // Verify sponsor logoUrl was updated\n      expect(mockSponsorDoc.logoUrl).toBe(\n        'https://test-bucket.s3.us-east-1.amazonaws.com/sponsor-logos/12345-67890.jpg',\n      );\n      expect(mockSponsorDoc.save).toHaveBeenCalled();\n\n      // Verify returned URL\n      expect(result).toBe(\n        'https://test-bucket.s3.us-east-1.amazonaws.com/sponsor-logos/12345-67890.jpg',\n      );\n    });\n\n    it('should throw NotFoundException if sponsor does not exist', async () => {\n      const nonExistentId = '507f1f77bcf86cd799439999';\n      mockSponsorModel.findOne.mockResolvedValue(null);\n\n      await expect(service.uploadLogo(nonExistentId, mockFile)).rejects.toThrow(NotFoundException);\n      await expect(service.uploadLogo(nonExistentId, mockFile)).rejects.toThrow(\n        `Sponsor with ID ${nonExistentId} not found`,\n      );\n\n      expect(mockSponsorModel.findOne).toHaveBeenCalledWith({\n        _id: nonExistentId,\n        deletedAt: null,\n      });\n      expect(mockStorageService.uploadFile).not.toHaveBeenCalled();\n    });\n\n    it('should throw NotFoundException if sponsor is soft-deleted', async () => {\n      const deletedSponsorId = mockSponsor._id;\n      mockSponsorModel.findOne.mockResolvedValue(null);\n\n      await expect(service.uploadLogo(deletedSponsorId, mockFile)).rejects.toThrow(\n        NotFoundException,\n      );\n      expect(mockStorageService.uploadFile).not.toHaveBeenCalled();\n    });\n\n    it('should propagate StorageService errors (invalid file type)', async () => {\n      const sponsorId = mockSponsor._id;\n      const mockSponsorDoc = { ...mockSponsor, save: jest.fn() };\n\n      mockSponsorModel.findOne.mockResolvedValue(mockSponsorDoc);\n      mockStorageService.uploadFile.mockRejectedValue(\n        new BadRequestException('Invalid file type. Only JPEG, PNG, WEBP files are allowed.'),\n      );\n\n      await expect(service.uploadLogo(sponsorId, mockFile)).rejects.toThrow(BadRequestException);\n      await expect(service.uploadLogo(sponsorId, mockFile)).rejects.toThrow('Invalid file type');\n\n      expect(mockSponsorModel.findOne).toHaveBeenCalled();\n      expect(mockStorageService.uploadFile).toHaveBeenCalled();\n      expect(mockSponsorDoc.save).not.toHaveBeenCalled();\n    });\n\n    it('should propagate StorageService errors (file too large)', async () => {\n      const sponsorId = mockSponsor._id;\n      const mockSponsorDoc = { ...mockSponsor, save: jest.fn() };\n\n      mockSponsorModel.findOne.mockResolvedValue(mockSponsorDoc);\n      mockStorageService.uploadFile.mockRejectedValue(\n        new BadRequestException('File size exceeds maximum allowed size of 5MB'),\n      );\n\n      await expect(service.uploadLogo(sponsorId, mockFile)).rejects.toThrow(BadRequestException);\n      expect(mockSponsorDoc.save).not.toHaveBeenCalled();\n    });\n\n    it('should propagate StorageService errors (virus detected)', async () => {\n      const sponsorId = mockSponsor._id;\n      const mockSponsorDoc = { ...mockSponsor, save: jest.fn() };\n\n      mockSponsorModel.findOne.mockResolvedValue(mockSponsorDoc);\n      mockStorageService.uploadFile.mockRejectedValue(\n        new BadRequestException('Virus detected in uploaded file'),\n      );\n\n      await expect(service.uploadLogo(sponsorId, mockFile)).rejects.toThrow(BadRequestException);\n      await expect(service.uploadLogo(sponsorId, mockFile)).rejects.toThrow('Virus detected');\n      expect(mockSponsorDoc.save).not.toHaveBeenCalled();\n    });\n\n    it('should update logoUrl correctly when uploading new logo over existing one', async () => {\n      const sponsorId = mockSponsor._id;\n      const oldLogoUrl = 'https://example.com/old-logo.png';\n      const newLogoUrl =\n        'https://test-bucket.s3.us-east-1.amazonaws.com/sponsor-logos/12345-67890.jpg';\n\n      const mockSponsorDoc = {\n        ...mockSponsor,\n        logoUrl: oldLogoUrl,\n        save: jest.fn().mockResolvedValue({ ...mockSponsor, logoUrl: newLogoUrl }),\n      };\n\n      mockSponsorModel.findOne.mockResolvedValue(mockSponsorDoc);\n\n      const result = await service.uploadLogo(sponsorId, mockFile);\n\n      expect(mockSponsorDoc.logoUrl).toBe(newLogoUrl);\n      expect(result).toBe(newLogoUrl);\n      expect(mockSponsorDoc.save).toHaveBeenCalled();\n    });\n\n    it('should handle database save errors gracefully', async () => {\n      const sponsorId = mockSponsor._id;\n      const mockSponsorDoc = {\n        ...mockSponsor,\n        save: jest.fn().mockRejectedValue(new Error('Database connection error')),\n      };\n\n      mockSponsorModel.findOne.mockResolvedValue(mockSponsorDoc);\n\n      await expect(service.uploadLogo(sponsorId, mockFile)).rejects.toThrow(\n        'Database connection error',\n      );\n\n      expect(mockStorageService.uploadFile).toHaveBeenCalled();\n      expect(mockSponsorDoc.save).toHaveBeenCalled();\n    });\n  });\n});\n"],"version":3}