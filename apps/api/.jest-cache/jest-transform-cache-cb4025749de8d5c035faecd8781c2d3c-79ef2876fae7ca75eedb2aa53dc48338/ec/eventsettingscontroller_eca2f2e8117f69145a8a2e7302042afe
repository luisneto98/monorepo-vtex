41e94797069db07dbc953ee185d7c1d8
"use strict";

/* istanbul ignore next */
function cov_1v1fdjjn21() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/event-settings/event-settings.controller.ts";
  var hash = "9d6ac7b1330980ce8becf296a3fb0262420a9681";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/event-settings/event-settings.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "17": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "19": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "20": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 48
        }
      },
      "21": {
        start: {
          line: 19,
          column: 33
        },
        end: {
          line: 19,
          column: 68
        }
      },
      "22": {
        start: {
          line: 20,
          column: 36
        },
        end: {
          line: 20,
          column: 78
        }
      },
      "23": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 65
        }
      },
      "24": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 59
        }
      },
      "25": {
        start: {
          line: 23,
          column: 26
        },
        end: {
          line: 23,
          column: 71
        }
      },
      "26": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 78
        }
      },
      "27": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 45
        }
      },
      "28": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "29": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "30": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 61
        }
      },
      "31": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 103
        }
      },
      "32": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 67
        }
      },
      "33": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 58
        }
      },
      "34": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 58,
          column: 59
        }
      },
      "35": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 86,
          column: 62
        }
      },
      "36": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 105,
          column: 65
        }
      },
      "37": {
        start: {
          line: 106,
          column: 0
        },
        end: {
          line: 110,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 38
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 54
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/event-settings/event-settings.controller.ts",
      mappings: "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",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/event-settings/event-settings.controller.ts"],
      sourcesContent: ["import { Controller, Get, Put, Body, UseGuards, Request, HttpStatus } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { Throttle } from '@nestjs/throttler';\nimport { EventSettingsService } from './event-settings.service';\nimport { UpdateEventSettingsDto } from './dto/update-event-settings.dto';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../auth/guards/roles.guard';\nimport { Roles } from '../auth/decorators/roles.decorator';\nimport { Public } from '../../common/decorators/public.decorator';\nimport { UserRole } from '@vtexday26/shared';\n\n@ApiTags('event-settings')\n@Controller('event-settings')\nexport class EventSettingsController {\n  constructor(private readonly eventSettingsService: EventSettingsService) {}\n\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Get event settings' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Returns the current event settings',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Unauthorized',\n  })\n  async getSettings() {\n    return await this.eventSettingsService.getSettings();\n  }\n\n  @Put()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Update event settings (Admin only)' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Event settings have been successfully updated',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Unauthorized',\n  })\n  @ApiResponse({\n    status: HttpStatus.FORBIDDEN,\n    description: 'Forbidden - Admin role required',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Invalid data provided',\n  })\n  async updateSettings(\n    @Body() updateEventSettingsDto: UpdateEventSettingsDto,\n    @Request() req: any,\n  ) {\n    return await this.eventSettingsService.updateSettings(updateEventSettingsDto, req.user.userId);\n  }\n\n  @Get('public')\n  @Public() // No authentication required\n  @Throttle({ default: { limit: 30, ttl: 60000 } }) // 30 requests per minute per IP\n  @ApiOperation({ summary: 'Get public event settings (no auth required)' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Returns the public event settings',\n  })\n  @ApiResponse({\n    status: HttpStatus.TOO_MANY_REQUESTS,\n    description: 'Too many requests - rate limit exceeded',\n  })\n  async getPublicSettings() {\n    return await this.eventSettingsService.getPublicSettings();\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9d6ac7b1330980ce8becf296a3fb0262420a9681"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1v1fdjjn21 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1v1fdjjn21();
var __decorate =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[0]++,
/* istanbul ignore next */
(cov_1v1fdjjn21().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1v1fdjjn21().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_1v1fdjjn21().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_1v1fdjjn21().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_1v1fdjjn21().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_1v1fdjjn21().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_1v1fdjjn21().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_1v1fdjjn21().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_1v1fdjjn21().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_1v1fdjjn21().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_1v1fdjjn21().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_1v1fdjjn21().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1v1fdjjn21().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_1v1fdjjn21().b[3][0]++;
    cov_1v1fdjjn21().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_1v1fdjjn21().b[3][1]++;
    cov_1v1fdjjn21().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_1v1fdjjn21().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_1v1fdjjn21().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_1v1fdjjn21().b[5][0]++;
        cov_1v1fdjjn21().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_1v1fdjjn21().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_1v1fdjjn21().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_1v1fdjjn21().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_1v1fdjjn21().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_1v1fdjjn21().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_1v1fdjjn21().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_1v1fdjjn21().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1v1fdjjn21().s[9]++;
  return /* istanbul ignore next */(cov_1v1fdjjn21().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_1v1fdjjn21().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_1v1fdjjn21().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[10]++,
/* istanbul ignore next */
(cov_1v1fdjjn21().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1v1fdjjn21().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_1v1fdjjn21().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_1v1fdjjn21().f[1]++;
  cov_1v1fdjjn21().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1v1fdjjn21().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1v1fdjjn21().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_1v1fdjjn21().b[11][0]++;
    cov_1v1fdjjn21().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_1v1fdjjn21().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[13]++,
/* istanbul ignore next */
(cov_1v1fdjjn21().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_1v1fdjjn21().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_1v1fdjjn21().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_1v1fdjjn21().f[2]++;
  cov_1v1fdjjn21().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_1v1fdjjn21().f[3]++;
    cov_1v1fdjjn21().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
/* istanbul ignore next */
cov_1v1fdjjn21().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1v1fdjjn21().s[17]++;
exports.EventSettingsController = void 0;
const common_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[18]++, require("@nestjs/common"));
const swagger_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[19]++, require("@nestjs/swagger"));
const throttler_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[20]++, require("@nestjs/throttler"));
const event_settings_service_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[21]++, require("./event-settings.service"));
const update_event_settings_dto_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[22]++, require("./dto/update-event-settings.dto"));
const jwt_auth_guard_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[23]++, require("../auth/guards/jwt-auth.guard"));
const roles_guard_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[24]++, require("../auth/guards/roles.guard"));
const roles_decorator_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[25]++, require("../auth/decorators/roles.decorator"));
const public_decorator_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[26]++, require("../../common/decorators/public.decorator"));
const shared_1 =
/* istanbul ignore next */
(cov_1v1fdjjn21().s[27]++, require("@vtexday26/shared"));
/* istanbul ignore next */
cov_1v1fdjjn21().s[28]++;
let EventSettingsController = class EventSettingsController {
  eventSettingsService;
  constructor(eventSettingsService) {
    /* istanbul ignore next */
    cov_1v1fdjjn21().f[4]++;
    cov_1v1fdjjn21().s[29]++;
    this.eventSettingsService = eventSettingsService;
  }
  async getSettings() {
    /* istanbul ignore next */
    cov_1v1fdjjn21().f[5]++;
    cov_1v1fdjjn21().s[30]++;
    return await this.eventSettingsService.getSettings();
  }
  async updateSettings(updateEventSettingsDto, req) {
    /* istanbul ignore next */
    cov_1v1fdjjn21().f[6]++;
    cov_1v1fdjjn21().s[31]++;
    return await this.eventSettingsService.updateSettings(updateEventSettingsDto, req.user.userId);
  }
  async getPublicSettings() {
    /* istanbul ignore next */
    cov_1v1fdjjn21().f[7]++;
    cov_1v1fdjjn21().s[32]++;
    return await this.eventSettingsService.getPublicSettings();
  }
};
/* istanbul ignore next */
cov_1v1fdjjn21().s[33]++;
exports.EventSettingsController = EventSettingsController;
/* istanbul ignore next */
cov_1v1fdjjn21().s[34]++;
__decorate([(0, common_1.Get)(), (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard), (0, swagger_1.ApiBearerAuth)(), (0, swagger_1.ApiOperation)({
  summary: 'Get event settings'
}), (0, swagger_1.ApiResponse)({
  status: common_1.HttpStatus.OK,
  description: 'Returns the current event settings'
}), (0, swagger_1.ApiResponse)({
  status: common_1.HttpStatus.UNAUTHORIZED,
  description: 'Unauthorized'
}), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], EventSettingsController.prototype, "getSettings", null);
/* istanbul ignore next */
cov_1v1fdjjn21().s[35]++;
__decorate([(0, common_1.Put)(), (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard), (0, roles_decorator_1.Roles)(shared_1.UserRole.SUPER_ADMIN), (0, swagger_1.ApiBearerAuth)(), (0, swagger_1.ApiOperation)({
  summary: 'Update event settings (Admin only)'
}), (0, swagger_1.ApiResponse)({
  status: common_1.HttpStatus.OK,
  description: 'Event settings have been successfully updated'
}), (0, swagger_1.ApiResponse)({
  status: common_1.HttpStatus.UNAUTHORIZED,
  description: 'Unauthorized'
}), (0, swagger_1.ApiResponse)({
  status: common_1.HttpStatus.FORBIDDEN,
  description: 'Forbidden - Admin role required'
}), (0, swagger_1.ApiResponse)({
  status: common_1.HttpStatus.BAD_REQUEST,
  description: 'Invalid data provided'
}), __param(0, (0, common_1.Body)()), __param(1, (0, common_1.Request)()), __metadata("design:type", Function), __metadata("design:paramtypes", [update_event_settings_dto_1.UpdateEventSettingsDto, Object]), __metadata("design:returntype", Promise)], EventSettingsController.prototype, "updateSettings", null);
/* istanbul ignore next */
cov_1v1fdjjn21().s[36]++;
__decorate([(0, common_1.Get)('public'), (0, public_decorator_1.Public)() // No authentication required
, (0, throttler_1.Throttle)({
  default: {
    limit: 30,
    ttl: 60000
  }
}) // 30 requests per minute per IP
, (0, swagger_1.ApiOperation)({
  summary: 'Get public event settings (no auth required)'
}), (0, swagger_1.ApiResponse)({
  status: common_1.HttpStatus.OK,
  description: 'Returns the public event settings'
}), (0, swagger_1.ApiResponse)({
  status: common_1.HttpStatus.TOO_MANY_REQUESTS,
  description: 'Too many requests - rate limit exceeded'
}), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], EventSettingsController.prototype, "getPublicSettings", null);
/* istanbul ignore next */
cov_1v1fdjjn21().s[37]++;
exports.EventSettingsController = EventSettingsController = __decorate([(0, swagger_1.ApiTags)('event-settings'), (0, common_1.Controller)('event-settings'), __metadata("design:paramtypes", [event_settings_service_1.EventSettingsService])], EventSettingsController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,