f2eec31db15a464e93f96050a3172e18
"use strict";

/* istanbul ignore next */
function cov_qrcezql7z() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/storage/services/storage-config.service.ts";
  var hash = "6ff07b11d133934a2f8f451a4dcdb75313cd60aa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/storage/services/storage-config.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "15": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "16": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "17": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "18": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 43
        }
      },
      "19": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 65
        }
      },
      "20": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 79
        }
      },
      "21": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "22": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 67
        }
      },
      "23": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 71
        }
      },
      "24": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 53
        }
      },
      "25": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 59
        }
      },
      "26": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 52
        }
      },
      "27": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 46,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 19
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/storage/services/storage-config.service.ts",
      mappings: ";;;;;;;;;;;;AAAA,2CAA4C;AAC5C,2CAA+C;AAGxC,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IACX;IAApB,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpD,YAAY;QACV,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAS,YAAY,EAAE,WAAW,CAAC,CAAC;IACnE,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAS,eAAe,EAAE,sBAAsB,CAAC,CAAC;IACjF,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAS,mBAAmB,EAAE,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,qBAAqB;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAS,uBAAuB,EAAE,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,sBAAsB;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAU,wBAAwB,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAS,aAAa,CAAC,CAAC;IACvD,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAS,aAAa,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;CACF,CAAA;AA9BY,oDAAoB;+BAApB,oBAAoB;IADhC,IAAA,mBAAU,GAAE;qCAEwB,sBAAa;GADrC,oBAAoB,CA8BhC",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/storage/services/storage-config.service.ts"],
      sourcesContent: ["import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class StorageConfigService {\n  constructor(private configService: ConfigService) {}\n\n  getAwsRegion(): string {\n    return this.configService.get<string>('AWS_REGION', 'us-east-1');\n  }\n\n  getAwsBucket(): string {\n    return this.configService.get<string>('AWS_S3_BUCKET', 'vtexday26-legal-docs');\n  }\n\n  getAwsAccessKeyId(): string {\n    return this.configService.get<string>('AWS_ACCESS_KEY_ID', '');\n  }\n\n  getAwsSecretAccessKey(): string {\n    return this.configService.get<string>('AWS_SECRET_ACCESS_KEY', '');\n  }\n\n  isVirusScanningEnabled(): boolean {\n    return this.configService.get<boolean>('VIRUS_SCANNING_ENABLED', false);\n  }\n\n  getClamAvHost(): string | undefined {\n    return this.configService.get<string>('CLAMAV_HOST');\n  }\n\n  getClamAvPort(): number {\n    return this.configService.get<number>('CLAMAV_PORT', 3310);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6ff07b11d133934a2f8f451a4dcdb75313cd60aa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qrcezql7z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qrcezql7z();
var __decorate =
/* istanbul ignore next */
(cov_qrcezql7z().s[0]++,
/* istanbul ignore next */
(cov_qrcezql7z().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_qrcezql7z().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_qrcezql7z().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_qrcezql7z().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_qrcezql7z().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_qrcezql7z().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_qrcezql7z().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_qrcezql7z().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_qrcezql7z().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_qrcezql7z().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_qrcezql7z().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_qrcezql7z().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_qrcezql7z().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_qrcezql7z().b[3][0]++;
    cov_qrcezql7z().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_qrcezql7z().b[3][1]++;
    cov_qrcezql7z().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_qrcezql7z().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_qrcezql7z().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_qrcezql7z().b[5][0]++;
        cov_qrcezql7z().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_qrcezql7z().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_qrcezql7z().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_qrcezql7z().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_qrcezql7z().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_qrcezql7z().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_qrcezql7z().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_qrcezql7z().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_qrcezql7z().s[9]++;
  return /* istanbul ignore next */(cov_qrcezql7z().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_qrcezql7z().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_qrcezql7z().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_qrcezql7z().s[10]++,
/* istanbul ignore next */
(cov_qrcezql7z().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_qrcezql7z().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_qrcezql7z().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_qrcezql7z().f[1]++;
  cov_qrcezql7z().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_qrcezql7z().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_qrcezql7z().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_qrcezql7z().b[11][0]++;
    cov_qrcezql7z().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_qrcezql7z().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_qrcezql7z().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_qrcezql7z().s[14]++;
exports.StorageConfigService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_qrcezql7z().s[15]++, require("@nestjs/common"));
const config_1 =
/* istanbul ignore next */
(cov_qrcezql7z().s[16]++, require("@nestjs/config"));
/* istanbul ignore next */
cov_qrcezql7z().s[17]++;
let StorageConfigService = class StorageConfigService {
  configService;
  constructor(configService) {
    /* istanbul ignore next */
    cov_qrcezql7z().f[2]++;
    cov_qrcezql7z().s[18]++;
    this.configService = configService;
  }
  getAwsRegion() {
    /* istanbul ignore next */
    cov_qrcezql7z().f[3]++;
    cov_qrcezql7z().s[19]++;
    return this.configService.get('AWS_REGION', 'us-east-1');
  }
  getAwsBucket() {
    /* istanbul ignore next */
    cov_qrcezql7z().f[4]++;
    cov_qrcezql7z().s[20]++;
    return this.configService.get('AWS_S3_BUCKET', 'vtexday26-legal-docs');
  }
  getAwsAccessKeyId() {
    /* istanbul ignore next */
    cov_qrcezql7z().f[5]++;
    cov_qrcezql7z().s[21]++;
    return this.configService.get('AWS_ACCESS_KEY_ID', '');
  }
  getAwsSecretAccessKey() {
    /* istanbul ignore next */
    cov_qrcezql7z().f[6]++;
    cov_qrcezql7z().s[22]++;
    return this.configService.get('AWS_SECRET_ACCESS_KEY', '');
  }
  isVirusScanningEnabled() {
    /* istanbul ignore next */
    cov_qrcezql7z().f[7]++;
    cov_qrcezql7z().s[23]++;
    return this.configService.get('VIRUS_SCANNING_ENABLED', false);
  }
  getClamAvHost() {
    /* istanbul ignore next */
    cov_qrcezql7z().f[8]++;
    cov_qrcezql7z().s[24]++;
    return this.configService.get('CLAMAV_HOST');
  }
  getClamAvPort() {
    /* istanbul ignore next */
    cov_qrcezql7z().f[9]++;
    cov_qrcezql7z().s[25]++;
    return this.configService.get('CLAMAV_PORT', 3310);
  }
};
/* istanbul ignore next */
cov_qrcezql7z().s[26]++;
exports.StorageConfigService = StorageConfigService;
/* istanbul ignore next */
cov_qrcezql7z().s[27]++;
exports.StorageConfigService = StorageConfigService = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [config_1.ConfigService])], StorageConfigService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfcXJjZXpxbDd6IiwiYWN0dWFsQ292ZXJhZ2UiLCJjb21tb25fMSIsInMiLCJyZXF1aXJlIiwiY29uZmlnXzEiLCJTdG9yYWdlQ29uZmlnU2VydmljZSIsImNvbmZpZ1NlcnZpY2UiLCJjb25zdHJ1Y3RvciIsImYiLCJnZXRBd3NSZWdpb24iLCJnZXQiLCJnZXRBd3NCdWNrZXQiLCJnZXRBd3NBY2Nlc3NLZXlJZCIsImdldEF3c1NlY3JldEFjY2Vzc0tleSIsImlzVmlydXNTY2FubmluZ0VuYWJsZWQiLCJnZXRDbGFtQXZIb3N0IiwiZ2V0Q2xhbUF2UG9ydCIsImV4cG9ydHMiLCJfX2RlY29yYXRlIiwiSW5qZWN0YWJsZSIsIkNvbmZpZ1NlcnZpY2UiXSwic291cmNlcyI6WyIvaG9tZS9sdWlzbmV0bzk4L0RvY3VtZW50b3MvQ29kZS9tb25vcmVwby12dGV4L2FwcHMvYXBpL3NyYy9tb2R1bGVzL3N0b3JhZ2Uvc2VydmljZXMvc3RvcmFnZS1jb25maWcuc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuaW1wb3J0IHsgQ29uZmlnU2VydmljZSB9IGZyb20gJ0BuZXN0anMvY29uZmlnJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VDb25maWdTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb25maWdTZXJ2aWNlOiBDb25maWdTZXJ2aWNlKSB7fVxuXG4gIGdldEF3c1JlZ2lvbigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZ1NlcnZpY2UuZ2V0PHN0cmluZz4oJ0FXU19SRUdJT04nLCAndXMtZWFzdC0xJyk7XG4gIH1cblxuICBnZXRBd3NCdWNrZXQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5jb25maWdTZXJ2aWNlLmdldDxzdHJpbmc+KCdBV1NfUzNfQlVDS0VUJywgJ3Z0ZXhkYXkyNi1sZWdhbC1kb2NzJyk7XG4gIH1cblxuICBnZXRBd3NBY2Nlc3NLZXlJZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZ1NlcnZpY2UuZ2V0PHN0cmluZz4oJ0FXU19BQ0NFU1NfS0VZX0lEJywgJycpO1xuICB9XG5cbiAgZ2V0QXdzU2VjcmV0QWNjZXNzS2V5KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuY29uZmlnU2VydmljZS5nZXQ8c3RyaW5nPignQVdTX1NFQ1JFVF9BQ0NFU1NfS0VZJywgJycpO1xuICB9XG5cbiAgaXNWaXJ1c1NjYW5uaW5nRW5hYmxlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5jb25maWdTZXJ2aWNlLmdldDxib29sZWFuPignVklSVVNfU0NBTk5JTkdfRU5BQkxFRCcsIGZhbHNlKTtcbiAgfVxuXG4gIGdldENsYW1Bdkhvc3QoKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5jb25maWdTZXJ2aWNlLmdldDxzdHJpbmc+KCdDTEFNQVZfSE9TVCcpO1xuICB9XG5cbiAgZ2V0Q2xhbUF2UG9ydCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZ1NlcnZpY2UuZ2V0PG51bWJlcj4oJ0NMQU1BVl9QT1JUJywgMzMxMCk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUtzQjtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFMdEIsTUFBQUUsUUFBQTtBQUFBO0FBQUEsQ0FBQUYsYUFBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFDQSxNQUFBQyxRQUFBO0FBQUE7QUFBQSxDQUFBTCxhQUFBLEdBQUFHLENBQUEsUUFBQUMsT0FBQTtBQUErQztBQUFBSixhQUFBLEdBQUFHLENBQUE7QUFHeEMsSUFBTUcsb0JBQW9CLEdBQTFCLE1BQU1BLG9CQUFvQjtFQUNYQyxhQUFBO0VBQXBCQyxZQUFvQkQsYUFBNEI7SUFBQTtJQUFBUCxhQUFBLEdBQUFTLENBQUE7SUFBQVQsYUFBQSxHQUFBRyxDQUFBO0lBQTVCLEtBQUFJLGFBQWEsR0FBYkEsYUFBYTtFQUFrQjtFQUVuREcsWUFBWUEsQ0FBQTtJQUFBO0lBQUFWLGFBQUEsR0FBQVMsQ0FBQTtJQUFBVCxhQUFBLEdBQUFHLENBQUE7SUFDVixPQUFPLElBQUksQ0FBQ0ksYUFBYSxDQUFDSSxHQUFHLENBQVMsWUFBWSxFQUFFLFdBQVcsQ0FBQztFQUNsRTtFQUVBQyxZQUFZQSxDQUFBO0lBQUE7SUFBQVosYUFBQSxHQUFBUyxDQUFBO0lBQUFULGFBQUEsR0FBQUcsQ0FBQTtJQUNWLE9BQU8sSUFBSSxDQUFDSSxhQUFhLENBQUNJLEdBQUcsQ0FBUyxlQUFlLEVBQUUsc0JBQXNCLENBQUM7RUFDaEY7RUFFQUUsaUJBQWlCQSxDQUFBO0lBQUE7SUFBQWIsYUFBQSxHQUFBUyxDQUFBO0lBQUFULGFBQUEsR0FBQUcsQ0FBQTtJQUNmLE9BQU8sSUFBSSxDQUFDSSxhQUFhLENBQUNJLEdBQUcsQ0FBUyxtQkFBbUIsRUFBRSxFQUFFLENBQUM7RUFDaEU7RUFFQUcscUJBQXFCQSxDQUFBO0lBQUE7SUFBQWQsYUFBQSxHQUFBUyxDQUFBO0lBQUFULGFBQUEsR0FBQUcsQ0FBQTtJQUNuQixPQUFPLElBQUksQ0FBQ0ksYUFBYSxDQUFDSSxHQUFHLENBQVMsdUJBQXVCLEVBQUUsRUFBRSxDQUFDO0VBQ3BFO0VBRUFJLHNCQUFzQkEsQ0FBQTtJQUFBO0lBQUFmLGFBQUEsR0FBQVMsQ0FBQTtJQUFBVCxhQUFBLEdBQUFHLENBQUE7SUFDcEIsT0FBTyxJQUFJLENBQUNJLGFBQWEsQ0FBQ0ksR0FBRyxDQUFVLHdCQUF3QixFQUFFLEtBQUssQ0FBQztFQUN6RTtFQUVBSyxhQUFhQSxDQUFBO0lBQUE7SUFBQWhCLGFBQUEsR0FBQVMsQ0FBQTtJQUFBVCxhQUFBLEdBQUFHLENBQUE7SUFDWCxPQUFPLElBQUksQ0FBQ0ksYUFBYSxDQUFDSSxHQUFHLENBQVMsYUFBYSxDQUFDO0VBQ3REO0VBRUFNLGFBQWFBLENBQUE7SUFBQTtJQUFBakIsYUFBQSxHQUFBUyxDQUFBO0lBQUFULGFBQUEsR0FBQUcsQ0FBQTtJQUNYLE9BQU8sSUFBSSxDQUFDSSxhQUFhLENBQUNJLEdBQUcsQ0FBUyxhQUFhLEVBQUUsSUFBSSxDQUFDO0VBQzVEO0NBQ0Q7QUFBQTtBQUFBWCxhQUFBLEdBQUFHLENBQUE7QUE5QlllLE9BQUEsQ0FBQVosb0JBQUEsR0FBQUEsb0JBQUE7QUFBb0I7QUFBQU4sYUFBQSxHQUFBRyxDQUFBOytCQUFwQkcsb0JBQW9CLEdBQUFhLFVBQUEsRUFEaEMsSUFBQWpCLFFBQUEsQ0FBQWtCLFVBQVUsR0FBRSxFLGlDQUV3QmYsUUFBQSxDQUFBZ0IsYUFBYSxHLEVBRHJDZixvQkFBb0IsQ0E4QmhDIiwiaWdub3JlTGlzdCI6W119