6a7b42ae18b329641b71e7725ce93977
"use strict";

/* istanbul ignore next */
function cov_nptuhzwfi() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/guards/notification-throttle.guard.ts";
  var hash = "27689f9d5449d7c8c3ed5a1bd50ffc626873a5c9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/guards/notification-throttle.guard.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 43
        }
      },
      "15": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "16": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "17": {
        start: {
          line: 15,
          column: 42
        },
        end: {
          line: 15,
          column: 98
        }
      },
      "18": {
        start: {
          line: 16,
          column: 32
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "19": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "20": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "21": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 71
        }
      },
      "22": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "23": {
        start: {
          line: 25,
          column: 32
        },
        end: {
          line: 25,
          column: 133
        }
      },
      "24": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "25": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "26": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "27": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 46
        }
      },
      "28": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "29": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 105
        }
      },
      "30": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 53
        }
      },
      "31": {
        start: {
          line: 36,
          column: 31
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "32": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 30
        }
      },
      "33": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 48
        }
      },
      "34": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "35": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "36": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 48
        }
      },
      "37": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "38": {
        start: {
          line: 49,
          column: 34
        },
        end: {
          line: 49,
          column: 76
        }
      },
      "39": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 160
        }
      },
      "40": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 23
        }
      },
      "41": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 44
        }
      },
      "42": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 20
        }
      },
      "43": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 30
        }
      },
      "44": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "45": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "46": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 47
        }
      },
      "47": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 62
        }
      },
      "48": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 70,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 21
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 54
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 28
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "14": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "15": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "16": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 19
          }
        }, {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 45
          }
        }],
        line: 40
      },
      "17": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "18": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/guards/notification-throttle.guard.ts",
      mappings: ";;;;;;;;;;;;AAAA,2CAMwB;AACxB,uCAAyC;AACzC,mGAGuD;AAQhD,IAAM,yBAAyB,GAA/B,MAAM,yBAAyB;IAGP;IAFZ,aAAa,GAAG,IAAI,GAAG,EAA0B,CAAC;IAEnE,YAA6B,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAC/C,2CAA2C;QAC3C,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,OAAyB;QACzC,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CACxC,2DAAyB,EACzB,OAAO,CAAC,UAAU,EAAE,CACrB,CAAC;QAEF,IAAI,CAAC,eAAe,EAAE,CAAC;YACrB,sDAAsD;YACtD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACpD,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC;QAEvC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,sBAAa,CAAC,wBAAwB,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;QAC7E,CAAC;QAED,MAAM,GAAG,GAAG,yBAAyB,MAAM,EAAE,CAAC;QAC9C,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,eAAe,CAAC;QACvC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEvB,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEzC,iCAAiC;QACjC,IAAI,CAAC,MAAM,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;YACtC,MAAM,GAAG;gBACP,KAAK,EAAE,CAAC;gBACR,SAAS,EAAE,GAAG,GAAG,GAAG;aACrB,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC;QAED,0BAA0B;QAC1B,IAAI,MAAM,CAAC,KAAK,IAAI,KAAK,EAAE,CAAC;YAC1B,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;YACjE,MAAM,IAAI,sBAAa,CACrB,kDAAkD,aAAa,WAAW,EAC1E,mBAAU,CAAC,iBAAiB,CAC7B,CAAC;QACJ,CAAC;QAED,kBAAkB;QAClB,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,qBAAqB;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,KAAK,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,EAAE,CAAC;YACzD,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;gBAC3B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC;QACH,CAAC;IACH,CAAC;CACF,CAAA;AAjEY,8DAAyB;oCAAzB,yBAAyB;IADrC,IAAA,mBAAU,GAAE;qCAI6B,gBAAS;GAHtC,yBAAyB,CAiErC",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/guards/notification-throttle.guard.ts"],
      sourcesContent: ["import {\n  Injectable,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  CanActivate,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport {\n  NOTIFICATION_THROTTLE_KEY,\n  NotificationThrottleOptions,\n} from '../decorators/notification-throttle.decorator';\n\ninterface ThrottleRecord {\n  count: number;\n  resetTime: number;\n}\n\n@Injectable()\nexport class NotificationThrottleGuard implements CanActivate {\n  private readonly throttleStore = new Map<string, ThrottleRecord>();\n\n  constructor(private readonly reflector: Reflector) {\n    // Clean up expired entries every 5 minutes\n    setInterval(() => this.cleanupExpiredEntries(), 5 * 60 * 1000);\n  }\n\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const throttleOptions = this.reflector.get<NotificationThrottleOptions>(\n      NOTIFICATION_THROTTLE_KEY,\n      context.getHandler(),\n    );\n\n    if (!throttleOptions) {\n      // No notification throttle decorator, skip this guard\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const userId = request['user']?.userId;\n\n    if (!userId) {\n      throw new HttpException('User not authenticated', HttpStatus.UNAUTHORIZED);\n    }\n\n    const key = `notification_throttle:${userId}`;\n    const { ttl, limit } = throttleOptions;\n    const now = Date.now();\n\n    let record = this.throttleStore.get(key);\n\n    // Initialize or reset if expired\n    if (!record || now > record.resetTime) {\n      record = {\n        count: 0,\n        resetTime: now + ttl,\n      };\n      this.throttleStore.set(key, record);\n    }\n\n    // Check if limit exceeded\n    if (record.count >= limit) {\n      const remainingTime = Math.ceil((record.resetTime - now) / 1000);\n      throw new HttpException(\n        `Notification rate limit exceeded. Try again in ${remainingTime} seconds.`,\n        HttpStatus.TOO_MANY_REQUESTS,\n      );\n    }\n\n    // Increment count\n    record.count++;\n    this.throttleStore.set(key, record);\n\n    return true;\n  }\n\n  private cleanupExpiredEntries(): void {\n    const now = Date.now();\n    for (const [key, record] of this.throttleStore.entries()) {\n      if (now > record.resetTime) {\n        this.throttleStore.delete(key);\n      }\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "27689f9d5449d7c8c3ed5a1bd50ffc626873a5c9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nptuhzwfi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nptuhzwfi();
var __decorate =
/* istanbul ignore next */
(cov_nptuhzwfi().s[0]++,
/* istanbul ignore next */
(cov_nptuhzwfi().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_nptuhzwfi().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_nptuhzwfi().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_nptuhzwfi().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_nptuhzwfi().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_nptuhzwfi().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_nptuhzwfi().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_nptuhzwfi().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_nptuhzwfi().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_nptuhzwfi().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_nptuhzwfi().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_nptuhzwfi().b[3][0]++;
    cov_nptuhzwfi().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_nptuhzwfi().b[3][1]++;
    cov_nptuhzwfi().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_nptuhzwfi().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_nptuhzwfi().b[5][0]++;
        cov_nptuhzwfi().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_nptuhzwfi().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_nptuhzwfi().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_nptuhzwfi().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_nptuhzwfi().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_nptuhzwfi().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_nptuhzwfi().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_nptuhzwfi().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_nptuhzwfi().s[9]++;
  return /* istanbul ignore next */(cov_nptuhzwfi().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_nptuhzwfi().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_nptuhzwfi().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_nptuhzwfi().s[10]++,
/* istanbul ignore next */
(cov_nptuhzwfi().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_nptuhzwfi().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_nptuhzwfi().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_nptuhzwfi().f[1]++;
  cov_nptuhzwfi().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_nptuhzwfi().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_nptuhzwfi().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_nptuhzwfi().b[11][0]++;
    cov_nptuhzwfi().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_nptuhzwfi().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_nptuhzwfi().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_nptuhzwfi().s[14]++;
exports.NotificationThrottleGuard = void 0;
const common_1 =
/* istanbul ignore next */
(cov_nptuhzwfi().s[15]++, require("@nestjs/common"));
const core_1 =
/* istanbul ignore next */
(cov_nptuhzwfi().s[16]++, require("@nestjs/core"));
const notification_throttle_decorator_1 =
/* istanbul ignore next */
(cov_nptuhzwfi().s[17]++, require("../decorators/notification-throttle.decorator"));
/* istanbul ignore next */
cov_nptuhzwfi().s[18]++;
let NotificationThrottleGuard = class NotificationThrottleGuard {
  reflector;
  throttleStore =
  /* istanbul ignore next */
  (cov_nptuhzwfi().s[19]++, new Map());
  constructor(reflector) {
    /* istanbul ignore next */
    cov_nptuhzwfi().f[2]++;
    cov_nptuhzwfi().s[20]++;
    this.reflector = reflector;
    // Clean up expired entries every 5 minutes
    /* istanbul ignore next */
    cov_nptuhzwfi().s[21]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_nptuhzwfi().f[3]++;
      cov_nptuhzwfi().s[22]++;
      return this.cleanupExpiredEntries();
    }, 5 * 60 * 1000);
  }
  async canActivate(context) {
    /* istanbul ignore next */
    cov_nptuhzwfi().f[4]++;
    const throttleOptions =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[23]++, this.reflector.get(notification_throttle_decorator_1.NOTIFICATION_THROTTLE_KEY, context.getHandler()));
    /* istanbul ignore next */
    cov_nptuhzwfi().s[24]++;
    if (!throttleOptions) {
      /* istanbul ignore next */
      cov_nptuhzwfi().b[13][0]++;
      cov_nptuhzwfi().s[25]++;
      // No notification throttle decorator, skip this guard
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_nptuhzwfi().b[13][1]++;
    }
    const request =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[26]++, context.switchToHttp().getRequest());
    const userId =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[27]++, request['user']?.userId);
    /* istanbul ignore next */
    cov_nptuhzwfi().s[28]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_nptuhzwfi().b[14][0]++;
      cov_nptuhzwfi().s[29]++;
      throw new common_1.HttpException('User not authenticated', common_1.HttpStatus.UNAUTHORIZED);
    } else
    /* istanbul ignore next */
    {
      cov_nptuhzwfi().b[14][1]++;
    }
    const key =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[30]++, `notification_throttle:${userId}`);
    const {
      ttl,
      limit
    } =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[31]++, throttleOptions);
    const now =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[32]++, Date.now());
    let record =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[33]++, this.throttleStore.get(key));
    // Initialize or reset if expired
    /* istanbul ignore next */
    cov_nptuhzwfi().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_nptuhzwfi().b[16][0]++, !record) ||
    /* istanbul ignore next */
    (cov_nptuhzwfi().b[16][1]++, now > record.resetTime)) {
      /* istanbul ignore next */
      cov_nptuhzwfi().b[15][0]++;
      cov_nptuhzwfi().s[35]++;
      record = {
        count: 0,
        resetTime: now + ttl
      };
      /* istanbul ignore next */
      cov_nptuhzwfi().s[36]++;
      this.throttleStore.set(key, record);
    } else
    /* istanbul ignore next */
    {
      cov_nptuhzwfi().b[15][1]++;
    }
    // Check if limit exceeded
    cov_nptuhzwfi().s[37]++;
    if (record.count >= limit) {
      /* istanbul ignore next */
      cov_nptuhzwfi().b[17][0]++;
      const remainingTime =
      /* istanbul ignore next */
      (cov_nptuhzwfi().s[38]++, Math.ceil((record.resetTime - now) / 1000));
      /* istanbul ignore next */
      cov_nptuhzwfi().s[39]++;
      throw new common_1.HttpException(`Notification rate limit exceeded. Try again in ${remainingTime} seconds.`, common_1.HttpStatus.TOO_MANY_REQUESTS);
    } else
    /* istanbul ignore next */
    {
      cov_nptuhzwfi().b[17][1]++;
    }
    // Increment count
    cov_nptuhzwfi().s[40]++;
    record.count++;
    /* istanbul ignore next */
    cov_nptuhzwfi().s[41]++;
    this.throttleStore.set(key, record);
    /* istanbul ignore next */
    cov_nptuhzwfi().s[42]++;
    return true;
  }
  cleanupExpiredEntries() {
    /* istanbul ignore next */
    cov_nptuhzwfi().f[5]++;
    const now =
    /* istanbul ignore next */
    (cov_nptuhzwfi().s[43]++, Date.now());
    /* istanbul ignore next */
    cov_nptuhzwfi().s[44]++;
    for (const [key, record] of this.throttleStore.entries()) {
      /* istanbul ignore next */
      cov_nptuhzwfi().s[45]++;
      if (now > record.resetTime) {
        /* istanbul ignore next */
        cov_nptuhzwfi().b[18][0]++;
        cov_nptuhzwfi().s[46]++;
        this.throttleStore.delete(key);
      } else
      /* istanbul ignore next */
      {
        cov_nptuhzwfi().b[18][1]++;
      }
    }
  }
};
/* istanbul ignore next */
cov_nptuhzwfi().s[47]++;
exports.NotificationThrottleGuard = NotificationThrottleGuard;
/* istanbul ignore next */
cov_nptuhzwfi().s[48]++;
exports.NotificationThrottleGuard = NotificationThrottleGuard = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [core_1.Reflector])], NotificationThrottleGuard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,