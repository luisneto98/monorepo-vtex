{"version":3,"names":["common_1","cov_1sukd9pw18","s","require","config_1","RSS","__importStar","FeedGeneratorService","configService","constructor","f","generateRssFeed","releases","language","b","siteUrl","get","feedLimit","parseInt","feedOptions","title","getFeedTitle","description","getFeedDescription","feed_url","site_url","image_url","copyright","Date","getFullYear","getLanguageCode","pubDate","ttl","feed","slice","forEach","release","content","item","metaDescription","truncateContent","url","slug","guid","_id","toString","categories","tags","date","publishedAt","createdAt","author","name","enclosure","featuredImage","type","undefined","xml","indent","generateAtomFeed","atomFeed","toISOString","escapeXml","updatedAt","email","category","titles","en","es","descriptions","codes","maxLength","stripped","replace","length","substr","trim","text","exports","__decorate","Injectable","ConfigService"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/services/feed-generator.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { NewsReleaseDocument } from '../schemas/news-release.schema';\nimport * as RSS from 'rss';\n\n@Injectable()\nexport class FeedGeneratorService {\n  constructor(private configService: ConfigService) {}\n\n  generateRssFeed(releases: NewsReleaseDocument[], language: 'pt-BR' | 'en' | 'es' = 'en'): string {\n    const siteUrl = this.configService.get('SITE_URL') || 'https://vtexday2026.com';\n    const feedLimit = parseInt(this.configService.get('RSS_FEED_ITEMS') || '50', 10);\n\n    const feedOptions = {\n      title: this.getFeedTitle(language),\n      description: this.getFeedDescription(language),\n      feed_url: `${siteUrl}/api/public/news/feed.rss?lang=${language}`,\n      site_url: `${siteUrl}/news`,\n      image_url: `${siteUrl}/logo.png`,\n      copyright: `© ${new Date().getFullYear()} VTEX Day 2026`,\n      language: this.getLanguageCode(language),\n      pubDate: new Date(),\n      ttl: 60,\n    };\n\n    const feed = new RSS(feedOptions);\n\n    releases.slice(0, feedLimit).forEach((release) => {\n      const content = release.content[language];\n      if (!content) return;\n\n      feed.item({\n        title: content.title,\n        description: content.metaDescription || this.truncateContent(content.content, 200),\n        url: `${siteUrl}/news/${release.slug}`,\n        guid: release._id.toString(),\n        categories: release.tags || [],\n        date: release.publishedAt || release.createdAt,\n        author: release.author.name,\n        enclosure: release.featuredImage\n          ? {\n              url: release.featuredImage,\n              type: 'image/jpeg',\n            }\n          : undefined,\n      });\n    });\n\n    return feed.xml({ indent: true });\n  }\n\n  generateAtomFeed(\n    releases: NewsReleaseDocument[],\n    language: 'pt-BR' | 'en' | 'es' = 'en',\n  ): string {\n    const siteUrl = this.configService.get('SITE_URL') || 'https://vtexday2026.com';\n    const feedLimit = parseInt(this.configService.get('RSS_FEED_ITEMS') || '50', 10);\n\n    let atomFeed = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>${this.getFeedTitle(language)}</title>\n  <link href=\"${siteUrl}/news\" />\n  <link rel=\"self\" href=\"${siteUrl}/api/public/news/feed.atom?lang=${language}\" />\n  <updated>${new Date().toISOString()}</updated>\n  <id>${siteUrl}/news</id>\n  <subtitle>${this.getFeedDescription(language)}</subtitle>\n  <rights>© ${new Date().getFullYear()} VTEX Day 2026</rights>`;\n\n    releases.slice(0, feedLimit).forEach((release) => {\n      const content = release.content[language];\n      if (!content) return;\n\n      atomFeed += `\n  <entry>\n    <title>${this.escapeXml(content.title)}</title>\n    <link href=\"${siteUrl}/news/${release.slug}\" />\n    <id>${siteUrl}/news/${release.slug}</id>\n    <updated>${(release.updatedAt || release.createdAt).toISOString()}</updated>\n    <published>${(release.publishedAt || release.createdAt).toISOString()}</published>\n    <author>\n      <name>${this.escapeXml(release.author.name)}</name>\n      <email>${release.author.email}</email>\n    </author>\n    <summary>${this.escapeXml(content.metaDescription || this.truncateContent(content.content, 200))}</summary>\n    <content type=\"html\">${this.escapeXml(content.content)}</content>`;\n\n      if (release.categories) {\n        release.categories.forEach((category) => {\n          atomFeed += `\n    <category term=\"${this.escapeXml(category)}\" />`;\n        });\n      }\n\n      atomFeed += `\n  </entry>`;\n    });\n\n    atomFeed += `\n</feed>`;\n\n    return atomFeed;\n  }\n\n  private getFeedTitle(language: 'pt-BR' | 'en' | 'es'): string {\n    const titles = {\n      'pt-BR': 'VTEX Day 2026 - Notícias e Atualizações',\n      en: 'VTEX Day 2026 - News and Updates',\n      es: 'VTEX Day 2026 - Noticias y Actualizaciones',\n    };\n    return titles[language] || titles['en'];\n  }\n\n  private getFeedDescription(language: 'pt-BR' | 'en' | 'es'): string {\n    const descriptions = {\n      'pt-BR': 'Últimas notícias e atualizações sobre o VTEX Day 2026',\n      en: 'Latest news and updates about VTEX Day 2026',\n      es: 'Últimas noticias y actualizaciones sobre VTEX Day 2026',\n    };\n    return descriptions[language] || descriptions['en'];\n  }\n\n  private getLanguageCode(language: 'pt-BR' | 'en' | 'es'): string {\n    const codes = {\n      'pt-BR': 'pt-br',\n      en: 'en-us',\n      es: 'es-es',\n    };\n    return codes[language] || 'en-us';\n  }\n\n  private truncateContent(content: string, maxLength: number): string {\n    const stripped = content.replace(/<[^>]*>?/gm, '');\n    if (stripped.length <= maxLength) return stripped;\n    return stripped.substr(0, maxLength).trim() + '...';\n  }\n\n  private escapeXml(text: string): string {\n    return text\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;');\n  }\n}\n"],"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","ignoreList":[]}