0f54f99d7518ce4315c0569b08315dda
"use strict";

/* istanbul ignore next */
function cov_29e27zkmsq() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/filters/all-exceptions.filter.ts";
  var hash = "76b0ef0fcef93ddd1bd6f0304c1608c8728b1d4e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/filters/all-exceptions.filter.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "11": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 37
        }
      },
      "12": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "13": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "14": {
        start: {
          line: 13,
          column: 13
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "15": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "16": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "17": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "18": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 45
        }
      },
      "19": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "20": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "21": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "22": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 43
        }
      },
      "23": {
        start: {
          line: 23,
          column: 38
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "24": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 46
        }
      },
      "25": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 32,
          column: 13
        }
      },
      "26": {
        start: {
          line: 26,
          column: 36
        },
        end: {
          line: 26,
          column: 53
        }
      },
      "27": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "28": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "29": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "30": {
        start: {
          line: 34,
          column: 13
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "31": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "32": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 34
        }
      },
      "33": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 92
        }
      },
      "34": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 84
        }
      },
      "35": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "36": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 52
        }
      },
      "37": {
        start: {
          line: 53,
          column: 0
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "38": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 56,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        }],
        line: 21
      },
      "11": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 32,
            column: 13
          }
        }],
        line: 25
      },
      "12": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 53
          }
        }, {
          start: {
            line: 25,
            column: 57
          },
          end: {
            line: 25,
            column: 83
          }
        }],
        line: 25
      },
      "13": {
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 27,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 27,
            column: 45
          }
        }, {
          start: {
            line: 27,
            column: 49
          },
          end: {
            line: 27,
            column: 66
          }
        }],
        line: 27
      },
      "14": {
        loc: {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/filters/all-exceptions.filter.ts",
      mappings: ";;;;;;;;;;AAAA,2CAOwB;AAIjB,IAAM,mBAAmB,2BAAzB,MAAM,mBAAmB;IACb,MAAM,GAAG,IAAI,eAAM,CAAC,qBAAmB,CAAC,IAAI,CAAC,CAAC;IAE/D,KAAK,CAAC,SAAkB,EAAE,IAAmB;QAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAChC,MAAM,QAAQ,GAAG,GAAG,CAAC,WAAW,EAAY,CAAC;QAE7C,IAAI,MAAM,GAAG,mBAAU,CAAC,qBAAqB,CAAC;QAC9C,IAAI,OAAO,GAAG,uBAAuB,CAAC;QACtC,IAAI,IAAI,GAAG,qBAAqB,CAAC;QACjC,IAAI,OAAO,GAAQ,SAAS,CAAC;QAE7B,IAAI,SAAS,YAAY,sBAAa,EAAE,CAAC;YACvC,MAAM,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC;YAC/B,MAAM,iBAAiB,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;YAClD,IAAI,GAAG,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC;YAElC,IAAI,OAAO,iBAAiB,KAAK,QAAQ,IAAI,iBAAiB,KAAK,IAAI,EAAE,CAAC;gBACxE,MAAM,WAAW,GAAG,iBAAwB,CAAC;gBAC7C,OAAO,GAAG,WAAW,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC;gBACnD,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;YAChC,CAAC;iBAAM,CAAC;gBACN,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;YAC9B,CAAC;QACH,CAAC;aAAM,IAAI,SAAS,YAAY,KAAK,EAAE,CAAC;YACtC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;YAC5B,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;YAEtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,SAAS,CAAC,OAAO,EAAE,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;QAClF,CAAC;QAED,mCAAmC;QACnC,MAAM,SAAS,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;QAE7E,MAAM,aAAa,GAAG;YACpB,KAAK,EAAE;gBACL,IAAI;gBACJ,OAAO;gBACP,OAAO;gBACP,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,SAAS;aACV;SACF,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;CACF,CAAA;AA9CY,kDAAmB;8BAAnB,mBAAmB;IAD/B,IAAA,cAAK,GAAE;GACK,mBAAmB,CA8C/B",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/filters/all-exceptions.filter.ts"],
      sourcesContent: ["import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private readonly logger = new Logger(AllExceptionsFilter.name);\n\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse<Response>();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n    let message = 'Internal server error';\n    let code = 'InternalServerError';\n    let details: any = undefined;\n\n    if (exception instanceof HttpException) {\n      status = exception.getStatus();\n      const exceptionResponse = exception.getResponse();\n      code = exception.constructor.name;\n\n      if (typeof exceptionResponse === 'object' && exceptionResponse !== null) {\n        const responseObj = exceptionResponse as any;\n        message = responseObj.message || exception.message;\n        details = responseObj.details;\n      } else {\n        message = exception.message;\n      }\n    } else if (exception instanceof Error) {\n      message = exception.message;\n      code = exception.name;\n\n      this.logger.error(`Unhandled exception: ${exception.message}`, exception.stack);\n    }\n\n    // Generate request ID for tracking\n    const requestId = `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n    const errorResponse = {\n      error: {\n        code,\n        message,\n        details,\n        timestamp: new Date().toISOString(),\n        requestId,\n      },\n    };\n\n    response.status(status).json(errorResponse);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "76b0ef0fcef93ddd1bd6f0304c1608c8728b1d4e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29e27zkmsq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29e27zkmsq();
var __decorate =
/* istanbul ignore next */
(cov_29e27zkmsq().s[0]++,
/* istanbul ignore next */
(cov_29e27zkmsq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_29e27zkmsq().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_29e27zkmsq().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_29e27zkmsq().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_29e27zkmsq().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_29e27zkmsq().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_29e27zkmsq().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_29e27zkmsq().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_29e27zkmsq().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_29e27zkmsq().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_29e27zkmsq().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_29e27zkmsq().b[3][0]++;
    cov_29e27zkmsq().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_29e27zkmsq().b[3][1]++;
    cov_29e27zkmsq().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_29e27zkmsq().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_29e27zkmsq().b[5][0]++;
        cov_29e27zkmsq().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_29e27zkmsq().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_29e27zkmsq().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_29e27zkmsq().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_29e27zkmsq().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_29e27zkmsq().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_29e27zkmsq().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_29e27zkmsq().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_29e27zkmsq().s[9]++;
  return /* istanbul ignore next */(cov_29e27zkmsq().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_29e27zkmsq().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_29e27zkmsq().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var AllExceptionsFilter_1;
/* istanbul ignore next */
cov_29e27zkmsq().s[10]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_29e27zkmsq().s[11]++;
exports.AllExceptionsFilter = void 0;
const common_1 =
/* istanbul ignore next */
(cov_29e27zkmsq().s[12]++, require("@nestjs/common"));
let AllExceptionsFilter =
/* istanbul ignore next */
(cov_29e27zkmsq().s[13]++, AllExceptionsFilter_1 = class AllExceptionsFilter {
  logger =
  /* istanbul ignore next */
  (cov_29e27zkmsq().s[14]++, new common_1.Logger(AllExceptionsFilter_1.name));
  catch(exception, host) {
    /* istanbul ignore next */
    cov_29e27zkmsq().f[1]++;
    const ctx =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[15]++, host.switchToHttp());
    const response =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[16]++, ctx.getResponse());
    let status =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[17]++, common_1.HttpStatus.INTERNAL_SERVER_ERROR);
    let message =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[18]++, 'Internal server error');
    let code =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[19]++, 'InternalServerError');
    let details =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[20]++, undefined);
    /* istanbul ignore next */
    cov_29e27zkmsq().s[21]++;
    if (exception instanceof common_1.HttpException) {
      /* istanbul ignore next */
      cov_29e27zkmsq().b[10][0]++;
      cov_29e27zkmsq().s[22]++;
      status = exception.getStatus();
      const exceptionResponse =
      /* istanbul ignore next */
      (cov_29e27zkmsq().s[23]++, exception.getResponse());
      /* istanbul ignore next */
      cov_29e27zkmsq().s[24]++;
      code = exception.constructor.name;
      /* istanbul ignore next */
      cov_29e27zkmsq().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_29e27zkmsq().b[12][0]++, typeof exceptionResponse === 'object') &&
      /* istanbul ignore next */
      (cov_29e27zkmsq().b[12][1]++, exceptionResponse !== null)) {
        /* istanbul ignore next */
        cov_29e27zkmsq().b[11][0]++;
        const responseObj =
        /* istanbul ignore next */
        (cov_29e27zkmsq().s[26]++, exceptionResponse);
        /* istanbul ignore next */
        cov_29e27zkmsq().s[27]++;
        message =
        /* istanbul ignore next */
        (cov_29e27zkmsq().b[13][0]++, responseObj.message) ||
        /* istanbul ignore next */
        (cov_29e27zkmsq().b[13][1]++, exception.message);
        /* istanbul ignore next */
        cov_29e27zkmsq().s[28]++;
        details = responseObj.details;
      } else {
        /* istanbul ignore next */
        cov_29e27zkmsq().b[11][1]++;
        cov_29e27zkmsq().s[29]++;
        message = exception.message;
      }
    } else {
      /* istanbul ignore next */
      cov_29e27zkmsq().b[10][1]++;
      cov_29e27zkmsq().s[30]++;
      if (exception instanceof Error) {
        /* istanbul ignore next */
        cov_29e27zkmsq().b[14][0]++;
        cov_29e27zkmsq().s[31]++;
        message = exception.message;
        /* istanbul ignore next */
        cov_29e27zkmsq().s[32]++;
        code = exception.name;
        /* istanbul ignore next */
        cov_29e27zkmsq().s[33]++;
        this.logger.error(`Unhandled exception: ${exception.message}`, exception.stack);
      } else
      /* istanbul ignore next */
      {
        cov_29e27zkmsq().b[14][1]++;
      }
    }
    // Generate request ID for tracking
    const requestId =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[34]++, `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);
    const errorResponse =
    /* istanbul ignore next */
    (cov_29e27zkmsq().s[35]++, {
      error: {
        code,
        message,
        details,
        timestamp: new Date().toISOString(),
        requestId
      }
    });
    /* istanbul ignore next */
    cov_29e27zkmsq().s[36]++;
    response.status(status).json(errorResponse);
  }
});
/* istanbul ignore next */
cov_29e27zkmsq().s[37]++;
exports.AllExceptionsFilter = AllExceptionsFilter;
/* istanbul ignore next */
cov_29e27zkmsq().s[38]++;
exports.AllExceptionsFilter = AllExceptionsFilter = AllExceptionsFilter_1 = __decorate([(0, common_1.Catch)()], AllExceptionsFilter);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,