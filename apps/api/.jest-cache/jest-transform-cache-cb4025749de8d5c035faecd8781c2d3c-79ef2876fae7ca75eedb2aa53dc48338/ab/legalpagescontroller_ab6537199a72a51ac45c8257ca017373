960e5d0ec4ec8a3d2dc9d239c2b7d7a9
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegalPagesController = void 0;
const common_1 = require("@nestjs/common");
const platform_express_1 = require("@nestjs/platform-express");
const legal_pages_service_1 = require("./legal-pages.service");
const create_legal_page_dto_1 = require("./dto/create-legal-page.dto");
const update_legal_page_dto_1 = require("./dto/update-legal-page.dto");
const upload_file_dto_1 = require("./dto/upload-file.dto");
const jwt_auth_guard_1 = require("../auth/guards/jwt-auth.guard");
const roles_decorator_1 = require("../auth/decorators/roles.decorator");
const roles_guard_1 = require("../auth/guards/roles.guard");
const throttler_1 = require("@nestjs/throttler");
const shared_1 = require("@vtexday26/shared");
let LegalPagesController = class LegalPagesController {
    legalPagesService;
    constructor(legalPagesService) {
        this.legalPagesService = legalPagesService;
    }
    async create(createLegalPageDto) {
        return this.legalPagesService.create(createLegalPageDto);
    }
    async findAll(isActive) {
        const active = isActive === 'true' ? true : isActive === 'false' ? false : undefined;
        return this.legalPagesService.findAll(active);
    }
    async findOne(id) {
        return this.legalPagesService.findOne(id);
    }
    async update(id, updateLegalPageDto, req) {
        return this.legalPagesService.update(id, updateLegalPageDto, req.user.id);
    }
    async uploadFile(id, file, language, req) {
        return this.legalPagesService.uploadFile(id, file, language, req.user.id);
    }
    async deleteFile(id, language, req) {
        return this.legalPagesService.deleteFile(id, language, req.user.id);
    }
    async remove(id) {
        await this.legalPagesService.remove(id);
        return { message: 'Legal page deleted successfully' };
    }
    async getPublicPages() {
        return this.legalPagesService.getPublicPages();
    }
    async downloadFile(slug, language, res) {
        try {
            const { stream, metadata } = await this.legalPagesService.getFileStream(slug, language);
            res.set({
                'Content-Type': 'application/pdf',
                'Content-Disposition': `attachment; filename="${metadata.originalName}"`,
                'Content-Length': metadata.size.toString(),
            });
            stream.pipe(res);
        }
        catch (error) {
            if (error.status) {
                res.status(error.status).json({ message: error.message });
            }
            else {
                res.status(common_1.HttpStatus.INTERNAL_SERVER_ERROR).json({ message: 'Error downloading file' });
            }
        }
    }
    async getDownloadUrl(slug, language) {
        return this.legalPagesService.getSignedDownloadUrl(slug, language);
    }
};
exports.LegalPagesController = LegalPagesController;
__decorate([
    (0, common_1.Post)(),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(shared_1.UserRole.SUPER_ADMIN, shared_1.UserRole.PRODUCER),
    (0, throttler_1.Throttle)({ default: { limit: 10, ttl: 60 } }),
    __param(0, (0, common_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [create_legal_page_dto_1.CreateLegalPageDto]),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "create", null);
__decorate([
    (0, common_1.Get)(),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(shared_1.UserRole.SUPER_ADMIN, shared_1.UserRole.PRODUCER),
    __param(0, (0, common_1.Query)('isActive')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "findAll", null);
__decorate([
    (0, common_1.Get)(':id'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(shared_1.UserRole.SUPER_ADMIN, shared_1.UserRole.PRODUCER),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "findOne", null);
__decorate([
    (0, common_1.Put)(':id'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(shared_1.UserRole.SUPER_ADMIN, shared_1.UserRole.PRODUCER),
    __param(0, (0, common_1.Param)('id')),
    __param(1, (0, common_1.Body)()),
    __param(2, (0, common_1.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, update_legal_page_dto_1.UpdateLegalPageDto, Object]),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "update", null);
__decorate([
    (0, common_1.Post)(':id/upload'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(shared_1.UserRole.SUPER_ADMIN, shared_1.UserRole.PRODUCER),
    (0, common_1.UseInterceptors)((0, platform_express_1.FileInterceptor)('file')),
    (0, throttler_1.Throttle)({ default: { limit: 5, ttl: 60 } }),
    __param(0, (0, common_1.Param)('id')),
    __param(1, (0, common_1.UploadedFile)(new common_1.ParseFilePipeBuilder()
        .addFileTypeValidator({
        fileType: 'application/pdf',
    })
        .addMaxSizeValidator({
        maxSize: 10 * 1024 * 1024, // 10MB
    })
        .build({
        errorHttpStatusCode: common_1.HttpStatus.UNPROCESSABLE_ENTITY,
    }))),
    __param(2, (0, common_1.Body)('language')),
    __param(3, (0, common_1.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object, String, Object]),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "uploadFile", null);
__decorate([
    (0, common_1.Delete)(':id/file/:language'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(shared_1.UserRole.SUPER_ADMIN, shared_1.UserRole.PRODUCER),
    __param(0, (0, common_1.Param)('id')),
    __param(1, (0, common_1.Param)('language')),
    __param(2, (0, common_1.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String, Object]),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "deleteFile", null);
__decorate([
    (0, common_1.Delete)(':id'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    (0, roles_decorator_1.Roles)(shared_1.UserRole.SUPER_ADMIN, shared_1.UserRole.PRODUCER),
    __param(0, (0, common_1.Param)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "remove", null);
__decorate([
    (0, common_1.Get)('public/list'),
    (0, throttler_1.Throttle)({ default: { limit: 100, ttl: 60 } }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "getPublicPages", null);
__decorate([
    (0, common_1.Get)('public/:slug/:language/download'),
    (0, throttler_1.Throttle)({ default: { limit: 50, ttl: 60 } }),
    __param(0, (0, common_1.Param)('slug')),
    __param(1, (0, common_1.Param)('language')),
    __param(2, (0, common_1.Res)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String, Object]),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "downloadFile", null);
__decorate([
    (0, common_1.Get)('public/:slug/:language/url'),
    (0, throttler_1.Throttle)({ default: { limit: 100, ttl: 60 } }),
    __param(0, (0, common_1.Param)('slug')),
    __param(1, (0, common_1.Param)('language')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String]),
    __metadata("design:returntype", Promise)
], LegalPagesController.prototype, "getDownloadUrl", null);
exports.LegalPagesController = LegalPagesController = __decorate([
    (0, common_1.Controller)('legal-pages'),
    __metadata("design:paramtypes", [legal_pages_service_1.LegalPagesService])
], LegalPagesController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,