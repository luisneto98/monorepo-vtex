eb426353fdd2564972757e109cdb889e
"use strict";

/* istanbul ignore next */
function cov_2rscgj8ur() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/decorators/roles.decorator.ts";
  var hash = "72e68f895833e9d0dea260d5404b536bf4e6cd81";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/decorators/roles.decorator.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 43
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 28
        }
      },
      "4": {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 6,
          column: 79
        }
      },
      "5": {
        start: {
          line: 6,
          column: 28
        },
        end: {
          line: 6,
          column: 79
        }
      },
      "6": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 14
          },
          end: {
            line: 6,
            column: 15
          }
        },
        loc: {
          start: {
            line: 6,
            column: 28
          },
          end: {
            line: 6,
            column: 79
          }
        },
        line: 6
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/decorators/roles.decorator.ts",
      mappings: ";;;AAAA,2CAA6C;AAGhC,QAAA,SAAS,GAAG,OAAO,CAAC;AAC1B,MAAM,KAAK,GAAG,CAAC,GAAG,KAAiB,EAAE,EAAE,CAAC,IAAA,oBAAW,EAAC,iBAAS,EAAE,KAAK,CAAC,CAAC;AAAhE,QAAA,KAAK,SAA2D",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/decorators/roles.decorator.ts"],
      sourcesContent: ["import { SetMetadata } from '@nestjs/common';\nimport { UserRole } from '@shared/types/user.types';\n\nexport const ROLES_KEY = 'roles';\nexport const Roles = (...roles: UserRole[]) => SetMetadata(ROLES_KEY, roles);\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "72e68f895833e9d0dea260d5404b536bf4e6cd81"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2rscgj8ur = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rscgj8ur();
cov_2rscgj8ur().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2rscgj8ur().s[1]++;
exports.Roles = exports.ROLES_KEY = void 0;
const common_1 =
/* istanbul ignore next */
(cov_2rscgj8ur().s[2]++, require("@nestjs/common"));
/* istanbul ignore next */
cov_2rscgj8ur().s[3]++;
exports.ROLES_KEY = 'roles';
/* istanbul ignore next */
cov_2rscgj8ur().s[4]++;
const Roles = (...roles) => {
  /* istanbul ignore next */
  cov_2rscgj8ur().f[0]++;
  cov_2rscgj8ur().s[5]++;
  return (0, common_1.SetMetadata)(exports.ROLES_KEY, roles);
};
/* istanbul ignore next */
cov_2rscgj8ur().s[6]++;
exports.Roles = Roles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21tb25fMSIsImNvdl8ycnNjZ2o4dXIiLCJzIiwicmVxdWlyZSIsImV4cG9ydHMiLCJST0xFU19LRVkiLCJSb2xlcyIsInJvbGVzIiwiZiIsIlNldE1ldGFkYXRhIl0sInNvdXJjZXMiOlsiL2hvbWUvbHVpc25ldG85OC9Eb2N1bWVudG9zL0NvZGUvbW9ub3JlcG8tdnRleC9hcHBzL2FwaS9zcmMvY29tbW9uL2RlY29yYXRvcnMvcm9sZXMuZGVjb3JhdG9yLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNldE1ldGFkYXRhIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuaW1wb3J0IHsgVXNlclJvbGUgfSBmcm9tICdAc2hhcmVkL3R5cGVzL3VzZXIudHlwZXMnO1xuXG5leHBvcnQgY29uc3QgUk9MRVNfS0VZID0gJ3JvbGVzJztcbmV4cG9ydCBjb25zdCBSb2xlcyA9ICguLi5yb2xlczogVXNlclJvbGVbXSkgPT4gU2V0TWV0YWRhdGEoUk9MRVNfS0VZLCByb2xlcyk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxNQUFBQSxRQUFBO0FBQUE7QUFBQSxDQUFBQyxhQUFBLEdBQUFDLENBQUEsT0FBQUMsT0FBQTtBQUE2QztBQUFBRixhQUFBLEdBQUFDLENBQUE7QUFHaENFLE9BQUEsQ0FBQUMsU0FBUyxHQUFHLE9BQU87QUFBQztBQUFBSixhQUFBLEdBQUFDLENBQUE7QUFDMUIsTUFBTUksS0FBSyxHQUFHQSxDQUFDLEdBQUdDLEtBQWlCLEtBQUs7RUFBQTtFQUFBTixhQUFBLEdBQUFPLENBQUE7RUFBQVAsYUFBQSxHQUFBQyxDQUFBO0VBQUEsV0FBQUYsUUFBQSxDQUFBUyxXQUFXLEVBQUNMLE9BQUEsQ0FBQUMsU0FBUyxFQUFFRSxLQUFLLENBQUM7QUFBRCxDQUFDO0FBQUM7QUFBQU4sYUFBQSxHQUFBQyxDQUFBO0FBQWhFRSxPQUFBLENBQUFFLEtBQUssR0FBQUEsS0FBQSIsImlnbm9yZUxpc3QiOltdfQ==