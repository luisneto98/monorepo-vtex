cae02bc285eb458639965667bcda9029
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.S3_CONFIG = exports.getS3BucketName = exports.createS3Client = void 0;
const client_s3_1 = require("@aws-sdk/client-s3");
const createS3Client = (configService) => {
    const region = configService.get('aws.s3.region');
    const accessKeyId = configService.get('aws.s3.accessKeyId');
    const secretAccessKey = configService.get('aws.s3.secretAccessKey');
    if (!accessKeyId || !secretAccessKey) {
        console.warn('AWS credentials not configured, using default chain');
    }
    return new client_s3_1.S3Client({
        region,
        ...(accessKeyId &&
            secretAccessKey && {
            credentials: {
                accessKeyId,
                secretAccessKey,
            },
        }),
    });
};
exports.createS3Client = createS3Client;
const getS3BucketName = (configService) => {
    const bucket = configService.get('aws.s3.bucket');
    if (!bucket) {
        console.warn('S3 bucket name not configured, using default: vtexday-dev-bucket');
        return 'vtexday-dev-bucket';
    }
    return bucket;
};
exports.getS3BucketName = getS3BucketName;
exports.S3_CONFIG = {
    MAX_FILE_SIZE: {
        video: 500 * 1024 * 1024, // 500MB
        default: 50 * 1024 * 1024, // 50MB
    },
    ALLOWED_FORMATS: {
        press_kit: ['pdf', 'zip'],
        logo_package: ['zip', 'ai', 'eps', 'svg'],
        photo: ['jpg', 'jpeg', 'png', 'webp'],
        video: ['mp4', 'mov', 'webm'],
        presentation: ['ppt', 'pptx', 'pdf'],
    },
    URL_EXPIRY: 24 * 60 * 60, // 24 hours in seconds
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvbHVpc25ldG85OC9Eb2N1bWVudG9zL0NvZGUvbW9ub3JlcG8tdnRleC9hcHBzL2FwaS9zcmMvY29uZmlnL3MzLmNvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxrREFBOEM7QUFHdkMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxhQUE0QixFQUFFLEVBQUU7SUFDN0QsTUFBTSxNQUFNLEdBQUcsYUFBYSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNsRCxNQUFNLFdBQVcsR0FBRyxhQUFhLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDNUQsTUFBTSxlQUFlLEdBQUcsYUFBYSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0lBRXBFLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUNyQyxPQUFPLENBQUMsSUFBSSxDQUFDLHFEQUFxRCxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUVELE9BQU8sSUFBSSxvQkFBUSxDQUFDO1FBQ2xCLE1BQU07UUFDTixHQUFHLENBQUMsV0FBVztZQUNiLGVBQWUsSUFBSTtZQUNqQixXQUFXLEVBQUU7Z0JBQ1gsV0FBVztnQkFDWCxlQUFlO2FBQ2hCO1NBQ0YsQ0FBQztLQUNMLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQztBQW5CVyxRQUFBLGNBQWMsa0JBbUJ6QjtBQUVLLE1BQU0sZUFBZSxHQUFHLENBQUMsYUFBNEIsRUFBVSxFQUFFO0lBQ3RFLE1BQU0sTUFBTSxHQUFHLGFBQWEsQ0FBQyxHQUFHLENBQVMsZUFBZSxDQUFDLENBQUM7SUFDMUQsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ1osT0FBTyxDQUFDLElBQUksQ0FBQyxrRUFBa0UsQ0FBQyxDQUFDO1FBQ2pGLE9BQU8sb0JBQW9CLENBQUM7SUFDOUIsQ0FBQztJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQVBXLFFBQUEsZUFBZSxtQkFPMUI7QUFFVyxRQUFBLFNBQVMsR0FBRztJQUN2QixhQUFhLEVBQUU7UUFDYixLQUFLLEVBQUUsR0FBRyxHQUFHLElBQUksR0FBRyxJQUFJLEVBQUUsUUFBUTtRQUNsQyxPQUFPLEVBQUUsRUFBRSxHQUFHLElBQUksR0FBRyxJQUFJLEVBQUUsT0FBTztLQUNuQztJQUNELGVBQWUsRUFBRTtRQUNmLFNBQVMsRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUM7UUFDekIsWUFBWSxFQUFFLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDO1FBQ3pDLEtBQUssRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQztRQUNyQyxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQztRQUM3QixZQUFZLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQztLQUNyQztJQUNELFVBQVUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxzQkFBc0I7Q0FDakQsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvaG9tZS9sdWlzbmV0bzk4L0RvY3VtZW50b3MvQ29kZS9tb25vcmVwby12dGV4L2FwcHMvYXBpL3NyYy9jb25maWcvczMuY29uZmlnLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFMzQ2xpZW50IH0gZnJvbSAnQGF3cy1zZGsvY2xpZW50LXMzJztcbmltcG9ydCB7IENvbmZpZ1NlcnZpY2UgfSBmcm9tICdAbmVzdGpzL2NvbmZpZyc7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVTM0NsaWVudCA9IChjb25maWdTZXJ2aWNlOiBDb25maWdTZXJ2aWNlKSA9PiB7XG4gIGNvbnN0IHJlZ2lvbiA9IGNvbmZpZ1NlcnZpY2UuZ2V0KCdhd3MuczMucmVnaW9uJyk7XG4gIGNvbnN0IGFjY2Vzc0tleUlkID0gY29uZmlnU2VydmljZS5nZXQoJ2F3cy5zMy5hY2Nlc3NLZXlJZCcpO1xuICBjb25zdCBzZWNyZXRBY2Nlc3NLZXkgPSBjb25maWdTZXJ2aWNlLmdldCgnYXdzLnMzLnNlY3JldEFjY2Vzc0tleScpO1xuXG4gIGlmICghYWNjZXNzS2V5SWQgfHwgIXNlY3JldEFjY2Vzc0tleSkge1xuICAgIGNvbnNvbGUud2FybignQVdTIGNyZWRlbnRpYWxzIG5vdCBjb25maWd1cmVkLCB1c2luZyBkZWZhdWx0IGNoYWluJyk7XG4gIH1cblxuICByZXR1cm4gbmV3IFMzQ2xpZW50KHtcbiAgICByZWdpb24sXG4gICAgLi4uKGFjY2Vzc0tleUlkICYmXG4gICAgICBzZWNyZXRBY2Nlc3NLZXkgJiYge1xuICAgICAgICBjcmVkZW50aWFsczoge1xuICAgICAgICAgIGFjY2Vzc0tleUlkLFxuICAgICAgICAgIHNlY3JldEFjY2Vzc0tleSxcbiAgICAgICAgfSxcbiAgICAgIH0pLFxuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRTM0J1Y2tldE5hbWUgPSAoY29uZmlnU2VydmljZTogQ29uZmlnU2VydmljZSk6IHN0cmluZyA9PiB7XG4gIGNvbnN0IGJ1Y2tldCA9IGNvbmZpZ1NlcnZpY2UuZ2V0PHN0cmluZz4oJ2F3cy5zMy5idWNrZXQnKTtcbiAgaWYgKCFidWNrZXQpIHtcbiAgICBjb25zb2xlLndhcm4oJ1MzIGJ1Y2tldCBuYW1lIG5vdCBjb25maWd1cmVkLCB1c2luZyBkZWZhdWx0OiB2dGV4ZGF5LWRldi1idWNrZXQnKTtcbiAgICByZXR1cm4gJ3Z0ZXhkYXktZGV2LWJ1Y2tldCc7XG4gIH1cbiAgcmV0dXJuIGJ1Y2tldDtcbn07XG5cbmV4cG9ydCBjb25zdCBTM19DT05GSUcgPSB7XG4gIE1BWF9GSUxFX1NJWkU6IHtcbiAgICB2aWRlbzogNTAwICogMTAyNCAqIDEwMjQsIC8vIDUwME1CXG4gICAgZGVmYXVsdDogNTAgKiAxMDI0ICogMTAyNCwgLy8gNTBNQlxuICB9LFxuICBBTExPV0VEX0ZPUk1BVFM6IHtcbiAgICBwcmVzc19raXQ6IFsncGRmJywgJ3ppcCddLFxuICAgIGxvZ29fcGFja2FnZTogWyd6aXAnLCAnYWknLCAnZXBzJywgJ3N2ZyddLFxuICAgIHBob3RvOiBbJ2pwZycsICdqcGVnJywgJ3BuZycsICd3ZWJwJ10sXG4gICAgdmlkZW86IFsnbXA0JywgJ21vdicsICd3ZWJtJ10sXG4gICAgcHJlc2VudGF0aW9uOiBbJ3BwdCcsICdwcHR4JywgJ3BkZiddLFxuICB9LFxuICBVUkxfRVhQSVJZOiAyNCAqIDYwICogNjAsIC8vIDI0IGhvdXJzIGluIHNlY29uZHNcbn07XG4iXSwidmVyc2lvbiI6M30=