95fe93b60c66332eb922bc54f928957c
"use strict";

/* istanbul ignore next */
function cov_v803tu6pm() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/faq.controller.ts";
  var hash = "771781367987c071117abd2f0ee766df096ddb01";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/faq.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "17": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "19": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "20": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "21": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "22": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "23": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 71
        }
      },
      "24": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 56
        }
      },
      "25": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 73
        }
      },
      "26": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 56
        }
      },
      "27": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "28": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 26,
          column: 56
        }
      },
      "29": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 74
        }
      },
      "30": {
        start: {
          line: 28,
          column: 34
        },
        end: {
          line: 28,
          column: 74
        }
      },
      "31": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "32": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "33": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 37
        }
      },
      "34": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 65
        }
      },
      "35": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 59
        }
      },
      "36": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 67
        }
      },
      "37": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 84
        }
      },
      "38": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 45,
          column: 65
        }
      },
      "39": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 60
        }
      },
      "40": {
        start: {
          line: 50,
          column: 25
        },
        end: {
          line: 50,
          column: 80
        }
      },
      "41": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 64
        }
      },
      "42": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 54,
          column: 68
        }
      },
      "43": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 66
        }
      },
      "44": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 58,
          column: 67
        }
      },
      "45": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 64
        }
      },
      "46": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 62,
          column: 84
        }
      },
      "47": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 64
        }
      },
      "48": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 49
        }
      },
      "49": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "50": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 59
        }
      },
      "51": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 69
        }
      },
      "52": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 59
        }
      },
      "53": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 35
        }
      },
      "54": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 60
        }
      },
      "55": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 56
        }
      },
      "56": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 59
        }
      },
      "57": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 86,
          column: 38
        }
      },
      "58": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 119,
          column: 44
        }
      },
      "59": {
        start: {
          line: 120,
          column: 0
        },
        end: {
          line: 173,
          column: 45
        }
      },
      "60": {
        start: {
          line: 174,
          column: 0
        },
        end: {
          line: 205,
          column: 49
        }
      },
      "61": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 238,
          column: 52
        }
      },
      "62": {
        start: {
          line: 239,
          column: 0
        },
        end: {
          line: 265,
          column: 55
        }
      },
      "63": {
        start: {
          line: 266,
          column: 0
        },
        end: {
          line: 281,
          column: 53
        }
      },
      "64": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 301,
          column: 52
        }
      },
      "65": {
        start: {
          line: 302,
          column: 0
        },
        end: {
          line: 320,
          column: 52
        }
      },
      "66": {
        start: {
          line: 321,
          column: 0
        },
        end: {
          line: 349,
          column: 45
        }
      },
      "67": {
        start: {
          line: 350,
          column: 0
        },
        end: {
          line: 371,
          column: 44
        }
      },
      "68": {
        start: {
          line: 372,
          column: 0
        },
        end: {
          line: 391,
          column: 44
        }
      },
      "69": {
        start: {
          line: 392,
          column: 0
        },
        end: {
          line: 410,
          column: 45
        }
      },
      "70": {
        start: {
          line: 411,
          column: 0
        },
        end: {
          line: 415,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 44
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 44
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 49
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 30
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 53
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 30
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 57
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 48
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 61
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 69
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 35
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 73
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 34
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 77
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 22
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 81
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/faq.controller.ts",
      mappings: "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",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/faq.controller.ts"],
      sourcesContent: ["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n  HttpCode,\n  HttpStatus,\n  Req,\n} from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse as SwaggerApiResponse,\n  ApiBearerAuth,\n  ApiParam,\n  ApiQuery,\n  ApiBody,\n} from '@nestjs/swagger';\nimport { FaqService } from './faq.service';\nimport { JwtAuthGuard } from '@common/guards/jwt-auth.guard';\nimport { RolesGuard } from '@common/guards/roles.guard';\nimport { Roles } from '@common/decorators/roles.decorator';\nimport { UserRole } from '@shared/types/user.types';\nimport { Public } from '@common/decorators/public.decorator';\nimport { CreateFaqDto } from './dto/create-faq.dto';\nimport { UpdateFaqDto } from './dto/update-faq.dto';\nimport { FaqFilterDto } from './dto/faq-filter.dto';\nimport { CreateFaqCategoryDto } from './dto/create-faq-category.dto';\nimport { UpdateFaqCategoryDto } from './dto/update-faq-category.dto';\nimport { ApiResponse } from '@common/dto/api-response.dto';\nimport { Request } from 'express';\n\n@ApiTags('FAQ')\n@Controller('faq')\nexport class FaqController {\n  constructor(private readonly faqService: FaqService) {}\n\n  // FAQ endpoints\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @HttpCode(HttpStatus.CREATED)\n  @ApiBearerAuth('JWT-auth')\n  @ApiOperation({ summary: 'Create new FAQ item (Admin/Producer only)' })\n  @ApiBody({ type: CreateFaqDto })\n  @SwaggerApiResponse({\n    status: 201,\n    description: 'FAQ created successfully',\n    schema: {\n      example: {\n        success: true,\n        data: {\n          _id: '507f1f77bcf86cd799439011',\n          question: { 'pt-BR': 'Pergunta?', en: 'Question?' },\n          answer: { 'pt-BR': 'Resposta...', en: 'Answer...' },\n          category: '507f1f77bcf86cd799439012',\n          order: 1,\n          viewCount: 0,\n        },\n      },\n    },\n  })\n  @SwaggerApiResponse({ status: 400, description: 'Validation error' })\n  @SwaggerApiResponse({ status: 401, description: 'Unauthorized' })\n  @SwaggerApiResponse({ status: 403, description: 'Forbidden - insufficient role' })\n  async create(@Body() createFaqDto: CreateFaqDto) {\n    const faq = await this.faqService.createFaq(createFaqDto);\n    return ApiResponse.success(faq);\n  }\n\n  @Get()\n  @Public()\n  @ApiOperation({ summary: 'List all FAQ items with filters and pagination' })\n  @ApiQuery({ name: 'page', required: false, type: Number, example: 1 })\n  @ApiQuery({ name: 'limit', required: false, type: Number, example: 20 })\n  @ApiQuery({ name: 'sort', required: false, type: String, example: 'order,-viewCount' })\n  @ApiQuery({\n    name: 'search',\n    required: false,\n    type: String,\n    description: 'Search in question and answer',\n  })\n  @ApiQuery({\n    name: 'category',\n    required: false,\n    type: String,\n    description: 'Filter by category ID',\n  })\n  @ApiQuery({ name: 'tags', required: false, type: [String], description: 'Filter by tags' })\n  @SwaggerApiResponse({\n    status: 200,\n    description: 'List of FAQ items with pagination',\n    schema: {\n      example: {\n        success: true,\n        data: [\n          {\n            _id: '507f1f77bcf86cd799439011',\n            question: { 'pt-BR': 'Como participar?', en: 'How to participate?' },\n            answer: { 'pt-BR': 'Resposta...', en: 'Answer...' },\n            category: {\n              _id: '507f1f77bcf86cd799439012',\n              name: { 'pt-BR': 'Geral', en: 'General' },\n            },\n            viewCount: 150,\n          },\n        ],\n        metadata: {\n          total: 30,\n          page: 1,\n          limit: 20,\n          totalPages: 2,\n          hasNext: true,\n          hasPrev: false,\n        },\n      },\n    },\n  })\n  async findAll(@Query() filterDto: FaqFilterDto) {\n    const result = await this.faqService.findAllFaqs(filterDto);\n    return ApiResponse.success(result.data, result.metadata);\n  }\n\n  @Get('popular')\n  @Public()\n  @ApiOperation({ summary: 'Get most popular FAQ items' })\n  @ApiQuery({\n    name: 'limit',\n    required: false,\n    type: Number,\n    example: 10,\n    description: 'Number of items to return',\n  })\n  @SwaggerApiResponse({\n    status: 200,\n    description: 'List of popular FAQ items sorted by view count',\n    schema: {\n      example: {\n        success: true,\n        data: [\n          {\n            _id: '507f1f77bcf86cd799439011',\n            question: { 'pt-BR': 'Pergunta popular', en: 'Popular question' },\n            viewCount: 500,\n          },\n        ],\n      },\n    },\n  })\n  async findPopular(@Query('limit') limit?: number) {\n    const faqs = await this.faqService.findPopularFaqs(limit);\n    return ApiResponse.success(faqs);\n  }\n\n  // FAQ Category endpoints - MUST come before :id routes\n  @ApiTags('FAQ Categories')\n  @Post('categories')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @HttpCode(HttpStatus.CREATED)\n  @ApiBearerAuth('JWT-auth')\n  @ApiOperation({ summary: 'Create new FAQ category (Admin/Producer only)' })\n  @ApiBody({ type: CreateFaqCategoryDto })\n  @SwaggerApiResponse({\n    status: 201,\n    description: 'Category created successfully',\n    schema: {\n      example: {\n        success: true,\n        data: {\n          _id: '507f1f77bcf86cd799439012',\n          name: { 'pt-BR': 'Inscri\xE7\xF5es', en: 'Registration' },\n          description: { 'pt-BR': 'Perguntas sobre inscri\xE7\xF5es', en: 'Registration questions' },\n          icon: 'ticket',\n          order: 1,\n        },\n      },\n    },\n  })\n  @SwaggerApiResponse({ status: 400, description: 'Validation error' })\n  @SwaggerApiResponse({ status: 401, description: 'Unauthorized' })\n  @SwaggerApiResponse({ status: 403, description: 'Forbidden' })\n  async createCategory(@Body() createCategoryDto: CreateFaqCategoryDto) {\n    const category = await this.faqService.createCategory(createCategoryDto);\n    return ApiResponse.success(category);\n  }\n\n  @ApiTags('FAQ Categories')\n  @Get('categories')\n  @Public()\n  @ApiOperation({ summary: 'List all FAQ categories' })\n  @SwaggerApiResponse({\n    status: 200,\n    description: 'List of FAQ categories',\n    schema: {\n      example: {\n        success: true,\n        data: [\n          {\n            _id: '507f1f77bcf86cd799439012',\n            name: { 'pt-BR': 'Geral', en: 'General' },\n            description: { 'pt-BR': 'Perguntas gerais', en: 'General questions' },\n            faqCount: 15,\n            order: 1,\n          },\n        ],\n      },\n    },\n  })\n  async findAllCategories() {\n    const categories = await this.faqService.findAllCategories();\n    return ApiResponse.success(categories);\n  }\n\n  @ApiTags('FAQ Categories')\n  @Get('categories/:id')\n  @Public()\n  @ApiOperation({ summary: 'Get FAQ category by ID' })\n  @ApiParam({ name: 'id', description: 'Category ID' })\n  @SwaggerApiResponse({\n    status: 200,\n    description: 'Category details with FAQs',\n  })\n  @SwaggerApiResponse({ status: 404, description: 'Category not found' })\n  async findOneCategory(@Param('id') id: string) {\n    const category = await this.faqService.findCategoryById(id);\n    return ApiResponse.success(category);\n  }\n\n  @ApiTags('FAQ Categories')\n  @Patch('categories/:id')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @ApiBearerAuth('JWT-auth')\n  @ApiOperation({ summary: 'Update FAQ category (Admin/Producer only)' })\n  @ApiParam({ name: 'id', description: 'Category ID' })\n  @ApiBody({ type: UpdateFaqCategoryDto })\n  @SwaggerApiResponse({ status: 200, description: 'Category updated successfully' })\n  @SwaggerApiResponse({ status: 400, description: 'Validation error' })\n  @SwaggerApiResponse({ status: 401, description: 'Unauthorized' })\n  @SwaggerApiResponse({ status: 403, description: 'Forbidden' })\n  @SwaggerApiResponse({ status: 404, description: 'Category not found' })\n  async updateCategory(@Param('id') id: string, @Body() updateCategoryDto: UpdateFaqCategoryDto) {\n    const category = await this.faqService.updateCategory(id, updateCategoryDto);\n    return ApiResponse.success(category);\n  }\n\n  @ApiTags('FAQ Categories')\n  @Delete('categories/:id')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiBearerAuth('JWT-auth')\n  @ApiOperation({ summary: 'Delete FAQ category (Super Admin only)' })\n  @ApiParam({ name: 'id', description: 'Category ID' })\n  @SwaggerApiResponse({ status: 204, description: 'Category deleted successfully' })\n  @SwaggerApiResponse({ status: 401, description: 'Unauthorized' })\n  @SwaggerApiResponse({ status: 403, description: 'Forbidden' })\n  @SwaggerApiResponse({ status: 404, description: 'Category not found' })\n  @SwaggerApiResponse({ status: 409, description: 'Cannot delete category with existing FAQs' })\n  async removeCategory(@Param('id') id: string) {\n    await this.faqService.removeCategory(id);\n  }\n\n  // FAQ items with :id param routes - MUST come after specific routes\n  @Get(':id')\n  @Public()\n  @ApiOperation({ summary: 'Get FAQ item by ID' })\n  @ApiParam({ name: 'id', description: 'FAQ ID', example: '507f1f77bcf86cd799439011' })\n  @SwaggerApiResponse({\n    status: 200,\n    description: 'FAQ item details',\n    schema: {\n      example: {\n        success: true,\n        data: {\n          _id: '507f1f77bcf86cd799439011',\n          question: { 'pt-BR': 'Pergunta completa?', en: 'Complete question?' },\n          answer: { 'pt-BR': '<p>Resposta em HTML...</p>', en: '<p>HTML answer...</p>' },\n          category: { _id: '507f1f77bcf86cd799439012', name: { 'pt-BR': 'Geral', en: 'General' } },\n          tags: ['registration', 'tickets'],\n          viewCount: 250,\n          relatedFaqs: ['507f1f77bcf86cd799439013'],\n        },\n      },\n    },\n  })\n  @SwaggerApiResponse({ status: 404, description: 'FAQ not found' })\n  async findOne(@Param('id') id: string) {\n    const faq = await this.faqService.findFaqById(id);\n    return ApiResponse.success(faq);\n  }\n\n  @Patch(':id')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @ApiBearerAuth('JWT-auth')\n  @ApiOperation({ summary: 'Update FAQ item (Admin/Producer only)' })\n  @ApiParam({ name: 'id', description: 'FAQ ID' })\n  @ApiBody({ type: UpdateFaqDto })\n  @SwaggerApiResponse({\n    status: 200,\n    description: 'FAQ updated successfully',\n  })\n  @SwaggerApiResponse({ status: 400, description: 'Validation error' })\n  @SwaggerApiResponse({ status: 401, description: 'Unauthorized' })\n  @SwaggerApiResponse({ status: 403, description: 'Forbidden' })\n  @SwaggerApiResponse({ status: 404, description: 'FAQ not found' })\n  async update(@Param('id') id: string, @Body() updateFaqDto: UpdateFaqDto) {\n    const faq = await this.faqService.updateFaq(id, updateFaqDto);\n    return ApiResponse.success(faq);\n  }\n\n  @Delete(':id')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiBearerAuth('JWT-auth')\n  @ApiOperation({ summary: 'Soft delete FAQ item (Super Admin only)' })\n  @ApiParam({ name: 'id', description: 'FAQ ID' })\n  @ApiQuery({ name: 'reason', required: false, description: 'Reason for deletion' })\n  @SwaggerApiResponse({ status: 204, description: 'FAQ deleted successfully' })\n  @SwaggerApiResponse({ status: 401, description: 'Unauthorized' })\n  @SwaggerApiResponse({ status: 403, description: 'Forbidden' })\n  @SwaggerApiResponse({ status: 404, description: 'FAQ not found' })\n  async remove(@Param('id') id: string, @Req() req: Request, @Query('reason') reason?: string) {\n    const userId = (req as any).user?.id;\n    await this.faqService.removeFaq(id, reason, userId);\n  }\n\n  @Post(':id/restore')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN)\n  @ApiBearerAuth('JWT-auth')\n  @ApiOperation({ summary: 'Restore soft-deleted FAQ item (Super Admin only)' })\n  @ApiParam({ name: 'id', description: 'FAQ ID' })\n  @SwaggerApiResponse({\n    status: 200,\n    description: 'FAQ restored successfully',\n  })\n  @SwaggerApiResponse({ status: 401, description: 'Unauthorized' })\n  @SwaggerApiResponse({ status: 403, description: 'Forbidden' })\n  @SwaggerApiResponse({ status: 404, description: 'FAQ not found' })\n  async restore(@Param('id') id: string) {\n    const faq = await this.faqService.restoreFaq(id);\n    return ApiResponse.success(faq);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "771781367987c071117abd2f0ee766df096ddb01"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v803tu6pm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v803tu6pm();
var __decorate =
/* istanbul ignore next */
(cov_v803tu6pm().s[0]++,
/* istanbul ignore next */
(cov_v803tu6pm().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_v803tu6pm().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_v803tu6pm().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_v803tu6pm().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_v803tu6pm().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_v803tu6pm().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_v803tu6pm().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_v803tu6pm().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_v803tu6pm().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_v803tu6pm().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_v803tu6pm().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_v803tu6pm().b[3][0]++;
    cov_v803tu6pm().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_v803tu6pm().b[3][1]++;
    cov_v803tu6pm().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_v803tu6pm().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_v803tu6pm().b[5][0]++;
        cov_v803tu6pm().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_v803tu6pm().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_v803tu6pm().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_v803tu6pm().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_v803tu6pm().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_v803tu6pm().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_v803tu6pm().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_v803tu6pm().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_v803tu6pm().s[9]++;
  return /* istanbul ignore next */(cov_v803tu6pm().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_v803tu6pm().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_v803tu6pm().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_v803tu6pm().s[10]++,
/* istanbul ignore next */
(cov_v803tu6pm().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_v803tu6pm().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_v803tu6pm().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_v803tu6pm().f[1]++;
  cov_v803tu6pm().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_v803tu6pm().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_v803tu6pm().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_v803tu6pm().b[11][0]++;
    cov_v803tu6pm().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_v803tu6pm().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_v803tu6pm().s[13]++,
/* istanbul ignore next */
(cov_v803tu6pm().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_v803tu6pm().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_v803tu6pm().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_v803tu6pm().f[2]++;
  cov_v803tu6pm().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[3]++;
    cov_v803tu6pm().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
/* istanbul ignore next */
cov_v803tu6pm().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_v803tu6pm().s[17]++;
exports.FaqController = void 0;
const common_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[18]++, require("@nestjs/common"));
const swagger_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[19]++, require("@nestjs/swagger"));
const faq_service_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[20]++, require("./faq.service"));
const jwt_auth_guard_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[21]++, require("@common/guards/jwt-auth.guard"));
const roles_guard_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[22]++, require("@common/guards/roles.guard"));
const roles_decorator_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[23]++, require("@common/decorators/roles.decorator"));
const user_types_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[24]++, require("@shared/types/user.types"));
const public_decorator_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[25]++, require("@common/decorators/public.decorator"));
const create_faq_dto_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[26]++, require("./dto/create-faq.dto"));
const update_faq_dto_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[27]++, require("./dto/update-faq.dto"));
const faq_filter_dto_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[28]++, require("./dto/faq-filter.dto"));
const create_faq_category_dto_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[29]++, require("./dto/create-faq-category.dto"));
const update_faq_category_dto_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[30]++, require("./dto/update-faq-category.dto"));
const api_response_dto_1 =
/* istanbul ignore next */
(cov_v803tu6pm().s[31]++, require("@common/dto/api-response.dto"));
/* istanbul ignore next */
cov_v803tu6pm().s[32]++;
let FaqController = class FaqController {
  faqService;
  constructor(faqService) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[4]++;
    cov_v803tu6pm().s[33]++;
    this.faqService = faqService;
  }
  // FAQ endpoints
  async create(createFaqDto) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[5]++;
    const faq =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[34]++, await this.faqService.createFaq(createFaqDto));
    /* istanbul ignore next */
    cov_v803tu6pm().s[35]++;
    return api_response_dto_1.ApiResponse.success(faq);
  }
  async findAll(filterDto) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[6]++;
    const result =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[36]++, await this.faqService.findAllFaqs(filterDto));
    /* istanbul ignore next */
    cov_v803tu6pm().s[37]++;
    return api_response_dto_1.ApiResponse.success(result.data, result.metadata);
  }
  async findPopular(limit) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[7]++;
    const faqs =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[38]++, await this.faqService.findPopularFaqs(limit));
    /* istanbul ignore next */
    cov_v803tu6pm().s[39]++;
    return api_response_dto_1.ApiResponse.success(faqs);
  }
  // FAQ Category endpoints - MUST come before :id routes
  async createCategory(createCategoryDto) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[8]++;
    const category =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[40]++, await this.faqService.createCategory(createCategoryDto));
    /* istanbul ignore next */
    cov_v803tu6pm().s[41]++;
    return api_response_dto_1.ApiResponse.success(category);
  }
  async findAllCategories() {
    /* istanbul ignore next */
    cov_v803tu6pm().f[9]++;
    const categories =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[42]++, await this.faqService.findAllCategories());
    /* istanbul ignore next */
    cov_v803tu6pm().s[43]++;
    return api_response_dto_1.ApiResponse.success(categories);
  }
  async findOneCategory(id) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[10]++;
    const category =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[44]++, await this.faqService.findCategoryById(id));
    /* istanbul ignore next */
    cov_v803tu6pm().s[45]++;
    return api_response_dto_1.ApiResponse.success(category);
  }
  async updateCategory(id, updateCategoryDto) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[11]++;
    const category =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[46]++, await this.faqService.updateCategory(id, updateCategoryDto));
    /* istanbul ignore next */
    cov_v803tu6pm().s[47]++;
    return api_response_dto_1.ApiResponse.success(category);
  }
  async removeCategory(id) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[12]++;
    cov_v803tu6pm().s[48]++;
    await this.faqService.removeCategory(id);
  }
  // FAQ items with :id param routes - MUST come after specific routes
  async findOne(id) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[13]++;
    const faq =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[49]++, await this.faqService.findFaqById(id));
    /* istanbul ignore next */
    cov_v803tu6pm().s[50]++;
    return api_response_dto_1.ApiResponse.success(faq);
  }
  async update(id, updateFaqDto) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[14]++;
    const faq =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[51]++, await this.faqService.updateFaq(id, updateFaqDto));
    /* istanbul ignore next */
    cov_v803tu6pm().s[52]++;
    return api_response_dto_1.ApiResponse.success(faq);
  }
  async remove(id, req, reason) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[15]++;
    const userId =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[53]++, req.user?.id);
    /* istanbul ignore next */
    cov_v803tu6pm().s[54]++;
    await this.faqService.removeFaq(id, reason, userId);
  }
  async restore(id) {
    /* istanbul ignore next */
    cov_v803tu6pm().f[16]++;
    const faq =
    /* istanbul ignore next */
    (cov_v803tu6pm().s[55]++, await this.faqService.restoreFaq(id));
    /* istanbul ignore next */
    cov_v803tu6pm().s[56]++;
    return api_response_dto_1.ApiResponse.success(faq);
  }
};
/* istanbul ignore next */
cov_v803tu6pm().s[57]++;
exports.FaqController = FaqController;
/* istanbul ignore next */
cov_v803tu6pm().s[58]++;
__decorate([(0, common_1.Post)(), (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard), (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN, user_types_1.UserRole.PRODUCER), (0, common_1.HttpCode)(common_1.HttpStatus.CREATED), (0, swagger_1.ApiBearerAuth)('JWT-auth'), (0, swagger_1.ApiOperation)({
  summary: 'Create new FAQ item (Admin/Producer only)'
}), (0, swagger_1.ApiBody)({
  type: create_faq_dto_1.CreateFaqDto
}), (0, swagger_1.ApiResponse)({
  status: 201,
  description: 'FAQ created successfully',
  schema: {
    example: {
      success: true,
      data: {
        _id: '507f1f77bcf86cd799439011',
        question: {
          'pt-BR': 'Pergunta?',
          en: 'Question?'
        },
        answer: {
          'pt-BR': 'Resposta...',
          en: 'Answer...'
        },
        category: '507f1f77bcf86cd799439012',
        order: 1,
        viewCount: 0
      }
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 400,
  description: 'Validation error'
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Unauthorized'
}), (0, swagger_1.ApiResponse)({
  status: 403,
  description: 'Forbidden - insufficient role'
}), __param(0, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [create_faq_dto_1.CreateFaqDto]), __metadata("design:returntype", Promise)], FaqController.prototype, "create", null);
/* istanbul ignore next */
cov_v803tu6pm().s[59]++;
__decorate([(0, common_1.Get)(), (0, public_decorator_1.Public)(), (0, swagger_1.ApiOperation)({
  summary: 'List all FAQ items with filters and pagination'
}), (0, swagger_1.ApiQuery)({
  name: 'page',
  required: false,
  type: Number,
  example: 1
}), (0, swagger_1.ApiQuery)({
  name: 'limit',
  required: false,
  type: Number,
  example: 20
}), (0, swagger_1.ApiQuery)({
  name: 'sort',
  required: false,
  type: String,
  example: 'order,-viewCount'
}), (0, swagger_1.ApiQuery)({
  name: 'search',
  required: false,
  type: String,
  description: 'Search in question and answer'
}), (0, swagger_1.ApiQuery)({
  name: 'category',
  required: false,
  type: String,
  description: 'Filter by category ID'
}), (0, swagger_1.ApiQuery)({
  name: 'tags',
  required: false,
  type: [String],
  description: 'Filter by tags'
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'List of FAQ items with pagination',
  schema: {
    example: {
      success: true,
      data: [{
        _id: '507f1f77bcf86cd799439011',
        question: {
          'pt-BR': 'Como participar?',
          en: 'How to participate?'
        },
        answer: {
          'pt-BR': 'Resposta...',
          en: 'Answer...'
        },
        category: {
          _id: '507f1f77bcf86cd799439012',
          name: {
            'pt-BR': 'Geral',
            en: 'General'
          }
        },
        viewCount: 150
      }],
      metadata: {
        total: 30,
        page: 1,
        limit: 20,
        totalPages: 2,
        hasNext: true,
        hasPrev: false
      }
    }
  }
}), __param(0, (0, common_1.Query)()), __metadata("design:type", Function), __metadata("design:paramtypes", [faq_filter_dto_1.FaqFilterDto]), __metadata("design:returntype", Promise)], FaqController.prototype, "findAll", null);
/* istanbul ignore next */
cov_v803tu6pm().s[60]++;
__decorate([(0, common_1.Get)('popular'), (0, public_decorator_1.Public)(), (0, swagger_1.ApiOperation)({
  summary: 'Get most popular FAQ items'
}), (0, swagger_1.ApiQuery)({
  name: 'limit',
  required: false,
  type: Number,
  example: 10,
  description: 'Number of items to return'
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'List of popular FAQ items sorted by view count',
  schema: {
    example: {
      success: true,
      data: [{
        _id: '507f1f77bcf86cd799439011',
        question: {
          'pt-BR': 'Pergunta popular',
          en: 'Popular question'
        },
        viewCount: 500
      }]
    }
  }
}), __param(0, (0, common_1.Query)('limit')), __metadata("design:type", Function), __metadata("design:paramtypes", [Number]), __metadata("design:returntype", Promise)], FaqController.prototype, "findPopular", null);
/* istanbul ignore next */
cov_v803tu6pm().s[61]++;
__decorate([(0, swagger_1.ApiTags)('FAQ Categories'), (0, common_1.Post)('categories'), (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard), (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN, user_types_1.UserRole.PRODUCER), (0, common_1.HttpCode)(common_1.HttpStatus.CREATED), (0, swagger_1.ApiBearerAuth)('JWT-auth'), (0, swagger_1.ApiOperation)({
  summary: 'Create new FAQ category (Admin/Producer only)'
}), (0, swagger_1.ApiBody)({
  type: create_faq_category_dto_1.CreateFaqCategoryDto
}), (0, swagger_1.ApiResponse)({
  status: 201,
  description: 'Category created successfully',
  schema: {
    example: {
      success: true,
      data: {
        _id: '507f1f77bcf86cd799439012',
        name: {
          'pt-BR': 'Inscrições',
          en: 'Registration'
        },
        description: {
          'pt-BR': 'Perguntas sobre inscrições',
          en: 'Registration questions'
        },
        icon: 'ticket',
        order: 1
      }
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 400,
  description: 'Validation error'
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Unauthorized'
}), (0, swagger_1.ApiResponse)({
  status: 403,
  description: 'Forbidden'
}), __param(0, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [create_faq_category_dto_1.CreateFaqCategoryDto]), __metadata("design:returntype", Promise)], FaqController.prototype, "createCategory", null);
/* istanbul ignore next */
cov_v803tu6pm().s[62]++;
__decorate([(0, swagger_1.ApiTags)('FAQ Categories'), (0, common_1.Get)('categories'), (0, public_decorator_1.Public)(), (0, swagger_1.ApiOperation)({
  summary: 'List all FAQ categories'
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'List of FAQ categories',
  schema: {
    example: {
      success: true,
      data: [{
        _id: '507f1f77bcf86cd799439012',
        name: {
          'pt-BR': 'Geral',
          en: 'General'
        },
        description: {
          'pt-BR': 'Perguntas gerais',
          en: 'General questions'
        },
        faqCount: 15,
        order: 1
      }]
    }
  }
}), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], FaqController.prototype, "findAllCategories", null);
/* istanbul ignore next */
cov_v803tu6pm().s[63]++;
__decorate([(0, swagger_1.ApiTags)('FAQ Categories'), (0, common_1.Get)('categories/:id'), (0, public_decorator_1.Public)(), (0, swagger_1.ApiOperation)({
  summary: 'Get FAQ category by ID'
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'Category ID'
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'Category details with FAQs'
}), (0, swagger_1.ApiResponse)({
  status: 404,
  description: 'Category not found'
}), __param(0, (0, common_1.Param)('id')), __metadata("design:type", Function), __metadata("design:paramtypes", [String]), __metadata("design:returntype", Promise)], FaqController.prototype, "findOneCategory", null);
/* istanbul ignore next */
cov_v803tu6pm().s[64]++;
__decorate([(0, swagger_1.ApiTags)('FAQ Categories'), (0, common_1.Patch)('categories/:id'), (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard), (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN, user_types_1.UserRole.PRODUCER), (0, swagger_1.ApiBearerAuth)('JWT-auth'), (0, swagger_1.ApiOperation)({
  summary: 'Update FAQ category (Admin/Producer only)'
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'Category ID'
}), (0, swagger_1.ApiBody)({
  type: update_faq_category_dto_1.UpdateFaqCategoryDto
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'Category updated successfully'
}), (0, swagger_1.ApiResponse)({
  status: 400,
  description: 'Validation error'
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Unauthorized'
}), (0, swagger_1.ApiResponse)({
  status: 403,
  description: 'Forbidden'
}), (0, swagger_1.ApiResponse)({
  status: 404,
  description: 'Category not found'
}), __param(0, (0, common_1.Param)('id')), __param(1, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [String, update_faq_category_dto_1.UpdateFaqCategoryDto]), __metadata("design:returntype", Promise)], FaqController.prototype, "updateCategory", null);
/* istanbul ignore next */
cov_v803tu6pm().s[65]++;
__decorate([(0, swagger_1.ApiTags)('FAQ Categories'), (0, common_1.Delete)('categories/:id'), (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard), (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN), (0, common_1.HttpCode)(common_1.HttpStatus.NO_CONTENT), (0, swagger_1.ApiBearerAuth)('JWT-auth'), (0, swagger_1.ApiOperation)({
  summary: 'Delete FAQ category (Super Admin only)'
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'Category ID'
}), (0, swagger_1.ApiResponse)({
  status: 204,
  description: 'Category deleted successfully'
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Unauthorized'
}), (0, swagger_1.ApiResponse)({
  status: 403,
  description: 'Forbidden'
}), (0, swagger_1.ApiResponse)({
  status: 404,
  description: 'Category not found'
}), (0, swagger_1.ApiResponse)({
  status: 409,
  description: 'Cannot delete category with existing FAQs'
}), __param(0, (0, common_1.Param)('id')), __metadata("design:type", Function), __metadata("design:paramtypes", [String]), __metadata("design:returntype", Promise)], FaqController.prototype, "removeCategory", null);
/* istanbul ignore next */
cov_v803tu6pm().s[66]++;
__decorate([(0, common_1.Get)(':id'), (0, public_decorator_1.Public)(), (0, swagger_1.ApiOperation)({
  summary: 'Get FAQ item by ID'
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'FAQ ID',
  example: '507f1f77bcf86cd799439011'
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'FAQ item details',
  schema: {
    example: {
      success: true,
      data: {
        _id: '507f1f77bcf86cd799439011',
        question: {
          'pt-BR': 'Pergunta completa?',
          en: 'Complete question?'
        },
        answer: {
          'pt-BR': '<p>Resposta em HTML...</p>',
          en: '<p>HTML answer...</p>'
        },
        category: {
          _id: '507f1f77bcf86cd799439012',
          name: {
            'pt-BR': 'Geral',
            en: 'General'
          }
        },
        tags: ['registration', 'tickets'],
        viewCount: 250,
        relatedFaqs: ['507f1f77bcf86cd799439013']
      }
    }
  }
}), (0, swagger_1.ApiResponse)({
  status: 404,
  description: 'FAQ not found'
}), __param(0, (0, common_1.Param)('id')), __metadata("design:type", Function), __metadata("design:paramtypes", [String]), __metadata("design:returntype", Promise)], FaqController.prototype, "findOne", null);
/* istanbul ignore next */
cov_v803tu6pm().s[67]++;
__decorate([(0, common_1.Patch)(':id'), (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard), (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN, user_types_1.UserRole.PRODUCER), (0, swagger_1.ApiBearerAuth)('JWT-auth'), (0, swagger_1.ApiOperation)({
  summary: 'Update FAQ item (Admin/Producer only)'
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'FAQ ID'
}), (0, swagger_1.ApiBody)({
  type: update_faq_dto_1.UpdateFaqDto
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'FAQ updated successfully'
}), (0, swagger_1.ApiResponse)({
  status: 400,
  description: 'Validation error'
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Unauthorized'
}), (0, swagger_1.ApiResponse)({
  status: 403,
  description: 'Forbidden'
}), (0, swagger_1.ApiResponse)({
  status: 404,
  description: 'FAQ not found'
}), __param(0, (0, common_1.Param)('id')), __param(1, (0, common_1.Body)()), __metadata("design:type", Function), __metadata("design:paramtypes", [String, update_faq_dto_1.UpdateFaqDto]), __metadata("design:returntype", Promise)], FaqController.prototype, "update", null);
/* istanbul ignore next */
cov_v803tu6pm().s[68]++;
__decorate([(0, common_1.Delete)(':id'), (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard), (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN), (0, common_1.HttpCode)(common_1.HttpStatus.NO_CONTENT), (0, swagger_1.ApiBearerAuth)('JWT-auth'), (0, swagger_1.ApiOperation)({
  summary: 'Soft delete FAQ item (Super Admin only)'
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'FAQ ID'
}), (0, swagger_1.ApiQuery)({
  name: 'reason',
  required: false,
  description: 'Reason for deletion'
}), (0, swagger_1.ApiResponse)({
  status: 204,
  description: 'FAQ deleted successfully'
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Unauthorized'
}), (0, swagger_1.ApiResponse)({
  status: 403,
  description: 'Forbidden'
}), (0, swagger_1.ApiResponse)({
  status: 404,
  description: 'FAQ not found'
}), __param(0, (0, common_1.Param)('id')), __param(1, (0, common_1.Req)()), __param(2, (0, common_1.Query)('reason')), __metadata("design:type", Function), __metadata("design:paramtypes", [String, Object, String]), __metadata("design:returntype", Promise)], FaqController.prototype, "remove", null);
/* istanbul ignore next */
cov_v803tu6pm().s[69]++;
__decorate([(0, common_1.Post)(':id/restore'), (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard), (0, roles_decorator_1.Roles)(user_types_1.UserRole.SUPER_ADMIN), (0, swagger_1.ApiBearerAuth)('JWT-auth'), (0, swagger_1.ApiOperation)({
  summary: 'Restore soft-deleted FAQ item (Super Admin only)'
}), (0, swagger_1.ApiParam)({
  name: 'id',
  description: 'FAQ ID'
}), (0, swagger_1.ApiResponse)({
  status: 200,
  description: 'FAQ restored successfully'
}), (0, swagger_1.ApiResponse)({
  status: 401,
  description: 'Unauthorized'
}), (0, swagger_1.ApiResponse)({
  status: 403,
  description: 'Forbidden'
}), (0, swagger_1.ApiResponse)({
  status: 404,
  description: 'FAQ not found'
}), __param(0, (0, common_1.Param)('id')), __metadata("design:type", Function), __metadata("design:paramtypes", [String]), __metadata("design:returntype", Promise)], FaqController.prototype, "restore", null);
/* istanbul ignore next */
cov_v803tu6pm().s[70]++;
exports.FaqController = FaqController = __decorate([(0, swagger_1.ApiTags)('FAQ'), (0, common_1.Controller)('faq'), __metadata("design:paramtypes", [faq_service_1.FaqService])], FaqController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,