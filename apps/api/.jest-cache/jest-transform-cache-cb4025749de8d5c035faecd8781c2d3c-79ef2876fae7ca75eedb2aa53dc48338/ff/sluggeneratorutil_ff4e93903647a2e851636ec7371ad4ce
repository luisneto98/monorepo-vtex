ffde32f2c48abdd0a7448a5ecd076b41
"use strict";

/* istanbul ignore next */
function cov_1xba12r8o8() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/utils/slug-generator.util.ts";
  var hash = "40c0c5efbb4a0d2d6147def6e207a3032b0a99bd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/utils/slug-generator.util.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "2": {
        start: {
          line: 4,
          column: 28
        },
        end: {
          line: 4,
          column: 58
        }
      },
      "3": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 80
        }
      },
      "4": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "5": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 23
        }
      },
      "6": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "7": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "8": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 14,
          column: 13
        }
      },
      "9": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 48
        }
      },
      "10": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "11": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 18,
          column: 13
        }
      },
      "12": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "13": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "14": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 22
        }
      },
      "15": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 61
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 6
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 14,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 14,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/utils/slug-generator.util.ts",
      mappings: ";;;AACA,2DAAuD;AAEvD,MAAa,iBAAiB;IAC5B,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAC7B,IAAY,EACZ,KAAiB,EACjB,UAAmB;QAEnB,MAAM,QAAQ,GAAG,oCAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,IAAI,GAAG,QAAQ,CAAC;QACpB,IAAI,OAAO,GAAG,CAAC,CAAC;QAEhB,OAAO,IAAI,EAAE,CAAC;YACZ,MAAM,KAAK,GAAQ,EAAE,IAAI,EAAE,CAAC;YAC5B,IAAI,UAAU,EAAE,CAAC;gBACf,KAAK,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC;YAClC,CAAC;YAED,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC5C,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,OAAO,IAAI,CAAC;YACd,CAAC;YAED,IAAI,GAAG,GAAG,QAAQ,IAAI,OAAO,EAAE,CAAC;YAChC,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;CACF;AAzBD,8CAyBC",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/utils/slug-generator.util.ts"],
      sourcesContent: ["import { Model } from 'mongoose';\nimport { SanitizationUtil } from './sanitization.util';\n\nexport class SlugGeneratorUtil {\n  static async generateUniqueSlug(\n    text: string,\n    model: Model<any>,\n    existingId?: string,\n  ): Promise<string> {\n    const baseSlug = SanitizationUtil.sanitizeSlug(text);\n    let slug = baseSlug;\n    let counter = 1;\n\n    while (true) {\n      const query: any = { slug };\n      if (existingId) {\n        query._id = { $ne: existingId };\n      }\n\n      const existing = await model.findOne(query);\n      if (!existing) {\n        return slug;\n      }\n\n      slug = `${baseSlug}-${counter}`;\n      counter++;\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "40c0c5efbb4a0d2d6147def6e207a3032b0a99bd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xba12r8o8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xba12r8o8();
cov_1xba12r8o8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xba12r8o8().s[1]++;
exports.SlugGeneratorUtil = void 0;
const sanitization_util_1 =
/* istanbul ignore next */
(cov_1xba12r8o8().s[2]++, require("./sanitization.util"));
class SlugGeneratorUtil {
  static async generateUniqueSlug(text, model, existingId) {
    /* istanbul ignore next */
    cov_1xba12r8o8().f[0]++;
    const baseSlug =
    /* istanbul ignore next */
    (cov_1xba12r8o8().s[3]++, sanitization_util_1.SanitizationUtil.sanitizeSlug(text));
    let slug =
    /* istanbul ignore next */
    (cov_1xba12r8o8().s[4]++, baseSlug);
    let counter =
    /* istanbul ignore next */
    (cov_1xba12r8o8().s[5]++, 1);
    /* istanbul ignore next */
    cov_1xba12r8o8().s[6]++;
    while (true) {
      const query =
      /* istanbul ignore next */
      (cov_1xba12r8o8().s[7]++, {
        slug
      });
      /* istanbul ignore next */
      cov_1xba12r8o8().s[8]++;
      if (existingId) {
        /* istanbul ignore next */
        cov_1xba12r8o8().b[0][0]++;
        cov_1xba12r8o8().s[9]++;
        query._id = {
          $ne: existingId
        };
      } else
      /* istanbul ignore next */
      {
        cov_1xba12r8o8().b[0][1]++;
      }
      const existing =
      /* istanbul ignore next */
      (cov_1xba12r8o8().s[10]++, await model.findOne(query));
      /* istanbul ignore next */
      cov_1xba12r8o8().s[11]++;
      if (!existing) {
        /* istanbul ignore next */
        cov_1xba12r8o8().b[1][0]++;
        cov_1xba12r8o8().s[12]++;
        return slug;
      } else
      /* istanbul ignore next */
      {
        cov_1xba12r8o8().b[1][1]++;
      }
      cov_1xba12r8o8().s[13]++;
      slug = `${baseSlug}-${counter}`;
      /* istanbul ignore next */
      cov_1xba12r8o8().s[14]++;
      counter++;
    }
  }
}
/* istanbul ignore next */
cov_1xba12r8o8().s[15]++;
exports.SlugGeneratorUtil = SlugGeneratorUtil;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXhiYTEycjhvOCIsImFjdHVhbENvdmVyYWdlIiwicyIsInNhbml0aXphdGlvbl91dGlsXzEiLCJyZXF1aXJlIiwiU2x1Z0dlbmVyYXRvclV0aWwiLCJnZW5lcmF0ZVVuaXF1ZVNsdWciLCJ0ZXh0IiwibW9kZWwiLCJleGlzdGluZ0lkIiwiZiIsImJhc2VTbHVnIiwiU2FuaXRpemF0aW9uVXRpbCIsInNhbml0aXplU2x1ZyIsInNsdWciLCJjb3VudGVyIiwicXVlcnkiLCJiIiwiX2lkIiwiJG5lIiwiZXhpc3RpbmciLCJmaW5kT25lIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9ob21lL2x1aXNuZXRvOTgvRG9jdW1lbnRvcy9Db2RlL21vbm9yZXBvLXZ0ZXgvYXBwcy9hcGkvc3JjL21vZHVsZXMvbmV3cy1yZWxlYXNlcy91dGlscy9zbHVnLWdlbmVyYXRvci51dGlsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZGVsIH0gZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IHsgU2FuaXRpemF0aW9uVXRpbCB9IGZyb20gJy4vc2FuaXRpemF0aW9uLnV0aWwnO1xuXG5leHBvcnQgY2xhc3MgU2x1Z0dlbmVyYXRvclV0aWwge1xuICBzdGF0aWMgYXN5bmMgZ2VuZXJhdGVVbmlxdWVTbHVnKFxuICAgIHRleHQ6IHN0cmluZyxcbiAgICBtb2RlbDogTW9kZWw8YW55PixcbiAgICBleGlzdGluZ0lkPzogc3RyaW5nLFxuICApOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIGNvbnN0IGJhc2VTbHVnID0gU2FuaXRpemF0aW9uVXRpbC5zYW5pdGl6ZVNsdWcodGV4dCk7XG4gICAgbGV0IHNsdWcgPSBiYXNlU2x1ZztcbiAgICBsZXQgY291bnRlciA9IDE7XG5cbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgY29uc3QgcXVlcnk6IGFueSA9IHsgc2x1ZyB9O1xuICAgICAgaWYgKGV4aXN0aW5nSWQpIHtcbiAgICAgICAgcXVlcnkuX2lkID0geyAkbmU6IGV4aXN0aW5nSWQgfTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZXhpc3RpbmcgPSBhd2FpdCBtb2RlbC5maW5kT25lKHF1ZXJ5KTtcbiAgICAgIGlmICghZXhpc3RpbmcpIHtcbiAgICAgICAgcmV0dXJuIHNsdWc7XG4gICAgICB9XG5cbiAgICAgIHNsdWcgPSBgJHtiYXNlU2x1Z30tJHtjb3VudGVyfWA7XG4gICAgICBjb3VudGVyKys7XG4gICAgfVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBb0JNO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFBQUEsY0FBQSxHQUFBRSxDQUFBOzs7Ozs7O0FBbkJOLE1BQUFDLG1CQUFBO0FBQUE7QUFBQSxDQUFBSCxjQUFBLEdBQUFFLENBQUEsT0FBQUUsT0FBQTtBQUVBLE1BQWFDLGlCQUFpQjtFQUM1QixhQUFhQyxrQkFBa0JBLENBQzdCQyxJQUFZLEVBQ1pDLEtBQWlCLEVBQ2pCQyxVQUFtQjtJQUFBO0lBQUFULGNBQUEsR0FBQVUsQ0FBQTtJQUVuQixNQUFNQyxRQUFRO0lBQUE7SUFBQSxDQUFBWCxjQUFBLEdBQUFFLENBQUEsT0FBR0MsbUJBQUEsQ0FBQVMsZ0JBQWdCLENBQUNDLFlBQVksQ0FBQ04sSUFBSSxDQUFDO0lBQ3BELElBQUlPLElBQUk7SUFBQTtJQUFBLENBQUFkLGNBQUEsR0FBQUUsQ0FBQSxPQUFHUyxRQUFRO0lBQ25CLElBQUlJLE9BQU87SUFBQTtJQUFBLENBQUFmLGNBQUEsR0FBQUUsQ0FBQSxPQUFHLENBQUM7SUFBQztJQUFBRixjQUFBLEdBQUFFLENBQUE7SUFFaEIsT0FBTyxJQUFJLEVBQUU7TUFDWCxNQUFNYyxLQUFLO01BQUE7TUFBQSxDQUFBaEIsY0FBQSxHQUFBRSxDQUFBLE9BQVE7UUFBRVk7TUFBSSxDQUFFO01BQUM7TUFBQWQsY0FBQSxHQUFBRSxDQUFBO01BQzVCLElBQUlPLFVBQVUsRUFBRTtRQUFBO1FBQUFULGNBQUEsR0FBQWlCLENBQUE7UUFBQWpCLGNBQUEsR0FBQUUsQ0FBQTtRQUNkYyxLQUFLLENBQUNFLEdBQUcsR0FBRztVQUFFQyxHQUFHLEVBQUVWO1FBQVUsQ0FBRTtNQUNqQyxDQUFDO01BQUE7TUFBQTtRQUFBVCxjQUFBLEdBQUFpQixDQUFBO01BQUE7TUFFRCxNQUFNRyxRQUFRO01BQUE7TUFBQSxDQUFBcEIsY0FBQSxHQUFBRSxDQUFBLFFBQUcsTUFBTU0sS0FBSyxDQUFDYSxPQUFPLENBQUNMLEtBQUssQ0FBQztNQUFDO01BQUFoQixjQUFBLEdBQUFFLENBQUE7TUFDNUMsSUFBSSxDQUFDa0IsUUFBUSxFQUFFO1FBQUE7UUFBQXBCLGNBQUEsR0FBQWlCLENBQUE7UUFBQWpCLGNBQUEsR0FBQUUsQ0FBQTtRQUNiLE9BQU9ZLElBQUk7TUFDYixDQUFDO01BQUE7TUFBQTtRQUFBZCxjQUFBLEdBQUFpQixDQUFBO01BQUE7TUFBQWpCLGNBQUEsR0FBQUUsQ0FBQTtNQUVEWSxJQUFJLEdBQUcsR0FBR0gsUUFBUSxJQUFJSSxPQUFPLEVBQUU7TUFBQztNQUFBZixjQUFBLEdBQUFFLENBQUE7TUFDaENhLE9BQU8sRUFBRTtJQUNYO0VBQ0Y7O0FBQ0Q7QUFBQWYsY0FBQSxHQUFBRSxDQUFBO0FBekJEb0IsT0FBQSxDQUFBakIsaUJBQUEsR0FBQUEsaUJBQUEiLCJpZ25vcmVMaXN0IjpbXX0=