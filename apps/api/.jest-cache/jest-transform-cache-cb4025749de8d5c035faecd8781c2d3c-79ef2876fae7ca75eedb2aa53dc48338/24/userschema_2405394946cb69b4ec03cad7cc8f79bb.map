{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/users/schemas/user.schema.ts","mappings":";;;;;;;;;;;;AAAA,+CAA+D;AAC/D,uCAA8D;AAC9D,yDAAiG;AAKjG,IAAM,OAAO,GAAb,MAAM,OAAO;IAOX,IAAI,CAAS;IAMb,KAAK,CAAU;IAMf,OAAO,CAAU;IAMjB,QAAQ,CAAU;IAKlB,QAAQ,CAAU;IAMlB,QAAQ,CAAkB;CAC3B,CAAA;AA9BC;IANC,IAAA,eAAI,EAAC;QACJ,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,CAAC;QACZ,SAAS,EAAE,GAAG;QACd,IAAI,EAAE,IAAI;KACX,CAAC;;qCACW;AAMb;IAJC,IAAA,eAAI,EAAC;QACJ,KAAK,EAAE,oBAAoB;QAC3B,IAAI,EAAE,IAAI;KACX,CAAC;;sCACa;AAMf;IAJC,IAAA,eAAI,EAAC;QACJ,SAAS,EAAE,GAAG;QACd,IAAI,EAAE,IAAI;KACX,CAAC;;wCACe;AAMjB;IAJC,IAAA,eAAI,EAAC;QACJ,SAAS,EAAE,EAAE;QACb,IAAI,EAAE,IAAI;KACX,CAAC;;yCACgB;AAKlB;IAHC,IAAA,eAAI,EAAC;QACJ,KAAK,EAAE,gBAAgB;KACxB,CAAC;;yCACgB;AAMlB;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC;QACrB,OAAO,EAAE,OAAO;KACjB,CAAC;;yCACwB;AApCtB,OAAO;IADZ,IAAA,iBAAM,EAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;GACjB,OAAO,CAqCZ;AAGD,IAAM,WAAW,GAAjB,MAAM,WAAW;IAKf,SAAS,CAAY;IAKrB,oBAAoB,CAAW;IAM/B,kBAAkB,CAAY;CAC/B,CAAA;AAZC;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,CAAC,MAAM,CAAC;QACd,OAAO,EAAE,EAAE;KACZ,CAAC;;8CACmB;AAKrB;IAHC,IAAA,eAAI,EAAC;QACJ,OAAO,EAAE,IAAI;KACd,CAAC;;yDAC6B;AAM/B;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,iBAAc,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;QAC/D,OAAO,EAAE,EAAE;KACZ,CAAC;;uDAC4B;AAhB1B,WAAW;IADhB,IAAA,iBAAM,EAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;GACjB,WAAW,CAiBhB;AAGM,IAAM,IAAI,GAAV,MAAM,IAAI;IASf,KAAK,CAAS;IAMd,QAAQ,CAAS;IAOjB,IAAI,CAAW;IAMf,OAAO,CAAc;IAOrB,WAAW,CAAkB;IAK7B,QAAQ,CAAU;IAMlB,WAAW,CAAU;IAKrB,SAAS,CAAQ;IAKjB,YAAY,CAAU;CACvB,CAAA;AAzDY,oBAAI;AASf;IARC,IAAA,eAAI,EAAC;QACJ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;QACZ,SAAS,EAAE,IAAI;QACf,KAAK,EAAE,IAAI;QACX,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,kDAAkD;KAC1D,CAAC;;mCACY;AAMd;IAJC,IAAA,eAAI,EAAC;QACJ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,KAAK;KACd,CAAC;;sCACe;AAOjB;IALC,IAAA,eAAI,EAAC;QACJ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,qBAAQ,CAAC;QAC7B,KAAK,EAAE,IAAI;KACZ,CAAC;;kCACa;AAMf;IAJC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,IAAI;KACf,CAAC;;qCACmB;AAOrB;IALC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,WAAW;QACjB,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,EAAE;KACZ,CAAC;;yCAC2B;AAK7B;IAHC,IAAA,eAAI,EAAC;QACJ,OAAO,EAAE,IAAI;KACd,CAAC;;sCACgB;AAMlB;IAJC,IAAA,eAAI,EAAC;QACJ,OAAO,EAAE,KAAK;QACd,KAAK,EAAE,IAAI;KACZ,CAAC;;yCACmB;AAKrB;IAHC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,IAAI;KACX,CAAC;8BACU,IAAI;uCAAC;AAKjB;IAHC,IAAA,eAAI,EAAC;QACJ,MAAM,EAAE,KAAK;KACd,CAAC;;0CACoB;eAxDX,IAAI;IADhB,IAAA,iBAAM,EAAC,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACpC,IAAI,CAyDhB;AAEY,QAAA,UAAU,GAAG,wBAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAE7D,UAAU;AACV,kBAAU,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAC/B,kBAAU,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9B,kBAAU,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;AACrC,kBAAU,CAAC,KAAK,CAAC,EAAE,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3C,kBAAU,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;AAClC,kBAAU,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;AAE9C,6CAA6C;AAC7C,kBAAU,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,IAAI;IACnC,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;IACD,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;IACD,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACrD,CAAC;IACD,IAAI,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvD,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,iBAAiB;AACjB,kBAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC;IACpC,OAAO,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC;AAEH,iBAAiB;AACjB,kBAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG;IAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;IAC/B,OAAO,GAAG,CAAC,QAAQ,CAAC;IACpB,OAAO,GAAG,CAAC,YAAY,CAAC;IACxB,OAAO,GAAG,CAAC;AACb,CAAC,CAAC","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/users/schemas/user.schema.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Schema as MongooseSchema } from 'mongoose';\nimport { User as IUser, UserRole, UserProfile, UserPreferences } from '@shared/types/user.types';\n\nexport type UserDocument = User & Document;\n\n@Schema({ _id: false })\nclass Profile implements UserProfile {\n  @Prop({\n    required: true,\n    minlength: 3,\n    maxlength: 100,\n    trim: true,\n  })\n  name: string;\n\n  @Prop({\n    match: /^[+]?[0-9]{10,15}$/,\n    trim: true,\n  })\n  phone?: string;\n\n  @Prop({\n    maxlength: 100,\n    trim: true,\n  })\n  company?: string;\n\n  @Prop({\n    maxlength: 50,\n    trim: true,\n  })\n  position?: string;\n\n  @Prop({\n    match: /^https?:\\/\\/.+/,\n  })\n  photoUrl?: string;\n\n  @Prop({\n    enum: ['pt-BR', 'en'],\n    default: 'pt-BR',\n  })\n  language?: 'pt-BR' | 'en';\n}\n\n@Schema({ _id: false })\nclass Preferences implements UserPreferences {\n  @Prop({\n    type: [String],\n    default: [],\n  })\n  interests?: string[];\n\n  @Prop({\n    default: true,\n  })\n  notificationsEnabled?: boolean;\n\n  @Prop({\n    type: [{ type: MongooseSchema.Types.ObjectId, ref: 'Session' }],\n    default: [],\n  })\n  favoriteSessionIds?: string[];\n}\n\n@Schema({ timestamps: true, collection: 'User' })\nexport class User implements Omit<IUser, '_id'> {\n  @Prop({\n    required: true,\n    unique: true,\n    lowercase: true,\n    index: true,\n    trim: true,\n    match: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n  })\n  email: string;\n\n  @Prop({\n    required: true,\n    select: false,\n  })\n  password: string;\n\n  @Prop({\n    required: true,\n    enum: Object.values(UserRole),\n    index: true,\n  })\n  role: UserRole;\n\n  @Prop({\n    type: Profile,\n    required: true,\n  })\n  profile: UserProfile;\n\n  @Prop({\n    type: Preferences,\n    required: true,\n    default: {},\n  })\n  preferences: UserPreferences;\n\n  @Prop({\n    default: true,\n  })\n  isActive: boolean;\n\n  @Prop({\n    default: false,\n    index: true,\n  })\n  isValidated: boolean;\n\n  @Prop({\n    type: Date,\n  })\n  lastLogin?: Date;\n\n  @Prop({\n    select: false,\n  })\n  refreshToken?: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n// Indexes\nUserSchema.index({ email: 1 });\nUserSchema.index({ role: 1 });\nUserSchema.index({ isValidated: 1 });\nUserSchema.index({ 'profile.company': 1 });\nUserSchema.index({ isActive: 1 });\nUserSchema.index({ role: 1, isValidated: 1 });\n\n// Pre-save middleware for data normalization\nUserSchema.pre('save', function (next) {\n  if (this.email) {\n    this.email = this.email.toLowerCase().trim();\n  }\n  if (this.profile?.name) {\n    this.profile.name = this.profile.name.trim();\n  }\n  if (this.profile?.company) {\n    this.profile.company = this.profile.company.trim();\n  }\n  if (this.profile?.position) {\n    this.profile.position = this.profile.position.trim();\n  }\n  next();\n});\n\n// Virtual fields\nUserSchema.virtual('displayName').get(function () {\n  return this.profile?.name || this.email.split('@')[0];\n});\n\n// Schema methods\nUserSchema.methods['toJSON'] = function () {\n  const obj = this['toObject']();\n  delete obj.password;\n  delete obj.refreshToken;\n  return obj;\n};\n"],"version":3}