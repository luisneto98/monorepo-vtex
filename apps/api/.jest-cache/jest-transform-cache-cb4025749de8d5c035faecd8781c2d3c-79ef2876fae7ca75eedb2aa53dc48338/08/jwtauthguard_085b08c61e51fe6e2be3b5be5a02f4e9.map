{"version":3,"names":["cov_1eja06pv8j","actualCoverage","common_1","s","require","passport_1","core_1","public_decorator_1","JwtAuthGuard","AuthGuard","reflector","constructor","f","canActivate","context","isPublic","getAllAndOverride","IS_PUBLIC_KEY","getHandler","getClass","b","request","switchToHttp","getRequest","headers","includes","authHeader","authorization","Authorization","startsWith","UnauthorizedException","handleRequest","err","user","console","error","message","name","exports","__decorate","Injectable","Reflector"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/guards/jwt-auth.guard.ts"],"sourcesContent":["import { Injectable, ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from '../decorators/public.decorator';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride<boolean>(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (isPublic) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n\n    // Para requests multipart/form-data, validar header Authorization explicitamente\n    // antes do Passport processar, evitando conflitos com parsing de arquivo\n    if (request.headers['content-type']?.includes('multipart/form-data')) {\n      const authHeader = request.headers.authorization || request.headers.Authorization;\n      if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        throw new UnauthorizedException('Missing or invalid authorization header');\n      }\n    }\n\n    return super.canActivate(context);\n  }\n\n  handleRequest(err: any, user: any) {\n    if (err || !user) {\n      // Log detalhado do erro para debug\n      console.error('üîê JWT Authentication failed:', {\n        error: err?.message || 'User not found',\n        name: err?.name,\n      });\n\n      // Se for erro de token expirado, retornar mensagem clara\n      if (err?.name === 'TokenExpiredError') {\n        throw new UnauthorizedException('Token expired. Please login again.');\n      }\n\n      throw err || new UnauthorizedException('Invalid token');\n    }\n    return user;\n  }\n}\n"],"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","ignoreList":[]}