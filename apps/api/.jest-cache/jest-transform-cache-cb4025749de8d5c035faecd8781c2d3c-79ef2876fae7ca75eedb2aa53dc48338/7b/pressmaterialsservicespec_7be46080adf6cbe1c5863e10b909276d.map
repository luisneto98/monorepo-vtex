{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/press-materials/press-materials.service.spec.ts","mappings":"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","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/press-materials/press-materials.service.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { getModelToken } from '@nestjs/mongoose';\nimport { PressMaterialsService } from './press-materials.service';\nimport { FileUploadService } from './services/file-upload.service';\nimport { ThumbnailService } from './services/thumbnail.service';\nimport { DownloadTrackingService } from './services/download-tracking.service';\nimport { PressMaterial } from './schemas/press-material.schema';\nimport { NotFoundException, ForbiddenException } from '@nestjs/common';\n\ndescribe('PressMaterialsService', () => {\n  let service: PressMaterialsService;\n  let mockPressMaterialModel: any;\n  let mockFileUploadService: any;\n  let mockThumbnailService: any;\n  let mockDownloadTrackingService: any;\n\n  const mockPressMaterial = {\n    _id: '123',\n    type: 'photo',\n    title: { pt: 'Teste', en: 'Test', es: 'Prueba' },\n    description: { pt: 'Descrição', en: 'Description', es: 'Descripción' },\n    fileUrl: 'https://s3.amazonaws.com/test.jpg',\n    thumbnailUrl: 'https://s3.amazonaws.com/test_thumb.jpg',\n    metadata: { size: 1024, format: 'jpg' },\n    tags: ['test'],\n    status: 'published',\n    accessLevel: 'public',\n    downloadCount: 0,\n    uploadedBy: 'user123',\n    save: jest.fn(),\n    deleteOne: jest.fn(),\n  };\n\n  beforeEach(async () => {\n    mockPressMaterialModel = {\n      create: jest.fn(),\n      find: jest.fn(),\n      findById: jest.fn(),\n      findByIdAndUpdate: jest.fn(),\n      countDocuments: jest.fn(),\n      aggregate: jest.fn(),\n      distinct: jest.fn(),\n    };\n\n    mockFileUploadService = {\n      uploadFile: jest.fn(),\n      deleteFile: jest.fn(),\n      generateSignedUrl: jest.fn(),\n    };\n\n    mockThumbnailService = {\n      generateThumbnail: jest.fn(),\n    };\n\n    mockDownloadTrackingService = {\n      trackDownload: jest.fn(),\n      getDownloadStatistics: jest.fn(),\n      getTopDownloadedMaterials: jest.fn(),\n    };\n\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        PressMaterialsService,\n        {\n          provide: getModelToken(PressMaterial.name),\n          useValue: mockPressMaterialModel,\n        },\n        {\n          provide: FileUploadService,\n          useValue: mockFileUploadService,\n        },\n        {\n          provide: ThumbnailService,\n          useValue: mockThumbnailService,\n        },\n        {\n          provide: DownloadTrackingService,\n          useValue: mockDownloadTrackingService,\n        },\n      ],\n    }).compile();\n\n    service = module.get<PressMaterialsService>(PressMaterialsService);\n  });\n\n  describe('create', () => {\n    it('should create a new press material', async () => {\n      const dto = {\n        type: 'photo' as const,\n        title: { pt: 'Teste', en: 'Test', es: 'Prueba' },\n      };\n      const file = {\n        buffer: Buffer.from('test'),\n        originalname: 'test.jpg',\n        mimetype: 'image/jpeg',\n        size: 1024,\n      } as Express.Multer.File;\n\n      mockFileUploadService.uploadFile.mockResolvedValue({\n        fileUrl: 'https://s3.amazonaws.com/test.jpg',\n        metadata: { size: 1024, format: 'jpg' },\n      });\n      mockThumbnailService.generateThumbnail.mockResolvedValue(\n        'https://s3.amazonaws.com/test_thumb.jpg',\n      );\n\n      const saveMock = jest.fn().mockResolvedValue(mockPressMaterial);\n      mockPressMaterialModel.mockImplementation(() => ({\n        ...mockPressMaterial,\n        save: saveMock,\n      }));\n\n      const result = await service.create(dto, file, 'user123');\n\n      expect(mockFileUploadService.uploadFile).toHaveBeenCalledWith(file, 'photo', 'user123');\n      expect(mockThumbnailService.generateThumbnail).toHaveBeenCalled();\n      expect(saveMock).toHaveBeenCalled();\n      expect(result).toBeDefined();\n    });\n  });\n\n  describe('findOne', () => {\n    it('should find a press material by id', async () => {\n      mockPressMaterialModel.findById.mockReturnValue({\n        lean: jest.fn().mockResolvedValue(mockPressMaterial),\n      });\n\n      const result = await service.findOne('123');\n\n      expect(mockPressMaterialModel.findById).toHaveBeenCalledWith('123');\n      expect(result).toEqual(mockPressMaterial);\n    });\n\n    it('should throw NotFoundException if material not found', async () => {\n      mockPressMaterialModel.findById.mockReturnValue({\n        lean: jest.fn().mockResolvedValue(null),\n      });\n\n      await expect(service.findOne('999')).rejects.toThrow(NotFoundException);\n    });\n  });\n\n  describe('findPublic', () => {\n    it('should return only published and public materials', async () => {\n      const publicMaterials = [mockPressMaterial];\n      mockPressMaterialModel.find.mockReturnValue({\n        sort: jest.fn().mockReturnThis(),\n        select: jest.fn().mockReturnThis(),\n        lean: jest.fn().mockResolvedValue(publicMaterials),\n      });\n\n      const result = await service.findPublic();\n\n      expect(mockPressMaterialModel.find).toHaveBeenCalledWith({\n        status: 'published',\n        accessLevel: 'public',\n      });\n      expect(result).toEqual(publicMaterials);\n    });\n  });\n\n  describe('getDownloadUrl', () => {\n    it('should track download and return URL for public materials', async () => {\n      mockPressMaterialModel.findById.mockResolvedValue(mockPressMaterial);\n\n      const result = await service.getDownloadUrl('123', '192.168.1.1', 'Mozilla/5.0', 'user123');\n\n      expect(mockDownloadTrackingService.trackDownload).toHaveBeenCalledWith(\n        '123',\n        '192.168.1.1',\n        'Mozilla/5.0',\n        'user123',\n      );\n      expect(result).toBe(mockPressMaterial.fileUrl);\n    });\n\n    it('should throw ForbiddenException for restricted materials without auth', async () => {\n      const restrictedMaterial = {\n        ...mockPressMaterial,\n        accessLevel: 'restricted',\n      };\n      mockPressMaterialModel.findById.mockResolvedValue(restrictedMaterial);\n\n      await expect(service.getDownloadUrl('123', '192.168.1.1', 'Mozilla/5.0')).rejects.toThrow(\n        ForbiddenException,\n      );\n    });\n\n    it('should generate signed URL for restricted materials with auth', async () => {\n      const restrictedMaterial = {\n        ...mockPressMaterial,\n        accessLevel: 'restricted',\n      };\n      mockPressMaterialModel.findById.mockResolvedValue(restrictedMaterial);\n      mockFileUploadService.generateSignedUrl.mockResolvedValue(\n        'https://s3.amazonaws.com/signed-url',\n      );\n\n      const result = await service.getDownloadUrl('123', '192.168.1.1', 'Mozilla/5.0', 'user123');\n\n      expect(mockFileUploadService.generateSignedUrl).toHaveBeenCalledWith(\n        restrictedMaterial.fileUrl,\n      );\n      expect(result).toBe('https://s3.amazonaws.com/signed-url');\n    });\n  });\n\n  describe('remove', () => {\n    it('should delete material and its files', async () => {\n      mockPressMaterialModel.findById.mockResolvedValue(mockPressMaterial);\n\n      await service.remove('123');\n\n      expect(mockFileUploadService.deleteFile).toHaveBeenCalledWith(mockPressMaterial.fileUrl);\n      expect(mockFileUploadService.deleteFile).toHaveBeenCalledWith(mockPressMaterial.thumbnailUrl);\n      expect(mockPressMaterial.deleteOne).toHaveBeenCalled();\n    });\n  });\n});\n"],"version":3}