{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/press-materials/press-materials.controller.ts","mappings":"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","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/press-materials/press-materials.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Body,\n  Param,\n  Query,\n  UseGuards,\n  UseInterceptors,\n  UploadedFile,\n  Req,\n  Res,\n  HttpStatus,\n  BadRequestException,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiConsumes,\n  ApiBody,\n} from '@nestjs/swagger';\nimport { Request, Response } from 'express';\nimport { Throttle } from '@nestjs/throttler';\nimport { PressMaterialsService } from './press-materials.service';\nimport { CreatePressMaterialDto } from './dto/create-press-material.dto';\nimport { UpdatePressMaterialDto } from './dto/update-press-material.dto';\nimport { QueryPressMaterialDto } from './dto/query-press-material.dto';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../auth/guards/roles.guard';\nimport { Roles } from '../auth/decorators/roles.decorator';\nimport { CurrentUser } from '../auth/decorators/current-user.decorator';\nimport { Public } from '../auth/decorators/public.decorator';\nimport { multerConfig } from '../../config/multer.config';\nimport { UserRole } from '@vtexday26/shared';\n\n@ApiTags('press-materials')\n@Controller('press-materials')\nexport class PressMaterialsController {\n  constructor(private readonly pressMaterialsService: PressMaterialsService) {}\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @UseInterceptors(FileInterceptor('file', multerConfig))\n  @Throttle({ default: { limit: 5, ttl: 60000 } }) // 5 uploads per minute\n  @ApiOperation({ summary: 'Create new press material' })\n  @ApiBearerAuth()\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      required: ['file', 'type', 'title'],\n      properties: {\n        file: {\n          type: 'string',\n          format: 'binary',\n        },\n        type: {\n          type: 'string',\n          enum: ['press_kit', 'logo_package', 'photo', 'video', 'presentation'],\n        },\n        'title[pt]': { type: 'string' },\n        'title[en]': { type: 'string' },\n        'title[es]': { type: 'string' },\n        'description[pt]': { type: 'string' },\n        'description[en]': { type: 'string' },\n        'description[es]': { type: 'string' },\n        tags: {\n          type: 'array',\n          items: { type: 'string' },\n        },\n        status: {\n          type: 'string',\n          enum: ['draft', 'published', 'archived'],\n        },\n        accessLevel: {\n          type: 'string',\n          enum: ['public', 'restricted'],\n        },\n      },\n    },\n  })\n  @ApiResponse({ status: HttpStatus.CREATED, description: 'Press material created' })\n  async create(\n    @UploadedFile() file: Express.Multer.File,\n    @Body() body: any,\n    @CurrentUser() user: any,\n  ) {\n    if (!file) {\n      throw new BadRequestException('File is required');\n    }\n\n    if (!user || !user.sub) {\n      throw new BadRequestException('User authentication failed');\n    }\n\n    // Parse multipart form data\n    const dto: CreatePressMaterialDto = {\n      type: body.type,\n      title: {\n        pt: body['title[pt]'] || body.title?.pt,\n        en: body['title[en]'] || body.title?.en,\n        es: body['title[es]'] || body.title?.es,\n      },\n      description: body.description\n        ? {\n            pt: body['description[pt]'] || body.description?.pt,\n            en: body['description[en]'] || body.description?.en,\n            es: body['description[es]'] || body.description?.es,\n          }\n        : undefined,\n      tags: Array.isArray(body.tags) ? body.tags : body.tags?.split(','),\n      status: body.status,\n      accessLevel: body.accessLevel,\n    };\n\n    return this.pressMaterialsService.create(dto, file, user.sub);\n  }\n\n  @Get()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @ApiOperation({ summary: 'Get all press materials with pagination' })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.OK, description: 'List of press materials' })\n  async findAll(@Query() query: QueryPressMaterialDto) {\n    return this.pressMaterialsService.findAll(query);\n  }\n\n  @Get('public')\n  @Public()\n  @ApiOperation({ summary: 'Get public press materials' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'List of public press materials' })\n  async findPublic() {\n    return this.pressMaterialsService.findPublic();\n  }\n\n  @Get('top-downloaded')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @ApiOperation({ summary: 'Get top downloaded materials' })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.OK, description: 'Top downloaded materials' })\n  async getTopDownloaded(@Query('limit') limit?: number) {\n    return this.pressMaterialsService.getTopDownloaded(limit);\n  }\n\n  @Get(':id')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @ApiOperation({ summary: 'Get specific press material' })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.OK, description: 'Press material details' })\n  async findOne(@Param('id') id: string) {\n    return this.pressMaterialsService.findOne(id);\n  }\n\n  @Get(':id/download')\n  @Public()\n  @Throttle({ default: { limit: 10, ttl: 60000 } }) // 10 downloads per minute per IP\n  @ApiOperation({ summary: 'Get download URL for press material' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Download URL' })\n  async download(\n    @Param('id') id: string,\n    @Req() req: Request,\n    @Res() res: Response,\n    @CurrentUser() user?: any,\n  ) {\n    const ipAddress = req.ip || req.socket.remoteAddress || '';\n    const userAgent = req.get('user-agent') || '';\n\n    const url = await this.pressMaterialsService.getDownloadUrl(id, ipAddress, userAgent, user?.sub);\n\n    // Return URL as JSON for frontend to open directly\n    res.json({ url });\n  }\n\n  @Get(':id/statistics')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @ApiOperation({ summary: 'Get download statistics for material' })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.OK, description: 'Download statistics' })\n  async getStatistics(@Param('id') id: string) {\n    return this.pressMaterialsService.getStatistics(id);\n  }\n\n  @Put(':id')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @ApiOperation({ summary: 'Update press material' })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.OK, description: 'Press material updated' })\n  async update(\n    @Param('id') id: string,\n    @Body() dto: UpdatePressMaterialDto,\n    @CurrentUser() user: any,\n  ) {\n    // Remove MongoDB _id fields from nested objects if present\n    const cleanDto = { ...dto };\n    if (cleanDto.title && '_id' in cleanDto.title) {\n      const { _id, ...titleWithoutId } = cleanDto.title as any;\n      cleanDto.title = titleWithoutId;\n    }\n    if (cleanDto.description && '_id' in cleanDto.description) {\n      const { _id, ...descriptionWithoutId } = cleanDto.description as any;\n      cleanDto.description = descriptionWithoutId;\n    }\n\n    return this.pressMaterialsService.update(id, cleanDto, user.sub);\n  }\n\n  @Delete(':id')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @ApiOperation({ summary: 'Delete press material' })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.NO_CONTENT, description: 'Press material deleted' })\n  async remove(@Param('id') id: string) {\n    await this.pressMaterialsService.remove(id);\n    return { message: 'Press material deleted successfully' };\n  }\n\n  @Post('upload')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.SUPER_ADMIN, UserRole.PRODUCER)\n  @UseInterceptors(FileInterceptor('file', multerConfig))\n  @Throttle({ default: { limit: 5, ttl: 60000 } }) // 5 uploads per minute\n  @ApiOperation({ summary: 'Upload file to S3' })\n  @ApiBearerAuth()\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      required: ['file', 'materialType'],\n      properties: {\n        file: {\n          type: 'string',\n          format: 'binary',\n        },\n        materialType: {\n          type: 'string',\n          enum: ['press_kit', 'logo_package', 'photo', 'video', 'presentation'],\n        },\n      },\n    },\n  })\n  @ApiResponse({ status: HttpStatus.OK, description: 'File uploaded successfully' })\n  async uploadFile(\n    @UploadedFile() file: Express.Multer.File,\n    @Body('materialType') materialType: string,\n    @CurrentUser() user: any,\n  ) {\n    if (!file) {\n      throw new BadRequestException('File is required');\n    }\n\n    return this.pressMaterialsService.uploadFile(file, materialType, user.sub);\n  }\n}\n"],"version":3}