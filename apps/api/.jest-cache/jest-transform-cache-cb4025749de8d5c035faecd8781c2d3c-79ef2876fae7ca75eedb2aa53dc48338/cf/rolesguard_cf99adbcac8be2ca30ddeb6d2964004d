371a9f7f873d22c87464fa633a281e01
"use strict";

/* istanbul ignore next */
function cov_1sj8mwnmm9() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/guards/roles.guard.ts";
  var hash = "874fd960ebb470636b581a9272679866112e091d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/guards/roles.guard.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "15": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "16": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "17": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 66
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "19": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "20": {
        start: {
          line: 22,
          column: 30
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "21": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "22": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "23": {
        start: {
          line: 29,
          column: 25
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "24": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 65
        }
      },
      "25": {
        start: {
          line: 30,
          column: 44
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "26": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 32
        }
      },
      "27": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 37,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 30,
            column: 35
          }
        },
        loc: {
          start: {
            line: 30,
            column: 44
          },
          end: {
            line: 30,
            column: 63
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/guards/roles.guard.ts",
      mappings: ";;;;;;;;;;;;AAAA,2CAA2E;AAC3E,uCAAyC;AAEzC,mEAA0D;AAGnD,IAAM,UAAU,GAAhB,MAAM,UAAU;IACD;IAApB,YAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;IAE5C,WAAW,CAAC,OAAyB;QACnC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAa,2BAAS,EAAE;YAC5E,OAAO,CAAC,UAAU,EAAE;YACpB,OAAO,CAAC,QAAQ,EAAE;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,EAAE,CAAC;YACnB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACrD,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,KAAK,IAAI,CAAC,CAAC;IAC3D,CAAC;CACF,CAAA;AAhBY,gCAAU;qBAAV,UAAU;IADtB,IAAA,mBAAU,GAAE;qCAEoB,gBAAS;GAD7B,UAAU,CAgBtB",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/common/guards/roles.guard.ts"],
      sourcesContent: ["import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { UserRole } from '@shared/types/user.types';\nimport { ROLES_KEY } from '../decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride<UserRole[]>(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user?.role === role);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "874fd960ebb470636b581a9272679866112e091d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1sj8mwnmm9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sj8mwnmm9();
var __decorate =
/* istanbul ignore next */
(cov_1sj8mwnmm9().s[0]++,
/* istanbul ignore next */
(cov_1sj8mwnmm9().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1sj8mwnmm9().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_1sj8mwnmm9().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_1sj8mwnmm9().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_1sj8mwnmm9().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_1sj8mwnmm9().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_1sj8mwnmm9().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_1sj8mwnmm9().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_1sj8mwnmm9().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_1sj8mwnmm9().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_1sj8mwnmm9().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_1sj8mwnmm9().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1sj8mwnmm9().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_1sj8mwnmm9().b[3][0]++;
    cov_1sj8mwnmm9().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_1sj8mwnmm9().b[3][1]++;
    cov_1sj8mwnmm9().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_1sj8mwnmm9().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_1sj8mwnmm9().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_1sj8mwnmm9().b[5][0]++;
        cov_1sj8mwnmm9().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_1sj8mwnmm9().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_1sj8mwnmm9().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_1sj8mwnmm9().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_1sj8mwnmm9().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_1sj8mwnmm9().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_1sj8mwnmm9().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_1sj8mwnmm9().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1sj8mwnmm9().s[9]++;
  return /* istanbul ignore next */(cov_1sj8mwnmm9().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_1sj8mwnmm9().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_1sj8mwnmm9().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_1sj8mwnmm9().s[10]++,
/* istanbul ignore next */
(cov_1sj8mwnmm9().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1sj8mwnmm9().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_1sj8mwnmm9().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_1sj8mwnmm9().f[1]++;
  cov_1sj8mwnmm9().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1sj8mwnmm9().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1sj8mwnmm9().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_1sj8mwnmm9().b[11][0]++;
    cov_1sj8mwnmm9().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_1sj8mwnmm9().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_1sj8mwnmm9().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1sj8mwnmm9().s[14]++;
exports.RolesGuard = void 0;
const common_1 =
/* istanbul ignore next */
(cov_1sj8mwnmm9().s[15]++, require("@nestjs/common"));
const core_1 =
/* istanbul ignore next */
(cov_1sj8mwnmm9().s[16]++, require("@nestjs/core"));
const roles_decorator_1 =
/* istanbul ignore next */
(cov_1sj8mwnmm9().s[17]++, require("../decorators/roles.decorator"));
/* istanbul ignore next */
cov_1sj8mwnmm9().s[18]++;
let RolesGuard = class RolesGuard {
  reflector;
  constructor(reflector) {
    /* istanbul ignore next */
    cov_1sj8mwnmm9().f[2]++;
    cov_1sj8mwnmm9().s[19]++;
    this.reflector = reflector;
  }
  canActivate(context) {
    /* istanbul ignore next */
    cov_1sj8mwnmm9().f[3]++;
    const requiredRoles =
    /* istanbul ignore next */
    (cov_1sj8mwnmm9().s[20]++, this.reflector.getAllAndOverride(roles_decorator_1.ROLES_KEY, [context.getHandler(), context.getClass()]));
    /* istanbul ignore next */
    cov_1sj8mwnmm9().s[21]++;
    if (!requiredRoles) {
      /* istanbul ignore next */
      cov_1sj8mwnmm9().b[13][0]++;
      cov_1sj8mwnmm9().s[22]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1sj8mwnmm9().b[13][1]++;
    }
    const {
      user
    } =
    /* istanbul ignore next */
    (cov_1sj8mwnmm9().s[23]++, context.switchToHttp().getRequest());
    /* istanbul ignore next */
    cov_1sj8mwnmm9().s[24]++;
    return requiredRoles.some(role => {
      /* istanbul ignore next */
      cov_1sj8mwnmm9().f[4]++;
      cov_1sj8mwnmm9().s[25]++;
      return user?.role === role;
    });
  }
};
/* istanbul ignore next */
cov_1sj8mwnmm9().s[26]++;
exports.RolesGuard = RolesGuard;
/* istanbul ignore next */
cov_1sj8mwnmm9().s[27]++;
exports.RolesGuard = RolesGuard = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [core_1.Reflector])], RolesGuard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXNqOG13bm1tOSIsImFjdHVhbENvdmVyYWdlIiwiY29tbW9uXzEiLCJzIiwicmVxdWlyZSIsImNvcmVfMSIsInJvbGVzX2RlY29yYXRvcl8xIiwiUm9sZXNHdWFyZCIsInJlZmxlY3RvciIsImNvbnN0cnVjdG9yIiwiZiIsImNhbkFjdGl2YXRlIiwiY29udGV4dCIsInJlcXVpcmVkUm9sZXMiLCJnZXRBbGxBbmRPdmVycmlkZSIsIlJPTEVTX0tFWSIsImdldEhhbmRsZXIiLCJnZXRDbGFzcyIsImIiLCJ1c2VyIiwic3dpdGNoVG9IdHRwIiwiZ2V0UmVxdWVzdCIsInNvbWUiLCJyb2xlIiwiZXhwb3J0cyIsIl9fZGVjb3JhdGUiLCJJbmplY3RhYmxlIiwiUmVmbGVjdG9yIl0sInNvdXJjZXMiOlsiL2hvbWUvbHVpc25ldG85OC9Eb2N1bWVudG9zL0NvZGUvbW9ub3JlcG8tdnRleC9hcHBzL2FwaS9zcmMvY29tbW9uL2d1YXJkcy9yb2xlcy5ndWFyZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBDYW5BY3RpdmF0ZSwgRXhlY3V0aW9uQ29udGV4dCB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcbmltcG9ydCB7IFJlZmxlY3RvciB9IGZyb20gJ0BuZXN0anMvY29yZSc7XG5pbXBvcnQgeyBVc2VyUm9sZSB9IGZyb20gJ0BzaGFyZWQvdHlwZXMvdXNlci50eXBlcyc7XG5pbXBvcnQgeyBST0xFU19LRVkgfSBmcm9tICcuLi9kZWNvcmF0b3JzL3JvbGVzLmRlY29yYXRvcic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBSb2xlc0d1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlZmxlY3RvcjogUmVmbGVjdG9yKSB7fVxuXG4gIGNhbkFjdGl2YXRlKGNvbnRleHQ6IEV4ZWN1dGlvbkNvbnRleHQpOiBib29sZWFuIHtcbiAgICBjb25zdCByZXF1aXJlZFJvbGVzID0gdGhpcy5yZWZsZWN0b3IuZ2V0QWxsQW5kT3ZlcnJpZGU8VXNlclJvbGVbXT4oUk9MRVNfS0VZLCBbXG4gICAgICBjb250ZXh0LmdldEhhbmRsZXIoKSxcbiAgICAgIGNvbnRleHQuZ2V0Q2xhc3MoKSxcbiAgICBdKTtcblxuICAgIGlmICghcmVxdWlyZWRSb2xlcykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgY29uc3QgeyB1c2VyIH0gPSBjb250ZXh0LnN3aXRjaFRvSHR0cCgpLmdldFJlcXVlc3QoKTtcbiAgICByZXR1cm4gcmVxdWlyZWRSb2xlcy5zb21lKChyb2xlKSA9PiB1c2VyPy5yb2xlID09PSByb2xlKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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