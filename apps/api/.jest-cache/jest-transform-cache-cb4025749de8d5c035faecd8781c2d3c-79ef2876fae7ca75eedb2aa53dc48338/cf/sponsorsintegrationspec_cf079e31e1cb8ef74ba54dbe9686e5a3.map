{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/tests/integration/sponsors.integration.spec.ts","mappings":"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","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/tests/integration/sponsors.integration.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { INestApplication } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport request from 'supertest';\nimport { SponsorsModule } from '../../src/modules/sponsors/sponsors.module';\nimport { AuthModule } from '../../src/modules/auth/auth.module';\nimport { DatabaseModule } from '../../src/modules/database/database.module';\nimport { JwtService } from '@nestjs/jwt';\n\ndescribe('Sponsors Integration Tests', () => {\n  let app: INestApplication;\n  let jwtService: JwtService;\n  let authToken: string;\n  let sponsorTierId: string;\n\n  const testUser = {\n    _id: '507f1f77bcf86cd799439020',\n    email: 'admin@vtexday.com',\n    role: 'super_admin',\n  };\n\n  const createSponsorTierDto = {\n    name: 'Diamond',\n    description: {\n      'pt-BR': 'Patrocinador Diamante',\n      en: 'Diamond Sponsor',\n    },\n    priority: 1,\n    benefits: ['Logo principal', 'Estande premium'],\n    maxSponsors: 3,\n    price: 50000,\n  };\n\n  const createSponsorDto = {\n    name: 'Tech Corp',\n    description: {\n      'pt-BR': 'Empresa de tecnologia líder',\n      en: 'Leading technology company',\n    },\n    logoUrl: 'https://example.com/logo.png',\n    websiteUrl: 'https://techcorp.com',\n    contactInfo: {\n      email: 'contact@techcorp.com',\n      phone: '+55 11 99999-9999',\n    },\n    socialLinks: {\n      linkedin: 'https://linkedin.com/company/techcorp',\n      twitter: 'https://twitter.com/techcorp',\n    },\n    tags: ['Technology', 'SaaS'],\n  };\n\n  beforeAll(async () => {\n    const moduleFixture: TestingModule = await Test.createTestingModule({\n      imports: [\n        MongooseModule.forRoot(\n          process.env['MONGODB_TEST_URI'] || 'mongodb://localhost:27017/vtex-day-test',\n        ),\n        DatabaseModule,\n        AuthModule,\n        SponsorsModule,\n      ],\n    }).compile();\n\n    app = moduleFixture.createNestApplication();\n    jwtService = moduleFixture.get<JwtService>(JwtService);\n\n    authToken = jwtService.sign({\n      sub: testUser._id,\n      email: testUser.email,\n      role: testUser.role,\n    });\n\n    await app.init();\n\n    // Create a sponsor tier for testing\n    const tierResponse = await request(app.getHttpServer())\n      .post('/sponsors/tiers')\n      .set('Authorization', `Bearer ${authToken}`)\n      .send(createSponsorTierDto);\n    sponsorTierId = tierResponse.body.data._id;\n  });\n\n  afterAll(async () => {\n    await app.close();\n  });\n\n  describe('Sponsor Tiers', () => {\n    describe('POST /sponsors/tiers', () => {\n      it('should create a new sponsor tier (admin only)', async () => {\n        const tierDto = {\n          name: 'Gold',\n          description: {\n            'pt-BR': 'Patrocinador Ouro',\n            en: 'Gold Sponsor',\n          },\n          priority: 2,\n          benefits: ['Logo médio', 'Estande padrão'],\n          maxSponsors: 5,\n          price: 25000,\n        };\n\n        const response = await request(app.getHttpServer())\n          .post('/sponsors/tiers')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send(tierDto)\n          .expect(201);\n\n        expect(response.body.success).toBe(true);\n        expect(response.body.data).toHaveProperty('_id');\n        expect(response.body.data.name).toBe(tierDto.name);\n        expect(response.body.data.priority).toBe(tierDto.priority);\n        expect(response.body.data.price).toBe(tierDto.price);\n      });\n\n      it('should reject request without authentication', async () => {\n        await request(app.getHttpServer())\n          .post('/sponsors/tiers')\n          .send(createSponsorTierDto)\n          .expect(401);\n      });\n\n      it('should reject duplicate tier names', async () => {\n        await request(app.getHttpServer())\n          .post('/sponsors/tiers')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({\n            ...createSponsorTierDto,\n            name: 'Diamond', // Already exists\n          })\n          .expect(409);\n      });\n    });\n\n    describe('GET /sponsors/tiers', () => {\n      it('should return all sponsor tiers (public endpoint)', async () => {\n        const response = await request(app.getHttpServer()).get('/sponsors/tiers').expect(200);\n\n        expect(response.body.success).toBe(true);\n        expect(Array.isArray(response.body.data)).toBe(true);\n        expect(response.body.data.length).toBeGreaterThan(0);\n      });\n    });\n\n    describe('PATCH /sponsors/tiers/:id', () => {\n      it('should update a sponsor tier (admin only)', async () => {\n        const updateDto = {\n          price: 60000,\n          maxSponsors: 2,\n        };\n\n        const response = await request(app.getHttpServer())\n          .patch(`/sponsors/tiers/${sponsorTierId}`)\n          .set('Authorization', `Bearer ${authToken}`)\n          .send(updateDto)\n          .expect(200);\n\n        expect(response.body.success).toBe(true);\n        expect(response.body.data.price).toBe(updateDto.price);\n        expect(response.body.data.maxSponsors).toBe(updateDto.maxSponsors);\n      });\n\n      it('should reject request without authentication', async () => {\n        await request(app.getHttpServer())\n          .patch(`/sponsors/tiers/${sponsorTierId}`)\n          .send({ price: 70000 })\n          .expect(401);\n      });\n    });\n  });\n\n  describe('Sponsors', () => {\n    describe('GET /sponsors', () => {\n      it('should return sponsors grouped by tier (public endpoint)', async () => {\n        const response = await request(app.getHttpServer()).get('/sponsors').expect(200);\n\n        expect(response.body.success).toBe(true);\n        expect(Array.isArray(response.body.data)).toBe(true);\n      });\n\n      it('should apply tier filter correctly', async () => {\n        const response = await request(app.getHttpServer())\n          .get(`/sponsors?tier=${sponsorTierId}`)\n          .expect(200);\n\n        expect(response.body.success).toBe(true);\n      });\n\n      it('should apply tags filter correctly', async () => {\n        const response = await request(app.getHttpServer())\n          .get('/sponsors?tags=Technology,SaaS')\n          .expect(200);\n\n        expect(response.body.success).toBe(true);\n      });\n    });\n\n    describe('POST /sponsors', () => {\n      it('should create a new sponsor (admin only)', async () => {\n        const sponsorDto = {\n          ...createSponsorDto,\n          tier: sponsorTierId,\n        };\n\n        const response = await request(app.getHttpServer())\n          .post('/sponsors')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send(sponsorDto)\n          .expect(201);\n\n        expect(response.body.success).toBe(true);\n        expect(response.body.data).toHaveProperty('_id');\n        expect(response.body.data.name).toBe(sponsorDto.name);\n        expect(response.body.data.tier).toBe(sponsorDto.tier);\n        expect(response.body.data.websiteUrl).toBe(sponsorDto.websiteUrl);\n      });\n\n      it('should reject request without authentication', async () => {\n        await request(app.getHttpServer())\n          .post('/sponsors')\n          .send({\n            ...createSponsorDto,\n            tier: sponsorTierId,\n          })\n          .expect(401);\n      });\n\n      it('should validate required fields', async () => {\n        const invalidDto = {\n          name: '', // Empty name\n          tier: sponsorTierId,\n        };\n\n        await request(app.getHttpServer())\n          .post('/sponsors')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send(invalidDto)\n          .expect(400);\n      });\n\n      it('should reject invalid tier', async () => {\n        await request(app.getHttpServer())\n          .post('/sponsors')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({\n            ...createSponsorDto,\n            tier: '507f1f77bcf86cd799439999', // Non-existent tier\n          })\n          .expect(404);\n      });\n\n      it('should reject duplicate sponsor names', async () => {\n        await request(app.getHttpServer())\n          .post('/sponsors')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({\n            ...createSponsorDto,\n            name: 'Tech Corp', // Already exists\n            tier: sponsorTierId,\n          })\n          .expect(409);\n      });\n    });\n\n    describe('GET /sponsors/:id', () => {\n      let sponsorId: string;\n\n      beforeAll(async () => {\n        const response = await request(app.getHttpServer())\n          .post('/sponsors')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({\n            ...createSponsorDto,\n            name: 'Sponsor For Detail Test',\n            tier: sponsorTierId,\n          });\n        sponsorId = response.body.data._id;\n      });\n\n      it('should return sponsor details by id (public endpoint)', async () => {\n        const response = await request(app.getHttpServer())\n          .get(`/sponsors/${sponsorId}`)\n          .expect(200);\n\n        expect(response.body.success).toBe(true);\n        expect(response.body.data).toHaveProperty('_id', sponsorId);\n        expect(response.body.data).toHaveProperty('name');\n        expect(response.body.data).toHaveProperty('description');\n        expect(response.body.data).toHaveProperty('tier');\n        expect(response.body.data).toHaveProperty('contactInfo');\n      });\n\n      it('should return 404 for non-existent sponsor', async () => {\n        await request(app.getHttpServer()).get('/sponsors/507f1f77bcf86cd799439999').expect(404);\n      });\n    });\n\n    describe('PATCH /sponsors/:id', () => {\n      let sponsorId: string;\n\n      beforeAll(async () => {\n        const response = await request(app.getHttpServer())\n          .post('/sponsors')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({\n            ...createSponsorDto,\n            name: 'Sponsor For Update Test',\n            tier: sponsorTierId,\n          });\n        sponsorId = response.body.data._id;\n      });\n\n      it('should update sponsor (admin only)', async () => {\n        const updateDto = {\n          websiteUrl: 'https://newtechcorp.com',\n          tags: ['Updated', 'Technology'],\n        };\n\n        const response = await request(app.getHttpServer())\n          .patch(`/sponsors/${sponsorId}`)\n          .set('Authorization', `Bearer ${authToken}`)\n          .send(updateDto)\n          .expect(200);\n\n        expect(response.body.success).toBe(true);\n        expect(response.body.data.websiteUrl).toBe(updateDto.websiteUrl);\n        expect(response.body.data.tags).toEqual(updateDto.tags);\n      });\n\n      it('should reject request without authentication', async () => {\n        await request(app.getHttpServer())\n          .patch(`/sponsors/${sponsorId}`)\n          .send({ websiteUrl: 'https://unauthorized.com' })\n          .expect(401);\n      });\n\n      it('should return 404 for non-existent sponsor', async () => {\n        await request(app.getHttpServer())\n          .patch('/sponsors/507f1f77bcf86cd799439999')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({ websiteUrl: 'https://notfound.com' })\n          .expect(404);\n      });\n    });\n\n    describe('DELETE /sponsors/:id', () => {\n      let sponsorId: string;\n\n      beforeAll(async () => {\n        const response = await request(app.getHttpServer())\n          .post('/sponsors')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({\n            ...createSponsorDto,\n            name: 'Sponsor For Delete Test',\n            tier: sponsorTierId,\n          });\n        sponsorId = response.body.data._id;\n      });\n\n      it('should soft delete sponsor (admin only)', async () => {\n        const response = await request(app.getHttpServer())\n          .delete(`/sponsors/${sponsorId}`)\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({ reason: 'Test deletion' })\n          .expect(200);\n\n        expect(response.body.success).toBe(true);\n\n        // Verify sponsor is no longer accessible via public endpoint\n        await request(app.getHttpServer()).get(`/sponsors/${sponsorId}`).expect(404);\n      });\n\n      it('should reject request without authentication', async () => {\n        await request(app.getHttpServer()).delete(`/sponsors/${sponsorId}`).expect(401);\n      });\n\n      it('should return 404 for non-existent sponsor', async () => {\n        await request(app.getHttpServer())\n          .delete('/sponsors/507f1f77bcf86cd799439999')\n          .set('Authorization', `Bearer ${authToken}`)\n          .expect(404);\n      });\n    });\n\n    describe('POST /sponsors/:id/restore', () => {\n      let sponsorId: string;\n\n      beforeAll(async () => {\n        // Create and delete a sponsor\n        const createResponse = await request(app.getHttpServer())\n          .post('/sponsors')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({\n            ...createSponsorDto,\n            name: 'Sponsor For Restore Test',\n            tier: sponsorTierId,\n          });\n        sponsorId = createResponse.body.data._id;\n\n        await request(app.getHttpServer())\n          .delete(`/sponsors/${sponsorId}`)\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({ reason: 'Test for restoration' });\n      });\n\n      it('should restore soft-deleted sponsor (admin only)', async () => {\n        const response = await request(app.getHttpServer())\n          .post(`/sponsors/${sponsorId}/restore`)\n          .set('Authorization', `Bearer ${authToken}`)\n          .expect(200);\n\n        expect(response.body.success).toBe(true);\n\n        // Verify sponsor is accessible again via public endpoint\n        await request(app.getHttpServer()).get(`/sponsors/${sponsorId}`).expect(200);\n      });\n\n      it('should reject request without authentication', async () => {\n        await request(app.getHttpServer()).post(`/sponsors/${sponsorId}/restore`).expect(401);\n      });\n    });\n\n    describe('GET /sponsors/by-tier', () => {\n      beforeAll(async () => {\n        // Create sponsor with tier association\n        await request(app.getHttpServer())\n          .post('/sponsors')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({\n            ...createSponsorDto,\n            name: 'Sponsor By Tier Test',\n            tier: sponsorTierId,\n          });\n      });\n\n      it('should return sponsors grouped by tier (public endpoint)', async () => {\n        const response = await request(app.getHttpServer()).get('/sponsors/by-tier').expect(200);\n\n        expect(response.body.success).toBe(true);\n        expect(Array.isArray(response.body.data)).toBe(true);\n\n        // Check structure of grouped data\n        if (response.body.data.length > 0) {\n          expect(response.body.data[0]).toHaveProperty('_id');\n          expect(response.body.data[0]).toHaveProperty('tier');\n          expect(response.body.data[0]).toHaveProperty('sponsors');\n          expect(Array.isArray(response.body.data[0].sponsors)).toBe(true);\n        }\n      });\n    });\n\n    describe('DELETE /sponsors/tiers/:id', () => {\n      let emptyTierId: string;\n\n      beforeAll(async () => {\n        // Create a tier without sponsors\n        const response = await request(app.getHttpServer())\n          .post('/sponsors/tiers')\n          .set('Authorization', `Bearer ${authToken}`)\n          .send({\n            name: 'Empty Tier',\n            description: {\n              'pt-BR': 'Nível vazio',\n              en: 'Empty tier',\n            },\n            priority: 10,\n            benefits: ['Test benefit'],\n            maxSponsors: 1,\n            price: 1000,\n          });\n        emptyTierId = response.body.data._id;\n      });\n\n      it('should delete empty sponsor tier (admin only)', async () => {\n        const response = await request(app.getHttpServer())\n          .delete(`/sponsors/tiers/${emptyTierId}`)\n          .set('Authorization', `Bearer ${authToken}`)\n          .expect(200);\n\n        expect(response.body.success).toBe(true);\n      });\n\n      it('should reject deletion of tier with sponsors', async () => {\n        await request(app.getHttpServer())\n          .delete(`/sponsors/tiers/${sponsorTierId}`)\n          .set('Authorization', `Bearer ${authToken}`)\n          .expect(409);\n      });\n\n      it('should reject request without authentication', async () => {\n        await request(app.getHttpServer()).delete(`/sponsors/tiers/${emptyTierId}`).expect(401);\n      });\n    });\n  });\n});\n"],"version":3}