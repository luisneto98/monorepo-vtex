9a33eeac0d2d76bd50621dfd5da5c2d7
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpeakerSchema = exports.Speaker = void 0;
const mongoose_1 = require("@nestjs/mongoose");
const mongoose_2 = require("mongoose");
let SocialLinks = class SocialLinks {
    linkedin;
    twitter;
    github;
    website;
};
__decorate([
    (0, mongoose_1.Prop)({
        match: /^https?:\/\/(www\.)?linkedin\.com\/.+/,
    }),
    __metadata("design:type", String)
], SocialLinks.prototype, "linkedin", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        match: /^https?:\/\/(www\.)?twitter\.com\/.+/,
    }),
    __metadata("design:type", String)
], SocialLinks.prototype, "twitter", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        match: /^https?:\/\/github\.com\/.+/,
    }),
    __metadata("design:type", String)
], SocialLinks.prototype, "github", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        match: /^https?:\/\/.+/,
    }),
    __metadata("design:type", String)
], SocialLinks.prototype, "website", void 0);
SocialLinks = __decorate([
    (0, mongoose_1.Schema)({ _id: false })
], SocialLinks);
let Bio = class Bio {
    'pt-BR';
    'en';
};
__decorate([
    (0, mongoose_1.Prop)({
        required: true,
        minlength: 100,
        maxlength: 500,
        trim: true,
    }),
    __metadata("design:type", String)
], Bio.prototype, "pt-BR", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        required: true,
        minlength: 100,
        maxlength: 500,
        trim: true,
    }),
    __metadata("design:type", String)
], Bio.prototype, "en", void 0);
Bio = __decorate([
    (0, mongoose_1.Schema)({ _id: false })
], Bio);
let Position = class Position {
    'pt-BR';
    'en';
};
__decorate([
    (0, mongoose_1.Prop)({
        required: true,
        trim: true,
        maxlength: 100,
    }),
    __metadata("design:type", String)
], Position.prototype, "pt-BR", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        required: true,
        trim: true,
        maxlength: 100,
    }),
    __metadata("design:type", String)
], Position.prototype, "en", void 0);
Position = __decorate([
    (0, mongoose_1.Schema)({ _id: false })
], Position);
let Speaker = class Speaker {
    name;
    bio;
    photoUrl;
    company;
    position;
    socialLinks;
    priority;
    isHighlight;
    isVisible;
    deletedAt;
    deletedBy;
    deleteReason;
    tags;
};
exports.Speaker = Speaker;
__decorate([
    (0, mongoose_1.Prop)({
        required: true,
        minlength: 3,
        maxlength: 100,
        trim: true,
    }),
    __metadata("design:type", String)
], Speaker.prototype, "name", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        type: Bio,
        required: true,
    }),
    __metadata("design:type", Object)
], Speaker.prototype, "bio", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        required: true,
        match: /^https?:\/\/.+/,
    }),
    __metadata("design:type", String)
], Speaker.prototype, "photoUrl", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        required: true,
        maxlength: 100,
        trim: true,
    }),
    __metadata("design:type", String)
], Speaker.prototype, "company", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        type: Position,
        required: true,
    }),
    __metadata("design:type", Object)
], Speaker.prototype, "position", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        type: SocialLinks,
        default: {},
    }),
    __metadata("design:type", Object)
], Speaker.prototype, "socialLinks", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        default: 100,
        min: 0,
    }),
    __metadata("design:type", Number)
], Speaker.prototype, "priority", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        default: false,
    }),
    __metadata("design:type", Boolean)
], Speaker.prototype, "isHighlight", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        default: true,
        index: true,
    }),
    __metadata("design:type", Boolean)
], Speaker.prototype, "isVisible", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        type: Date,
        default: null,
    }),
    __metadata("design:type", Date)
], Speaker.prototype, "deletedAt", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        type: mongoose_2.Schema.Types.ObjectId,
        ref: 'User',
    }),
    __metadata("design:type", mongoose_2.Schema.Types.ObjectId)
], Speaker.prototype, "deletedBy", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        type: String,
    }),
    __metadata("design:type", String)
], Speaker.prototype, "deleteReason", void 0);
__decorate([
    (0, mongoose_1.Prop)({
        type: [String],
        default: [],
    }),
    __metadata("design:type", Array)
], Speaker.prototype, "tags", void 0);
exports.Speaker = Speaker = __decorate([
    (0, mongoose_1.Schema)({ timestamps: true, collection: 'Speaker' })
], Speaker);
exports.SpeakerSchema = mongoose_1.SchemaFactory.createForClass(Speaker);
// Indexes
exports.SpeakerSchema.index({ name: 'text' });
exports.SpeakerSchema.index({ isVisible: 1, priority: 1 });
exports.SpeakerSchema.index({ isHighlight: 1 });
exports.SpeakerSchema.index({ company: 1 });
exports.SpeakerSchema.index({ priority: 1 });
exports.SpeakerSchema.index({ deletedAt: 1 });
exports.SpeakerSchema.index({ tags: 1 });
// Pre-save middleware for data normalization
exports.SpeakerSchema.pre('save', function (next) {
    if (this.name) {
        this.name = this.name.trim();
    }
    if (this.company) {
        this.company = this.company.trim();
    }
    if (this.bio) {
        if (this.bio['pt-BR']) {
            this.bio['pt-BR'] = this.bio['pt-BR'].trim();
        }
        if (this.bio['en']) {
            this.bio['en'] = this.bio['en'].trim();
        }
    }
    if (this.position) {
        if (this.position['pt-BR']) {
            this.position['pt-BR'] = this.position['pt-BR'].trim();
        }
        if (this.position['en']) {
            this.position['en'] = this.position['en'].trim();
        }
    }
    next();
});
// Virtual fields
exports.SpeakerSchema.virtual('displayPriority').get(function () {
    return this.isHighlight ? 0 : this.priority;
});
// Schema methods
exports.SpeakerSchema.methods['getLocalizedBio'] = function (language) {
    return this['bio'][language] || this['bio']['pt-BR'];
};
exports.SpeakerSchema.methods['getLocalizedPosition'] = function (language) {
    return this['position'][language] || this['position']['pt-BR'];
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,