72a84a858ea81239cee676eebd895ec0
"use strict";

/* istanbul ignore next */
function cov_naamx3bzq() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/event-settings/event-settings.service.ts";
  var hash = "a110dd921b59315ca2f71930b1affffb8d86c7ba";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/event-settings/event-settings.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "17": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 38
        }
      },
      "18": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "19": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "20": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "21": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 20,
          column: 74
        }
      },
      "22": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 56
        }
      },
      "23": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 42
        }
      },
      "24": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 191,
          column: 1
        }
      },
      "25": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 61
        }
      },
      "26": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 39
        }
      },
      "27": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 22
        }
      },
      "28": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "29": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "30": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "31": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 73
        }
      },
      "32": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "33": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "34": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 39
        }
      },
      "35": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 69
        }
      },
      "36": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 24
        }
      },
      "37": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "38": {
        start: {
          line: 50,
          column: 27
        },
        end: {
          line: 50,
          column: 70
        }
      },
      "39": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "40": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 30
        }
      },
      "41": {
        start: {
          line: 54,
          column: 29
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "42": {
        start: {
          line: 56,
          column: 35
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "43": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 88
        }
      },
      "44": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 34
        }
      },
      "45": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 76
        }
      },
      "46": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "47": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "48": {
        start: {
          line: 82,
          column: 37
        },
        end: {
          line: 82,
          column: 83
        }
      },
      "49": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "50": {
        start: {
          line: 85,
          column: 34
        },
        end: {
          line: 85,
          column: 63
        }
      },
      "51": {
        start: {
          line: 86,
          column: 32
        },
        end: {
          line: 86,
          column: 59
        }
      },
      "52": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 89,
          column: 17
        }
      },
      "53": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 96
        }
      },
      "54": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 102,
          column: 23
        }
      },
      "55": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 56
        }
      },
      "56": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "57": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 67
        }
      },
      "58": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "59": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 132
        }
      },
      "60": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "61": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 110
        }
      },
      "62": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 39
        }
      },
      "63": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 70
        }
      },
      "64": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 24
        }
      },
      "65": {
        start: {
          line: 131,
          column: 24
        },
        end: {
          line: 131,
          column: 26
        }
      },
      "66": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "67": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 53
        }
      },
      "68": {
        start: {
          line: 135,
          column: 30
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "69": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "70": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "71": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 149,
          column: 18
        }
      },
      "72": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 23
        }
      },
      "73": {
        start: {
          line: 155,
          column: 32
        },
        end: {
          line: 188,
          column: 10
        }
      },
      "74": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 44
        }
      },
      "75": {
        start: {
          line: 192,
          column: 0
        },
        end: {
          line: 192,
          column: 52
        }
      },
      "76": {
        start: {
          line: 193,
          column: 0
        },
        end: {
          line: 198,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 44
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 37
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 130
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 34
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 154
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "14": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "15": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "16": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "17": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 35
          }
        }, {
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 84,
            column: 56
          }
        }],
        line: 84
      },
      "18": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "19": {
        loc: {
          start: {
            line: 107,
            column: 24
          },
          end: {
            line: 107,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 43
          },
          end: {
            line: 107,
            column: 51
          }
        }, {
          start: {
            line: 107,
            column: 54
          },
          end: {
            line: 107,
            column: 62
          }
        }],
        line: 107
      },
      "20": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "21": {
        loc: {
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 117,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 117,
            column: 35
          }
        }, {
          start: {
            line: 117,
            column: 39
          },
          end: {
            line: 117,
            column: 56
          }
        }],
        line: 117
      },
      "22": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "23": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "24": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/event-settings/event-settings.service.ts",
      mappings: "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",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/event-settings/event-settings.service.ts"],
      sourcesContent: ["import { Injectable, BadRequestException, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { EventSettings, EventSettingsDocument } from './schemas/event-settings.schema';\nimport { UpdateEventSettingsDto } from './dto/update-event-settings.dto';\nimport { IEventSettings } from './interfaces/event-settings.interface';\nimport { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { Inject } from '@nestjs/common';\nimport { Cache } from 'cache-manager';\n\n@Injectable()\nexport class EventSettingsService {\n  private readonly logger = new Logger(EventSettingsService.name);\n  private readonly CACHE_KEY = 'event-settings:public';\n  private readonly CACHE_TTL = 300000; // 5 minutes in milliseconds\n\n  constructor(\n    @InjectModel(EventSettings.name)\n    private eventSettingsModel: Model<EventSettingsDocument>,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache,\n  ) {}\n\n  async getSettings(): Promise<IEventSettings> {\n    try {\n      let settings = await this.eventSettingsModel.findOne().exec();\n\n      if (!settings) {\n        // Create default settings if none exist\n        settings = await this.createDefaultSettings();\n      }\n\n      return settings.toObject() as IEventSettings;\n    } catch (error) {\n      this.logger.error('Error getting event settings', error);\n      throw error;\n    }\n  }\n\n  async getPublicSettings(): Promise<IEventSettings> {\n    try {\n      // Check cache first\n      const cached = await this.cacheManager.get<IEventSettings>(this.CACHE_KEY);\n      if (cached) {\n        return cached;\n      }\n\n      const settings = await this.getSettings();\n\n      // Sanitize data for public consumption\n      const publicSettings: IEventSettings = {\n        eventName: settings.eventName,\n        startDate: settings.startDate,\n        endDate: settings.endDate,\n        venue: settings.venue,\n        contact: {\n          email: settings.contact.email,\n          phone: settings.contact.phone,\n          whatsapp: settings.contact.whatsapp,\n        },\n        socialMedia: settings.socialMedia,\n        mapCoordinates: settings.mapCoordinates,\n        updatedBy: '', // Don't expose who updated\n      };\n\n      // Cache the result\n      await this.cacheManager.set(this.CACHE_KEY, publicSettings, this.CACHE_TTL);\n\n      return publicSettings;\n    } catch (error) {\n      this.logger.error('Error getting public event settings', error);\n      throw error;\n    }\n  }\n\n  async updateSettings(updateDto: UpdateEventSettingsDto, userId: string): Promise<IEventSettings> {\n    try {\n      // Get previous settings for audit comparison\n      const previousSettings = await this.eventSettingsModel.findOne().exec();\n\n      // Validate dates if both are provided\n      if (updateDto.startDate && updateDto.endDate) {\n        const startDate = new Date(updateDto.startDate);\n        const endDate = new Date(updateDto.endDate);\n\n        if (endDate <= startDate) {\n          throw new BadRequestException('End date must be after start date');\n        }\n      }\n\n      // Use findOneAndUpdate with upsert to ensure singleton pattern\n      const settings = await this.eventSettingsModel\n        .findOneAndUpdate(\n          {},\n          {\n            ...updateDto,\n            updatedBy: userId,\n            updatedAt: new Date(),\n          },\n          {\n            new: true,\n            upsert: true,\n            runValidators: true,\n          },\n        )\n        .exec();\n\n      // Clear cache when settings are updated\n      await this.cacheManager.del(this.CACHE_KEY);\n\n      // Enhanced audit logging\n      const auditLog = {\n        action: previousSettings ? 'UPDATE' : 'CREATE',\n        entityType: 'EventSettings',\n        entityId: settings._id,\n        userId,\n        timestamp: new Date().toISOString(),\n        changes: this.getChangedFields(previousSettings, settings),\n        ipAddress: 'Not captured - consider adding from request context',\n      };\n\n      this.logger.log('Event Settings Audit Log:', auditLog);\n\n      // Log specific important changes\n      if (updateDto.startDate || updateDto.endDate) {\n        this.logger.warn(\n          `Event dates changed by user ${userId}: Start: ${updateDto.startDate}, End: ${updateDto.endDate}`,\n        );\n      }\n\n      if (updateDto.venue) {\n        this.logger.warn(\n          `Event venue changed by user ${userId}: ${JSON.stringify(updateDto.venue)}`,\n        );\n      }\n\n      return settings.toObject() as IEventSettings;\n    } catch (error) {\n      this.logger.error('Error updating event settings', error);\n      throw error;\n    }\n  }\n\n  private getChangedFields(oldDoc: any, newDoc: any): Record<string, any> {\n    const changes: Record<string, any> = {};\n\n    if (!oldDoc) {\n      return { allFields: 'Initial creation' };\n    }\n\n    const fieldsToCheck = [\n      'eventName',\n      'startDate',\n      'endDate',\n      'venue',\n      'contact',\n      'socialMedia',\n      'mapCoordinates',\n    ];\n\n    for (const field of fieldsToCheck) {\n      if (JSON.stringify(oldDoc[field]) !== JSON.stringify(newDoc[field])) {\n        changes[field] = {\n          old: oldDoc[field],\n          new: newDoc[field],\n        };\n      }\n    }\n\n    return changes;\n  }\n\n  private async createDefaultSettings(): Promise<any> {\n    const defaultSettings = new this.eventSettingsModel({\n      eventName: {\n        pt: 'VTEX Day 2026',\n        en: 'VTEX Day 2026',\n        es: 'VTEX Day 2026',\n      },\n      startDate: new Date('2026-06-01T09:00:00Z'),\n      endDate: new Date('2026-06-03T18:00:00Z'),\n      venue: {\n        name: 'S\xE3o Paulo Expo',\n        address: 'Rodovia dos Imigrantes, km 1,5',\n        city: 'S\xE3o Paulo',\n        state: 'SP',\n        zipCode: '04329-100',\n        complement: '\xC1gua Funda',\n      },\n      contact: {\n        email: 'contato@vtexday.com.br',\n        phone: '+55 11 9999-9999',\n        whatsapp: '+55 11 9999-9999',\n      },\n      socialMedia: {\n        instagram: 'https://instagram.com/vtexday',\n        facebook: 'https://facebook.com/vtexday',\n        linkedin: 'https://linkedin.com/company/vtexday',\n        twitter: 'https://twitter.com/vtexday',\n        youtube: 'https://youtube.com/vtexday',\n      },\n      mapCoordinates: {\n        latitude: -23.6283,\n        longitude: -46.6409,\n      },\n      updatedBy: 'system',\n    });\n\n    return await defaultSettings.save();\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a110dd921b59315ca2f71930b1affffb8d86c7ba"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_naamx3bzq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_naamx3bzq();
var __decorate =
/* istanbul ignore next */
(cov_naamx3bzq().s[0]++,
/* istanbul ignore next */
(cov_naamx3bzq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_naamx3bzq().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_naamx3bzq().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_naamx3bzq().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_naamx3bzq().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_naamx3bzq().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_naamx3bzq().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_naamx3bzq().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_naamx3bzq().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_naamx3bzq().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_naamx3bzq().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_naamx3bzq().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_naamx3bzq().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_naamx3bzq().b[3][0]++;
    cov_naamx3bzq().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_naamx3bzq().b[3][1]++;
    cov_naamx3bzq().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_naamx3bzq().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_naamx3bzq().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_naamx3bzq().b[5][0]++;
        cov_naamx3bzq().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_naamx3bzq().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_naamx3bzq().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_naamx3bzq().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_naamx3bzq().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_naamx3bzq().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_naamx3bzq().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_naamx3bzq().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_naamx3bzq().s[9]++;
  return /* istanbul ignore next */(cov_naamx3bzq().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_naamx3bzq().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_naamx3bzq().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_naamx3bzq().s[10]++,
/* istanbul ignore next */
(cov_naamx3bzq().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_naamx3bzq().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_naamx3bzq().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_naamx3bzq().f[1]++;
  cov_naamx3bzq().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_naamx3bzq().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_naamx3bzq().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_naamx3bzq().b[11][0]++;
    cov_naamx3bzq().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_naamx3bzq().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_naamx3bzq().s[13]++,
/* istanbul ignore next */
(cov_naamx3bzq().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_naamx3bzq().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_naamx3bzq().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_naamx3bzq().f[2]++;
  cov_naamx3bzq().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_naamx3bzq().f[3]++;
    cov_naamx3bzq().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
var EventSettingsService_1;
/* istanbul ignore next */
cov_naamx3bzq().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_naamx3bzq().s[17]++;
exports.EventSettingsService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_naamx3bzq().s[18]++, require("@nestjs/common"));
const mongoose_1 =
/* istanbul ignore next */
(cov_naamx3bzq().s[19]++, require("@nestjs/mongoose"));
const mongoose_2 =
/* istanbul ignore next */
(cov_naamx3bzq().s[20]++, require("mongoose"));
const event_settings_schema_1 =
/* istanbul ignore next */
(cov_naamx3bzq().s[21]++, require("./schemas/event-settings.schema"));
const cache_manager_1 =
/* istanbul ignore next */
(cov_naamx3bzq().s[22]++, require("@nestjs/cache-manager"));
const common_2 =
/* istanbul ignore next */
(cov_naamx3bzq().s[23]++, require("@nestjs/common"));
let EventSettingsService =
/* istanbul ignore next */
(cov_naamx3bzq().s[24]++, EventSettingsService_1 = class EventSettingsService {
  eventSettingsModel;
  cacheManager;
  logger =
  /* istanbul ignore next */
  (cov_naamx3bzq().s[25]++, new common_1.Logger(EventSettingsService_1.name));
  CACHE_KEY =
  /* istanbul ignore next */
  (cov_naamx3bzq().s[26]++, 'event-settings:public');
  CACHE_TTL =
  /* istanbul ignore next */
  (cov_naamx3bzq().s[27]++, 300000); // 5 minutes in milliseconds
  constructor(eventSettingsModel, cacheManager) {
    /* istanbul ignore next */
    cov_naamx3bzq().f[4]++;
    cov_naamx3bzq().s[28]++;
    this.eventSettingsModel = eventSettingsModel;
    /* istanbul ignore next */
    cov_naamx3bzq().s[29]++;
    this.cacheManager = cacheManager;
  }
  async getSettings() {
    /* istanbul ignore next */
    cov_naamx3bzq().f[5]++;
    cov_naamx3bzq().s[30]++;
    try {
      let settings =
      /* istanbul ignore next */
      (cov_naamx3bzq().s[31]++, await this.eventSettingsModel.findOne().exec());
      /* istanbul ignore next */
      cov_naamx3bzq().s[32]++;
      if (!settings) {
        /* istanbul ignore next */
        cov_naamx3bzq().b[14][0]++;
        cov_naamx3bzq().s[33]++;
        // Create default settings if none exist
        settings = await this.createDefaultSettings();
      } else
      /* istanbul ignore next */
      {
        cov_naamx3bzq().b[14][1]++;
      }
      cov_naamx3bzq().s[34]++;
      return settings.toObject();
    } catch (error) {
      /* istanbul ignore next */
      cov_naamx3bzq().s[35]++;
      this.logger.error('Error getting event settings', error);
      /* istanbul ignore next */
      cov_naamx3bzq().s[36]++;
      throw error;
    }
  }
  async getPublicSettings() {
    /* istanbul ignore next */
    cov_naamx3bzq().f[6]++;
    cov_naamx3bzq().s[37]++;
    try {
      // Check cache first
      const cached =
      /* istanbul ignore next */
      (cov_naamx3bzq().s[38]++, await this.cacheManager.get(this.CACHE_KEY));
      /* istanbul ignore next */
      cov_naamx3bzq().s[39]++;
      if (cached) {
        /* istanbul ignore next */
        cov_naamx3bzq().b[15][0]++;
        cov_naamx3bzq().s[40]++;
        return cached;
      } else
      /* istanbul ignore next */
      {
        cov_naamx3bzq().b[15][1]++;
      }
      const settings =
      /* istanbul ignore next */
      (cov_naamx3bzq().s[41]++, await this.getSettings());
      // Sanitize data for public consumption
      const publicSettings =
      /* istanbul ignore next */
      (cov_naamx3bzq().s[42]++, {
        eventName: settings.eventName,
        startDate: settings.startDate,
        endDate: settings.endDate,
        venue: settings.venue,
        contact: {
          email: settings.contact.email,
          phone: settings.contact.phone,
          whatsapp: settings.contact.whatsapp
        },
        socialMedia: settings.socialMedia,
        mapCoordinates: settings.mapCoordinates,
        updatedBy: '' // Don't expose who updated
      });
      // Cache the result
      /* istanbul ignore next */
      cov_naamx3bzq().s[43]++;
      await this.cacheManager.set(this.CACHE_KEY, publicSettings, this.CACHE_TTL);
      /* istanbul ignore next */
      cov_naamx3bzq().s[44]++;
      return publicSettings;
    } catch (error) {
      /* istanbul ignore next */
      cov_naamx3bzq().s[45]++;
      this.logger.error('Error getting public event settings', error);
      /* istanbul ignore next */
      cov_naamx3bzq().s[46]++;
      throw error;
    }
  }
  async updateSettings(updateDto, userId) {
    /* istanbul ignore next */
    cov_naamx3bzq().f[7]++;
    cov_naamx3bzq().s[47]++;
    try {
      // Get previous settings for audit comparison
      const previousSettings =
      /* istanbul ignore next */
      (cov_naamx3bzq().s[48]++, await this.eventSettingsModel.findOne().exec());
      // Validate dates if both are provided
      /* istanbul ignore next */
      cov_naamx3bzq().s[49]++;
      if (
      /* istanbul ignore next */
      (cov_naamx3bzq().b[17][0]++, updateDto.startDate) &&
      /* istanbul ignore next */
      (cov_naamx3bzq().b[17][1]++, updateDto.endDate)) {
        /* istanbul ignore next */
        cov_naamx3bzq().b[16][0]++;
        const startDate =
        /* istanbul ignore next */
        (cov_naamx3bzq().s[50]++, new Date(updateDto.startDate));
        const endDate =
        /* istanbul ignore next */
        (cov_naamx3bzq().s[51]++, new Date(updateDto.endDate));
        /* istanbul ignore next */
        cov_naamx3bzq().s[52]++;
        if (endDate <= startDate) {
          /* istanbul ignore next */
          cov_naamx3bzq().b[18][0]++;
          cov_naamx3bzq().s[53]++;
          throw new common_1.BadRequestException('End date must be after start date');
        } else
        /* istanbul ignore next */
        {
          cov_naamx3bzq().b[18][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_naamx3bzq().b[16][1]++;
      }
      // Use findOneAndUpdate with upsert to ensure singleton pattern
      const settings =
      /* istanbul ignore next */
      (cov_naamx3bzq().s[54]++, await this.eventSettingsModel.findOneAndUpdate({}, {
        ...updateDto,
        updatedBy: userId,
        updatedAt: new Date()
      }, {
        new: true,
        upsert: true,
        runValidators: true
      }).exec());
      // Clear cache when settings are updated
      /* istanbul ignore next */
      cov_naamx3bzq().s[55]++;
      await this.cacheManager.del(this.CACHE_KEY);
      // Enhanced audit logging
      const auditLog =
      /* istanbul ignore next */
      (cov_naamx3bzq().s[56]++, {
        action: previousSettings ?
        /* istanbul ignore next */
        (cov_naamx3bzq().b[19][0]++, 'UPDATE') :
        /* istanbul ignore next */
        (cov_naamx3bzq().b[19][1]++, 'CREATE'),
        entityType: 'EventSettings',
        entityId: settings._id,
        userId,
        timestamp: new Date().toISOString(),
        changes: this.getChangedFields(previousSettings, settings),
        ipAddress: 'Not captured - consider adding from request context'
      });
      /* istanbul ignore next */
      cov_naamx3bzq().s[57]++;
      this.logger.log('Event Settings Audit Log:', auditLog);
      // Log specific important changes
      /* istanbul ignore next */
      cov_naamx3bzq().s[58]++;
      if (
      /* istanbul ignore next */
      (cov_naamx3bzq().b[21][0]++, updateDto.startDate) ||
      /* istanbul ignore next */
      (cov_naamx3bzq().b[21][1]++, updateDto.endDate)) {
        /* istanbul ignore next */
        cov_naamx3bzq().b[20][0]++;
        cov_naamx3bzq().s[59]++;
        this.logger.warn(`Event dates changed by user ${userId}: Start: ${updateDto.startDate}, End: ${updateDto.endDate}`);
      } else
      /* istanbul ignore next */
      {
        cov_naamx3bzq().b[20][1]++;
      }
      cov_naamx3bzq().s[60]++;
      if (updateDto.venue) {
        /* istanbul ignore next */
        cov_naamx3bzq().b[22][0]++;
        cov_naamx3bzq().s[61]++;
        this.logger.warn(`Event venue changed by user ${userId}: ${JSON.stringify(updateDto.venue)}`);
      } else
      /* istanbul ignore next */
      {
        cov_naamx3bzq().b[22][1]++;
      }
      cov_naamx3bzq().s[62]++;
      return settings.toObject();
    } catch (error) {
      /* istanbul ignore next */
      cov_naamx3bzq().s[63]++;
      this.logger.error('Error updating event settings', error);
      /* istanbul ignore next */
      cov_naamx3bzq().s[64]++;
      throw error;
    }
  }
  getChangedFields(oldDoc, newDoc) {
    /* istanbul ignore next */
    cov_naamx3bzq().f[8]++;
    const changes =
    /* istanbul ignore next */
    (cov_naamx3bzq().s[65]++, {});
    /* istanbul ignore next */
    cov_naamx3bzq().s[66]++;
    if (!oldDoc) {
      /* istanbul ignore next */
      cov_naamx3bzq().b[23][0]++;
      cov_naamx3bzq().s[67]++;
      return {
        allFields: 'Initial creation'
      };
    } else
    /* istanbul ignore next */
    {
      cov_naamx3bzq().b[23][1]++;
    }
    const fieldsToCheck =
    /* istanbul ignore next */
    (cov_naamx3bzq().s[68]++, ['eventName', 'startDate', 'endDate', 'venue', 'contact', 'socialMedia', 'mapCoordinates']);
    /* istanbul ignore next */
    cov_naamx3bzq().s[69]++;
    for (const field of fieldsToCheck) {
      /* istanbul ignore next */
      cov_naamx3bzq().s[70]++;
      if (JSON.stringify(oldDoc[field]) !== JSON.stringify(newDoc[field])) {
        /* istanbul ignore next */
        cov_naamx3bzq().b[24][0]++;
        cov_naamx3bzq().s[71]++;
        changes[field] = {
          old: oldDoc[field],
          new: newDoc[field]
        };
      } else
      /* istanbul ignore next */
      {
        cov_naamx3bzq().b[24][1]++;
      }
    }
    /* istanbul ignore next */
    cov_naamx3bzq().s[72]++;
    return changes;
  }
  async createDefaultSettings() {
    /* istanbul ignore next */
    cov_naamx3bzq().f[9]++;
    const defaultSettings =
    /* istanbul ignore next */
    (cov_naamx3bzq().s[73]++, new this.eventSettingsModel({
      eventName: {
        pt: 'VTEX Day 2026',
        en: 'VTEX Day 2026',
        es: 'VTEX Day 2026'
      },
      startDate: new Date('2026-06-01T09:00:00Z'),
      endDate: new Date('2026-06-03T18:00:00Z'),
      venue: {
        name: 'São Paulo Expo',
        address: 'Rodovia dos Imigrantes, km 1,5',
        city: 'São Paulo',
        state: 'SP',
        zipCode: '04329-100',
        complement: 'Água Funda'
      },
      contact: {
        email: 'contato@vtexday.com.br',
        phone: '+55 11 9999-9999',
        whatsapp: '+55 11 9999-9999'
      },
      socialMedia: {
        instagram: 'https://instagram.com/vtexday',
        facebook: 'https://facebook.com/vtexday',
        linkedin: 'https://linkedin.com/company/vtexday',
        twitter: 'https://twitter.com/vtexday',
        youtube: 'https://youtube.com/vtexday'
      },
      mapCoordinates: {
        latitude: -23.6283,
        longitude: -46.6409
      },
      updatedBy: 'system'
    }));
    /* istanbul ignore next */
    cov_naamx3bzq().s[74]++;
    return await defaultSettings.save();
  }
});
/* istanbul ignore next */
cov_naamx3bzq().s[75]++;
exports.EventSettingsService = EventSettingsService;
/* istanbul ignore next */
cov_naamx3bzq().s[76]++;
exports.EventSettingsService = EventSettingsService = EventSettingsService_1 = __decorate([(0, common_1.Injectable)(), __param(0, (0, mongoose_1.InjectModel)(event_settings_schema_1.EventSettings.name)), __param(1, (0, common_2.Inject)(cache_manager_1.CACHE_MANAGER)), __metadata("design:paramtypes", [mongoose_2.Model, Object])], EventSettingsService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,