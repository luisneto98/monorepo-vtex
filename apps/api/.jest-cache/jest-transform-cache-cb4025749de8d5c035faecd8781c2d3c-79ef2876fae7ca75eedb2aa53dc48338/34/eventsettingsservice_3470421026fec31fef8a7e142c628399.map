{"version":3,"names":["common_1","cov_naamx3bzq","s","require","mongoose_1","mongoose_2","event_settings_schema_1","cache_manager_1","common_2","EventSettingsService","EventSettingsService_1","eventSettingsModel","cacheManager","logger","Logger","name","CACHE_KEY","CACHE_TTL","constructor","f","getSettings","settings","findOne","exec","b","createDefaultSettings","toObject","error","getPublicSettings","cached","get","publicSettings","eventName","startDate","endDate","venue","contact","email","phone","whatsapp","socialMedia","mapCoordinates","updatedBy","set","updateSettings","updateDto","userId","previousSettings","Date","BadRequestException","findOneAndUpdate","updatedAt","new","upsert","runValidators","del","auditLog","action","entityType","entityId","_id","timestamp","toISOString","changes","getChangedFields","ipAddress","log","warn","JSON","stringify","oldDoc","newDoc","allFields","fieldsToCheck","field","old","defaultSettings","pt","en","es","address","city","state","zipCode","complement","instagram","facebook","linkedin","twitter","youtube","latitude","longitude","save","exports","__decorate","Injectable","__param","InjectModel","EventSettings","Inject","CACHE_MANAGER","Model","Object"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/event-settings/event-settings.service.ts"],"sourcesContent":["import { Injectable, BadRequestException, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { EventSettings, EventSettingsDocument } from './schemas/event-settings.schema';\nimport { UpdateEventSettingsDto } from './dto/update-event-settings.dto';\nimport { IEventSettings } from './interfaces/event-settings.interface';\nimport { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { Inject } from '@nestjs/common';\nimport { Cache } from 'cache-manager';\n\n@Injectable()\nexport class EventSettingsService {\n  private readonly logger = new Logger(EventSettingsService.name);\n  private readonly CACHE_KEY = 'event-settings:public';\n  private readonly CACHE_TTL = 300000; // 5 minutes in milliseconds\n\n  constructor(\n    @InjectModel(EventSettings.name)\n    private eventSettingsModel: Model<EventSettingsDocument>,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache,\n  ) {}\n\n  async getSettings(): Promise<IEventSettings> {\n    try {\n      let settings = await this.eventSettingsModel.findOne().exec();\n\n      if (!settings) {\n        // Create default settings if none exist\n        settings = await this.createDefaultSettings();\n      }\n\n      return settings.toObject() as IEventSettings;\n    } catch (error) {\n      this.logger.error('Error getting event settings', error);\n      throw error;\n    }\n  }\n\n  async getPublicSettings(): Promise<IEventSettings> {\n    try {\n      // Check cache first\n      const cached = await this.cacheManager.get<IEventSettings>(this.CACHE_KEY);\n      if (cached) {\n        return cached;\n      }\n\n      const settings = await this.getSettings();\n\n      // Sanitize data for public consumption\n      const publicSettings: IEventSettings = {\n        eventName: settings.eventName,\n        startDate: settings.startDate,\n        endDate: settings.endDate,\n        venue: settings.venue,\n        contact: {\n          email: settings.contact.email,\n          phone: settings.contact.phone,\n          whatsapp: settings.contact.whatsapp,\n        },\n        socialMedia: settings.socialMedia,\n        mapCoordinates: settings.mapCoordinates,\n        updatedBy: '', // Don't expose who updated\n      };\n\n      // Cache the result\n      await this.cacheManager.set(this.CACHE_KEY, publicSettings, this.CACHE_TTL);\n\n      return publicSettings;\n    } catch (error) {\n      this.logger.error('Error getting public event settings', error);\n      throw error;\n    }\n  }\n\n  async updateSettings(updateDto: UpdateEventSettingsDto, userId: string): Promise<IEventSettings> {\n    try {\n      // Get previous settings for audit comparison\n      const previousSettings = await this.eventSettingsModel.findOne().exec();\n\n      // Validate dates if both are provided\n      if (updateDto.startDate && updateDto.endDate) {\n        const startDate = new Date(updateDto.startDate);\n        const endDate = new Date(updateDto.endDate);\n\n        if (endDate <= startDate) {\n          throw new BadRequestException('End date must be after start date');\n        }\n      }\n\n      // Use findOneAndUpdate with upsert to ensure singleton pattern\n      const settings = await this.eventSettingsModel\n        .findOneAndUpdate(\n          {},\n          {\n            ...updateDto,\n            updatedBy: userId,\n            updatedAt: new Date(),\n          },\n          {\n            new: true,\n            upsert: true,\n            runValidators: true,\n          },\n        )\n        .exec();\n\n      // Clear cache when settings are updated\n      await this.cacheManager.del(this.CACHE_KEY);\n\n      // Enhanced audit logging\n      const auditLog = {\n        action: previousSettings ? 'UPDATE' : 'CREATE',\n        entityType: 'EventSettings',\n        entityId: settings._id,\n        userId,\n        timestamp: new Date().toISOString(),\n        changes: this.getChangedFields(previousSettings, settings),\n        ipAddress: 'Not captured - consider adding from request context',\n      };\n\n      this.logger.log('Event Settings Audit Log:', auditLog);\n\n      // Log specific important changes\n      if (updateDto.startDate || updateDto.endDate) {\n        this.logger.warn(\n          `Event dates changed by user ${userId}: Start: ${updateDto.startDate}, End: ${updateDto.endDate}`,\n        );\n      }\n\n      if (updateDto.venue) {\n        this.logger.warn(\n          `Event venue changed by user ${userId}: ${JSON.stringify(updateDto.venue)}`,\n        );\n      }\n\n      return settings.toObject() as IEventSettings;\n    } catch (error) {\n      this.logger.error('Error updating event settings', error);\n      throw error;\n    }\n  }\n\n  private getChangedFields(oldDoc: any, newDoc: any): Record<string, any> {\n    const changes: Record<string, any> = {};\n\n    if (!oldDoc) {\n      return { allFields: 'Initial creation' };\n    }\n\n    const fieldsToCheck = [\n      'eventName',\n      'startDate',\n      'endDate',\n      'venue',\n      'contact',\n      'socialMedia',\n      'mapCoordinates',\n    ];\n\n    for (const field of fieldsToCheck) {\n      if (JSON.stringify(oldDoc[field]) !== JSON.stringify(newDoc[field])) {\n        changes[field] = {\n          old: oldDoc[field],\n          new: newDoc[field],\n        };\n      }\n    }\n\n    return changes;\n  }\n\n  private async createDefaultSettings(): Promise<any> {\n    const defaultSettings = new this.eventSettingsModel({\n      eventName: {\n        pt: 'VTEX Day 2026',\n        en: 'VTEX Day 2026',\n        es: 'VTEX Day 2026',\n      },\n      startDate: new Date('2026-06-01T09:00:00Z'),\n      endDate: new Date('2026-06-03T18:00:00Z'),\n      venue: {\n        name: 'São Paulo Expo',\n        address: 'Rodovia dos Imigrantes, km 1,5',\n        city: 'São Paulo',\n        state: 'SP',\n        zipCode: '04329-100',\n        complement: 'Água Funda',\n      },\n      contact: {\n        email: 'contato@vtexday.com.br',\n        phone: '+55 11 9999-9999',\n        whatsapp: '+55 11 9999-9999',\n      },\n      socialMedia: {\n        instagram: 'https://instagram.com/vtexday',\n        facebook: 'https://facebook.com/vtexday',\n        linkedin: 'https://linkedin.com/company/vtexday',\n        twitter: 'https://twitter.com/vtexday',\n        youtube: 'https://youtube.com/vtexday',\n      },\n      mapCoordinates: {\n        latitude: -23.6283,\n        longitude: -46.6409,\n      },\n      updatedBy: 'system',\n    });\n\n    return await defaultSettings.save();\n  }\n}\n"],"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","ignoreList":[]}