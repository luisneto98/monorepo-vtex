{"version":3,"names":["cov_1m7owxfmtb","actualCoverage","common_1","s","require","mongoose_1","mongoose_2","cache_manager_1","system_config_schema_1","visibility_audit_schema_1","SystemConfigService","systemConfigModel","visibilityAuditModel","cacheManager","CACHE_KEY","CACHE_TTL","constructor","f","getConfig","cached","get","b","config","findOne","exec","newConfig","createDefaultConfig","set","toObject","getSectionVisibility","section","sections","updateConfig","updateDto","userId","ipAddress","NotFoundException","version","ConflictException","sectionUpdate","Object","entries","previousState","newState","lastChanged","Date","changedBy","scheduledActivation","dateTime","timezone","createAuditLog","_id","toString","changeReason","lastModifiedBy","updatedConfig","save","del","updateSection","getAuditLogs","page","limit","query","skip","data","total","Promise","all","find","sort","createdAt","countDocuments","totalPages","Math","ceil","getScheduledChanges","scheduledChanges","visibility","scheduledTime","push","willBeVisible","isVisible","applyScheduledChanges","now","hasChanges","undefined","defaultSection","speakers","sponsors","sessions","faq","registration","schedule","configId","auditLog","cleanupAuditLogs","cutoffDate","result","deleteMany","$lt","deletedCount","exports","__decorate","Injectable","__param","InjectModel","SystemConfig","name","VisibilityAudit","Inject","CACHE_MANAGER","Model"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/system-config/system-config.service.ts"],"sourcesContent":["import { Injectable, NotFoundException, ConflictException, Inject } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Cache } from 'cache-manager';\nimport { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { SystemConfig, SystemConfigDocument } from './schemas/system-config.schema';\nimport { VisibilityAudit, VisibilityAuditDocument } from './schemas/visibility-audit.schema';\nimport { UpdateSystemConfigDto } from './dto/update-config.dto';\nimport { UpdateSectionVisibilityDto } from './dto/section-visibility.dto';\nimport type { SectionName } from '@vtexday26/shared';\n\n@Injectable()\nexport class SystemConfigService {\n  private readonly CACHE_KEY = 'system-config';\n  private readonly CACHE_TTL = 60000; // 1 minute in milliseconds\n\n  constructor(\n    @InjectModel(SystemConfig.name)\n    private systemConfigModel: Model<SystemConfigDocument>,\n    @InjectModel(VisibilityAudit.name)\n    private visibilityAuditModel: Model<VisibilityAuditDocument>,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache,\n  ) {}\n\n  async getConfig(): Promise<SystemConfig> {\n    // Try to get from cache first\n    const cached = await this.cacheManager.get<SystemConfig>(this.CACHE_KEY);\n    if (cached) {\n      return cached;\n    }\n\n    // Get from database\n    const config = await this.systemConfigModel.findOne().exec();\n\n    // If no config exists, create default one\n    if (!config) {\n      const newConfig = await this.createDefaultConfig();\n      // Cache the result\n      await this.cacheManager.set(this.CACHE_KEY, newConfig, this.CACHE_TTL);\n      return newConfig.toObject() as SystemConfig;\n    }\n\n    // Cache the result\n    await this.cacheManager.set(this.CACHE_KEY, config, this.CACHE_TTL);\n\n    return config.toObject() as SystemConfig;\n  }\n\n  async getSectionVisibility(section: SectionName): Promise<any> {\n    const config = await this.getConfig();\n    return config.sections[section];\n  }\n\n  async updateConfig(\n    updateDto: UpdateSystemConfigDto,\n    userId: string,\n    ipAddress?: string,\n  ): Promise<SystemConfig> {\n    const config = await this.systemConfigModel.findOne().exec();\n\n    if (!config) {\n      throw new NotFoundException('System configuration not found');\n    }\n\n    // Version check for optimistic locking\n    if (updateDto.version && config.version !== updateDto.version) {\n      throw new ConflictException('Configuration has been modified by another user');\n    }\n\n    // Process section updates and create audit logs\n    if (updateDto.sections) {\n      for (const [section, sectionUpdate] of Object.entries(updateDto.sections)) {\n        if (sectionUpdate) {\n          const previousState = config.sections[section as SectionName];\n          const newState: any = {\n            ...previousState,\n            ...sectionUpdate,\n            lastChanged: new Date(),\n            changedBy: userId,\n          };\n\n          // Convert scheduled activation date if present\n          if (sectionUpdate.scheduledActivation) {\n            newState.scheduledActivation = {\n              dateTime: new Date(sectionUpdate.scheduledActivation.dateTime),\n              timezone: sectionUpdate.scheduledActivation.timezone,\n            };\n          }\n\n          // Create audit log entry\n          await this.createAuditLog(\n            config._id.toString(),\n            section,\n            previousState,\n            newState,\n            userId,\n            sectionUpdate.changeReason,\n            ipAddress,\n          );\n\n          // Update the section\n          config.sections[section as SectionName] = newState;\n        }\n      }\n    }\n\n    // Update metadata\n    config.lastModifiedBy = userId;\n    config.version = config.version + 1;\n\n    // Save changes\n    const updatedConfig = await config.save();\n\n    // Invalidate cache\n    await this.cacheManager.del(this.CACHE_KEY);\n\n    return updatedConfig;\n  }\n\n  async updateSection(\n    section: SectionName,\n    updateDto: UpdateSectionVisibilityDto,\n    userId: string,\n    ipAddress?: string,\n  ): Promise<SystemConfig> {\n    const config = await this.systemConfigModel.findOne().exec();\n\n    if (!config) {\n      throw new NotFoundException('System configuration not found');\n    }\n\n    const previousState = config.sections[section];\n    const newState: any = {\n      ...previousState,\n      ...updateDto,\n      lastChanged: new Date(),\n      changedBy: userId,\n    };\n\n    // Convert scheduled activation date if present\n    if (updateDto.scheduledActivation) {\n      newState.scheduledActivation = {\n        dateTime: new Date(updateDto.scheduledActivation.dateTime),\n        timezone: updateDto.scheduledActivation.timezone,\n      };\n    }\n\n    // Create audit log entry\n    await this.createAuditLog(\n      config._id.toString(),\n      section,\n      previousState,\n      newState,\n      userId,\n      updateDto.changeReason,\n      ipAddress,\n    );\n\n    // Update the section\n    config.sections[section] = newState;\n    config.lastModifiedBy = userId;\n    config.version = config.version + 1;\n\n    // Save changes\n    const updatedConfig = await config.save();\n\n    // Invalidate cache\n    await this.cacheManager.del(this.CACHE_KEY);\n\n    return updatedConfig;\n  }\n\n  async getAuditLogs(\n    page = 1,\n    limit = 20,\n    section?: string,\n  ): Promise<{\n    data: VisibilityAudit[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  }> {\n    const query = section ? { section } : {};\n    const skip = (page - 1) * limit;\n\n    const [data, total] = await Promise.all([\n      this.visibilityAuditModel.find(query).sort({ createdAt: -1 }).skip(skip).limit(limit).exec(),\n      this.visibilityAuditModel.countDocuments(query).exec(),\n    ]);\n\n    return {\n      data,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    };\n  }\n\n  async getScheduledChanges(): Promise<any[]> {\n    const config = await this.getConfig();\n    const scheduledChanges = [];\n\n    for (const [section, visibility] of Object.entries(config.sections)) {\n      if (visibility.scheduledActivation) {\n        const scheduledTime = new Date(visibility.scheduledActivation.dateTime);\n        if (scheduledTime > new Date()) {\n          scheduledChanges.push({\n            section,\n            scheduledTime: visibility.scheduledActivation.dateTime,\n            timezone: visibility.scheduledActivation.timezone,\n            willBeVisible: !visibility.isVisible,\n          });\n        }\n      }\n    }\n\n    return scheduledChanges;\n  }\n\n  async applyScheduledChanges(): Promise<void> {\n    const config = await this.systemConfigModel.findOne().exec();\n    if (!config) return;\n\n    const now = new Date();\n    let hasChanges = false;\n\n    for (const [section, visibility] of Object.entries(config.sections)) {\n      if (visibility.scheduledActivation) {\n        const scheduledTime = new Date(visibility.scheduledActivation.dateTime);\n        if (scheduledTime <= now) {\n          // Apply the scheduled change\n          visibility.isVisible = !visibility.isVisible;\n          visibility.scheduledActivation = undefined;\n          visibility.lastChanged = now;\n          visibility.changedBy = 'system-scheduler';\n\n          // Create audit log\n          await this.createAuditLog(\n            config._id.toString(),\n            section,\n            { ...visibility, isVisible: !visibility.isVisible },\n            visibility,\n            'system-scheduler',\n            'Scheduled activation triggered',\n          );\n\n          hasChanges = true;\n        }\n      }\n    }\n\n    if (hasChanges) {\n      config.lastModifiedBy = 'system-scheduler';\n      config.version = config.version + 1;\n      await config.save();\n\n      // Invalidate cache\n      await this.cacheManager.del(this.CACHE_KEY);\n    }\n  }\n\n  private async createDefaultConfig(): Promise<SystemConfigDocument> {\n    const defaultSection = {\n      isVisible: true,\n      lastChanged: new Date(),\n      changedBy: 'system',\n    };\n\n    const config = new this.systemConfigModel({\n      sections: {\n        speakers: { ...defaultSection },\n        sponsors: { ...defaultSection },\n        sessions: { ...defaultSection },\n        faq: { ...defaultSection },\n        registration: { ...defaultSection },\n        schedule: { ...defaultSection },\n      },\n      lastModifiedBy: 'system',\n      version: 1,\n    });\n\n    return config.save();\n  }\n\n  private async createAuditLog(\n    configId: string,\n    section: string,\n    previousState: any,\n    newState: any,\n    changedBy: string,\n    changeReason?: string,\n    ipAddress?: string,\n  ): Promise<VisibilityAuditDocument> {\n    const auditLog = new this.visibilityAuditModel({\n      configId,\n      section,\n      previousState,\n      newState,\n      changedBy,\n      changeReason,\n      ipAddress,\n    });\n\n    return auditLog.save();\n  }\n\n  async cleanupAuditLogs(cutoffDate: Date): Promise<number> {\n    const result = await this.visibilityAuditModel\n      .deleteMany({\n        createdAt: { $lt: cutoffDate },\n      })\n      .exec();\n\n    return result.deletedCount || 0;\n  }\n}\n"],"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","ignoreList":[]}