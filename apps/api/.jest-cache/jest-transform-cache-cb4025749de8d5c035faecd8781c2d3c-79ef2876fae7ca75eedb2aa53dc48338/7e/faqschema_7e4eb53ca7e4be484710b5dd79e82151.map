{"version":3,"names":["mongoose_1","cov_1uz7bsgqbf","s","require","mongoose_2","DOMPurify","__importStar","faq_constants_1","Question","__decorate","Prop","required","maxlength","FAQ_CONSTANTS","QUESTION_MAX_LENGTH","trim","Schema","_id","Answer","ANSWER_MAX_LENGTH","Faq","question","answer","category","order","viewCount","isVisible","deletedAt","deletedBy","deleteReason","exports","type","Types","ObjectId","ref","index","min","ORDER_MIN_VALUE","default","VIEW_COUNT_MIN_VALUE","Date","String","timestamps","collection","FaqSchema","SchemaFactory","createForClass","pre","next","f","b","sanitizeHtml","html","config","ALLOWED_TAGS","ALLOWED_ATTR","ALLOW_DATA_ATTR","sanitize","virtual","get","methods","language"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/faq/schemas/faq.schema.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Schema as MongooseSchema } from 'mongoose';\nimport { Faq as IFaq } from '@shared/types/faq.types';\nimport * as DOMPurify from 'isomorphic-dompurify';\nimport { FAQ_CONSTANTS } from '../faq.constants';\n\nexport type FaqDocument = Faq & Document;\n\n@Schema({ _id: false })\nclass Question {\n  @Prop({\n    required: true,\n    maxlength: FAQ_CONSTANTS.QUESTION_MAX_LENGTH,\n    trim: true,\n  })\n  'pt-BR': string;\n\n  @Prop({\n    required: true,\n    maxlength: FAQ_CONSTANTS.QUESTION_MAX_LENGTH,\n    trim: true,\n  })\n  'en': string;\n}\n\n@Schema({ _id: false })\nclass Answer {\n  @Prop({\n    required: true,\n    maxlength: FAQ_CONSTANTS.ANSWER_MAX_LENGTH,\n    trim: true,\n  })\n  'pt-BR': string;\n\n  @Prop({\n    required: true,\n    maxlength: FAQ_CONSTANTS.ANSWER_MAX_LENGTH,\n    trim: true,\n  })\n  'en': string;\n}\n\n@Schema({ timestamps: true, collection: 'Faq' })\nexport class Faq implements Omit<IFaq, '_id'> {\n  @Prop({\n    type: Question,\n    required: true,\n  })\n  question: {\n    'pt-BR': string;\n    en: string;\n  };\n\n  @Prop({\n    type: Answer,\n    required: true,\n  })\n  answer: {\n    'pt-BR': string;\n    en: string;\n  };\n\n  @Prop({\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'FaqCategory',\n    required: true,\n    index: true,\n  })\n  category: string;\n\n  @Prop({\n    required: true,\n    min: FAQ_CONSTANTS.ORDER_MIN_VALUE,\n  })\n  order: number;\n\n  @Prop({\n    default: 0,\n    min: FAQ_CONSTANTS.VIEW_COUNT_MIN_VALUE,\n  })\n  viewCount: number;\n\n  @Prop({\n    default: true,\n    index: true,\n  })\n  isVisible: boolean;\n\n  @Prop({\n    type: Date,\n    default: null,\n  })\n  deletedAt?: Date;\n\n  @Prop({\n    type: MongooseSchema.Types.ObjectId,\n    ref: 'User',\n  })\n  deletedBy?: MongooseSchema.Types.ObjectId;\n\n  @Prop({\n    type: String,\n  })\n  deleteReason?: string;\n}\n\nexport const FaqSchema = SchemaFactory.createForClass(Faq);\n\n// Indexes\nFaqSchema.index({ category: 1, order: 1 });\nFaqSchema.index({ viewCount: -1 });\nFaqSchema.index({ isVisible: 1 });\nFaqSchema.index({ deletedAt: 1 });\n// Compound index for common query pattern (category + visibility + soft delete)\nFaqSchema.index({ category: 1, isVisible: 1, deletedAt: 1 });\nFaqSchema.index({\n  'question.pt-BR': 'text',\n  'question.en': 'text',\n  'answer.pt-BR': 'text',\n  'answer.en': 'text',\n});\n\n// Pre-save middleware for data normalization and HTML sanitization\nFaqSchema.pre('save', function (next) {\n  if (this.question) {\n    if (this.question['pt-BR']) {\n      this.question['pt-BR'] = this.question['pt-BR'].trim();\n    }\n    if (this.question['en']) {\n      this.question['en'] = this.question['en'].trim();\n    }\n  }\n\n  if (this.answer) {\n    if (this.answer['pt-BR']) {\n      this.answer['pt-BR'] = sanitizeHtml(this.answer['pt-BR'].trim());\n    }\n    if (this.answer['en']) {\n      this.answer['en'] = sanitizeHtml(this.answer['en'].trim());\n    }\n  }\n\n  next();\n});\n\n// Helper function for HTML sanitization\nfunction sanitizeHtml(html: string): string {\n  const config = {\n    ALLOWED_TAGS: [\n      'b',\n      'i',\n      'em',\n      'strong',\n      'a',\n      'p',\n      'br',\n      'ul',\n      'ol',\n      'li',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n    ],\n    ALLOWED_ATTR: ['href', 'target', 'rel'],\n    ALLOW_DATA_ATTR: false,\n  };\n\n  return DOMPurify.sanitize(html, config);\n}\n\n// Virtual fields\nFaqSchema.virtual('popularity').get(function () {\n  return this.viewCount || 0;\n});\n\n// Schema methods\nFaqSchema.methods['getLocalizedQuestion'] = function (language: 'pt-BR' | 'en'): string {\n  return this['question'][language] || this['question']['pt-BR'];\n};\n\nFaqSchema.methods['getLocalizedAnswer'] = function (language: 'pt-BR' | 'en'): string {\n  return this['answer'][language] || this['answer']['pt-BR'];\n};\n\nFaqSchema.methods['incrementViewCount'] = function (): void {\n  this['viewCount'] = (this['viewCount'] || 0) + 1;\n};\n"],"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","ignoreList":[]}