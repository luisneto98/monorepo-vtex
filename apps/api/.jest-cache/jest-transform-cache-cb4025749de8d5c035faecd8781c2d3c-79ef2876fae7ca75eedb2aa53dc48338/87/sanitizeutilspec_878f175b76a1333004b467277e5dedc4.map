{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/tests/unit/common/utils/sanitize.util.spec.ts","mappings":"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","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/tests/unit/common/utils/sanitize.util.spec.ts"],"sourcesContent":["import {\n  sanitizeNotificationTitle,\n  sanitizeNotificationContent,\n} from '../../../../src/common/utils/sanitize.util';\n\ndescribe('Sanitize Utilities', () => {\n  describe('sanitizeNotificationTitle', () => {\n    it('should escape HTML tags and remove injection characters', () => {\n      const input = '<script>alert(\"xss\")</script>Important Update';\n      const result = sanitizeNotificationTitle(input);\n      // HTML tags escaped, then quotes/brackets removed\n      expect(result).not.toContain('<script>');\n      expect(result).toContain('Important Update');\n    });\n\n    it('should remove special injection characters', () => {\n      const input = 'Title with special chars!';\n      const result = sanitizeNotificationTitle(input);\n      expect(result).toBe('Title with special chars!');\n    });\n\n    it('should escape and remove dangerous characters', () => {\n      const input = 'Title<>\"\\' `test';\n      const result = sanitizeNotificationTitle(input);\n      // Should not contain injection characters\n      expect(result).not.toContain('<');\n      expect(result).not.toContain('>');\n      expect(result).not.toContain('\"');\n      expect(result).not.toContain(\"'\");\n      expect(result).not.toContain('`');\n      expect(result).toContain('Title');\n      expect(result).toContain('test');\n    });\n\n    it('should preserve safe characters', () => {\n      const input = 'Event Update: Session at 3PM!';\n      const result = sanitizeNotificationTitle(input);\n      expect(result).toBe('Event Update: Session at 3PM!');\n    });\n\n    it('should handle empty string', () => {\n      const result = sanitizeNotificationTitle('');\n      expect(result).toBe('');\n    });\n\n    it('should trim whitespace', () => {\n      const input = '  Important Notice  ';\n      const result = sanitizeNotificationTitle(input);\n      expect(result).toBe('Important Notice');\n    });\n\n    it('should handle unicode characters safely', () => {\n      const input = 'AtualizaÃ§Ã£o Importante ðŸ””';\n      const result = sanitizeNotificationTitle(input);\n      expect(result).toBe('AtualizaÃ§Ã£o Importante ðŸ””');\n    });\n  });\n\n  describe('sanitizeNotificationContent', () => {\n    it('should escape HTML tags', () => {\n      const input = '<p>This is <strong>bold</strong> text</p>';\n      const result = sanitizeNotificationContent(input);\n      // HTML tags are escaped, not removed\n      expect(result).not.toContain('<p>');\n      expect(result).not.toContain('<strong>');\n      expect(result).toContain('This is');\n      expect(result).toContain('bold');\n      expect(result).toContain('text');\n    });\n\n    it('should escape script tags', () => {\n      const input = 'Safe text<script>malicious()</script>more text';\n      const result = sanitizeNotificationContent(input);\n      // Script tags escaped\n      expect(result).not.toContain('<script>');\n      expect(result).toContain('Safe text');\n      expect(result).toContain('more text');\n    });\n\n    it('should escape style tags', () => {\n      const input = '<style>.hide{display:none}</style>Visible content';\n      const result = sanitizeNotificationContent(input);\n      expect(result).not.toContain('<style>');\n      expect(result).toContain('Visible content');\n    });\n\n    it('should preserve line breaks as spaces', () => {\n      const input = 'Line 1\\nLine 2\\nLine 3';\n      const result = sanitizeNotificationContent(input);\n      expect(result).toBe('Line 1\\nLine 2\\nLine 3');\n    });\n\n    it('should handle mixed content', () => {\n      const input = 'Check <a href=\"evil.com\">this link</a> for updates!';\n      const result = sanitizeNotificationContent(input);\n      expect(result).not.toContain('<a');\n      expect(result).not.toContain('href');\n      expect(result).toContain('this link');\n      expect(result).toContain('for updates!');\n    });\n\n    it('should preserve safe punctuation', () => {\n      const input = \"Event starts at 3:00 PM. Don't miss it!\";\n      const result = sanitizeNotificationContent(input);\n      expect(result).toBe(\"Event starts at 3:00 PM. Don't miss it!\");\n    });\n\n    it('should handle empty string', () => {\n      const result = sanitizeNotificationContent('');\n      expect(result).toBe('');\n    });\n\n    it('should trim whitespace', () => {\n      const input = '  Message with spaces  ';\n      const result = sanitizeNotificationContent(input);\n      expect(result).toBe('Message with spaces');\n    });\n\n    it('should handle complex XSS attempts', () => {\n      const input = '<img src=x onerror=\"alert(1)\">Text<iframe src=\"evil\"></iframe>';\n      const result = sanitizeNotificationContent(input);\n      expect(result).not.toContain('<img');\n      expect(result).not.toContain('onerror');\n      expect(result).not.toContain('<iframe');\n      expect(result).toContain('Text');\n    });\n\n    it('should preserve emoji and special characters', () => {\n      const input = 'Nova sessÃ£o disponÃ­vel! ðŸŽ‰ NÃ£o perca! âœ¨';\n      const result = sanitizeNotificationContent(input);\n      expect(result).toBe('Nova sessÃ£o disponÃ­vel! ðŸŽ‰ NÃ£o perca! âœ¨');\n    });\n  });\n});\n"],"version":3}