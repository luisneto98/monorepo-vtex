dedfb08d7ae680b98c1d5e99e38c64bb
"use strict";

/* istanbul ignore next */
function cov_ha3dore9g() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/notifications/schemas/notification.schema.ts";
  var hash = "ba9ddc97ee7d7c7017d958cbf8b0ecc035898bff";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/notifications/schemas/notification.schema.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 88
        }
      },
      "15": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "16": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "17": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 22,
          column: 81
        }
      },
      "18": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "19": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 50
        }
      },
      "20": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "21": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "22": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 44
        }
      },
      "23": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "24": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 36
        }
      },
      "25": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 42,
          column: 44
        }
      },
      "26": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 46,
          column: 46
        }
      },
      "27": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "28": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 54,
          column: 45
        }
      },
      "29": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 62,
          column: 45
        }
      },
      "30": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 66,
          column: 50
        }
      },
      "31": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 70,
          column: 53
        }
      },
      "32": {
        start: {
          line: 71,
          column: 0
        },
        end: {
          line: 74,
          column: 50
        }
      },
      "33": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 78,
          column: 48
        }
      },
      "34": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 82,
          column: 47
        }
      },
      "35": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 86,
          column: 47
        }
      },
      "36": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 90,
          column: 48
        }
      },
      "37": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 94,
          column: 48
        }
      },
      "38": {
        start: {
          line: 95,
          column: 0
        },
        end: {
          line: 97,
          column: 17
        }
      },
      "39": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 98,
          column: 83
        }
      },
      "40": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 100,
          column: 64
        }
      },
      "41": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 101,
          column: 66
        }
      },
      "42": {
        start: {
          line: 102,
          column: 0
        },
        end: {
          line: 102,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 1
          },
          end: {
            line: 16,
            column: 2
          }
        },
        loc: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 22,
            column: 3
          },
          end: {
            line: 22,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 3
          },
          end: {
            line: 22,
            column: 21
          }
        }, {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 78
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/notifications/schemas/notification.schema.ts",
      mappings: ";;;;;;;;;;;;AAAA,+CAA+D;AAC/D,uCAA2C;AAI3C,IAAY,kBAMX;AAND,WAAY,kBAAkB;IAC5B,qCAAe,CAAA;IACf,6CAAuB,CAAA;IACvB,yCAAmB,CAAA;IACnB,mCAAa,CAAA;IACb,uCAAiB,CAAA;AACnB,CAAC,EANW,kBAAkB,kCAAlB,kBAAkB,QAM7B;AAGM,IAAM,YAAY,GAAlB,MAAM,YAAY;IAEvB,KAAK,CAAS;IAGd,OAAO,CAAS;IAGhB,WAAW,CAAQ;IAGnB,MAAM,CAAQ;IAOd,MAAM,CAAqB;IAG3B,WAAW,CAAS;IAGpB,cAAc,CAAS;IAGvB,WAAW,CAAS;IAGpB,SAAS,CAAiB;IAG1B,QAAQ,CAAW;IAGnB,QAAQ,CAAuB;IAG/B,SAAS,CAAO;IAGhB,SAAS,CAAO;CACjB,CAAA;AA3CY,oCAAY;AAEvB;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;;2CAC1B;AAGd;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;;6CACzB;AAGhB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;8BACP,IAAI;iDAAC;AAGnB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;8BACZ,IAAI;4CAAC;AAOd;IALC,IAAA,eAAI,EAAC;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC;QACvC,OAAO,EAAE,kBAAkB,CAAC,KAAK;KAClC,CAAC;;4CACyB;AAG3B;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;;iDACjB;AAGpB;IADC,IAAA,eAAI,EAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;;oDACE;AAGvB;IADC,IAAA,eAAI,EAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;;iDACD;AAGpB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BACjD,gBAAK,CAAC,QAAQ;+CAAC;AAG1B;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;;8CACnB;AAGnB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;8CACQ;AAG/B;IADC,IAAA,eAAI,GAAE;8BACI,IAAI;+CAAC;AAGhB;IADC,IAAA,eAAI,GAAE;8BACI,IAAI;+CAAC;uBA1CL,YAAY;IADxB,IAAA,iBAAM,EAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;GAChB,YAAY,CA2CxB;AAEY,QAAA,kBAAkB,GAAG,wBAAa,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AAE7E,0BAA0B;AAC1B,0BAAkB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;AACxD,0BAAkB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1D,0BAAkB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/notifications/schemas/notification.schema.ts"],
      sourcesContent: ["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\nexport type NotificationDocument = Notification & Document;\n\nexport enum NotificationStatus {\n  DRAFT = 'draft',\n  SCHEDULED = 'scheduled',\n  SENDING = 'sending',\n  SENT = 'sent',\n  FAILED = 'failed',\n}\n\n@Schema({ timestamps: true })\nexport class Notification {\n  @Prop({ required: true, maxlength: 65 })\n  title: string;\n\n  @Prop({ required: true, maxlength: 240 })\n  message: string;\n\n  @Prop({ type: Date })\n  scheduledAt?: Date;\n\n  @Prop({ type: Date })\n  sentAt?: Date;\n\n  @Prop({\n    type: String,\n    enum: Object.values(NotificationStatus),\n    default: NotificationStatus.DRAFT,\n  })\n  status: NotificationStatus;\n\n  @Prop({ required: true, default: 0 })\n  deviceCount: number;\n\n  @Prop({ default: 0 })\n  deliveredCount: number;\n\n  @Prop({ default: 0 })\n  failedCount: number;\n\n  @Prop({ type: Types.ObjectId, ref: 'User', required: true })\n  createdBy: Types.ObjectId;\n\n  @Prop({ type: [String], default: [] })\n  segments: string[];\n\n  @Prop({ type: Object })\n  metadata?: Record<string, any>;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const NotificationSchema = SchemaFactory.createForClass(Notification);\n\n// Indexes for performance\nNotificationSchema.index({ status: 1, scheduledAt: 1 });\nNotificationSchema.index({ createdBy: 1, createdAt: -1 });\nNotificationSchema.index({ sentAt: -1 });\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ba9ddc97ee7d7c7017d958cbf8b0ecc035898bff"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ha3dore9g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ha3dore9g();
var __decorate =
/* istanbul ignore next */
(cov_ha3dore9g().s[0]++,
/* istanbul ignore next */
(cov_ha3dore9g().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_ha3dore9g().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_ha3dore9g().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_ha3dore9g().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_ha3dore9g().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_ha3dore9g().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_ha3dore9g().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_ha3dore9g().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_ha3dore9g().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_ha3dore9g().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_ha3dore9g().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_ha3dore9g().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_ha3dore9g().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_ha3dore9g().b[3][0]++;
    cov_ha3dore9g().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_ha3dore9g().b[3][1]++;
    cov_ha3dore9g().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_ha3dore9g().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_ha3dore9g().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_ha3dore9g().b[5][0]++;
        cov_ha3dore9g().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_ha3dore9g().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_ha3dore9g().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_ha3dore9g().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_ha3dore9g().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_ha3dore9g().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_ha3dore9g().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_ha3dore9g().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_ha3dore9g().s[9]++;
  return /* istanbul ignore next */(cov_ha3dore9g().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_ha3dore9g().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_ha3dore9g().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_ha3dore9g().s[10]++,
/* istanbul ignore next */
(cov_ha3dore9g().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_ha3dore9g().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_ha3dore9g().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_ha3dore9g().f[1]++;
  cov_ha3dore9g().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_ha3dore9g().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_ha3dore9g().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_ha3dore9g().b[11][0]++;
    cov_ha3dore9g().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_ha3dore9g().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_ha3dore9g().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ha3dore9g().s[14]++;
exports.NotificationSchema = exports.Notification = exports.NotificationStatus = void 0;
const mongoose_1 =
/* istanbul ignore next */
(cov_ha3dore9g().s[15]++, require("@nestjs/mongoose"));
const mongoose_2 =
/* istanbul ignore next */
(cov_ha3dore9g().s[16]++, require("mongoose"));
var NotificationStatus;
/* istanbul ignore next */
cov_ha3dore9g().s[17]++;
(function (NotificationStatus) {
  /* istanbul ignore next */
  cov_ha3dore9g().f[2]++;
  cov_ha3dore9g().s[18]++;
  NotificationStatus["DRAFT"] = "draft";
  /* istanbul ignore next */
  cov_ha3dore9g().s[19]++;
  NotificationStatus["SCHEDULED"] = "scheduled";
  /* istanbul ignore next */
  cov_ha3dore9g().s[20]++;
  NotificationStatus["SENDING"] = "sending";
  /* istanbul ignore next */
  cov_ha3dore9g().s[21]++;
  NotificationStatus["SENT"] = "sent";
  /* istanbul ignore next */
  cov_ha3dore9g().s[22]++;
  NotificationStatus["FAILED"] = "failed";
})(
/* istanbul ignore next */
(cov_ha3dore9g().b[13][0]++, NotificationStatus) ||
/* istanbul ignore next */
(cov_ha3dore9g().b[13][1]++, exports.NotificationStatus = NotificationStatus = {}));
/* istanbul ignore next */
cov_ha3dore9g().s[23]++;
let Notification = class Notification {
  title;
  message;
  scheduledAt;
  sentAt;
  status;
  deviceCount;
  deliveredCount;
  failedCount;
  createdBy;
  segments;
  metadata;
  createdAt;
  updatedAt;
};
/* istanbul ignore next */
cov_ha3dore9g().s[24]++;
exports.Notification = Notification;
/* istanbul ignore next */
cov_ha3dore9g().s[25]++;
__decorate([(0, mongoose_1.Prop)({
  required: true,
  maxlength: 65
}), __metadata("design:type", String)], Notification.prototype, "title", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[26]++;
__decorate([(0, mongoose_1.Prop)({
  required: true,
  maxlength: 240
}), __metadata("design:type", String)], Notification.prototype, "message", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[27]++;
__decorate([(0, mongoose_1.Prop)({
  type: Date
}), __metadata("design:type", Date)], Notification.prototype, "scheduledAt", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[28]++;
__decorate([(0, mongoose_1.Prop)({
  type: Date
}), __metadata("design:type", Date)], Notification.prototype, "sentAt", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[29]++;
__decorate([(0, mongoose_1.Prop)({
  type: String,
  enum: Object.values(NotificationStatus),
  default: NotificationStatus.DRAFT
}), __metadata("design:type", String)], Notification.prototype, "status", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[30]++;
__decorate([(0, mongoose_1.Prop)({
  required: true,
  default: 0
}), __metadata("design:type", Number)], Notification.prototype, "deviceCount", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[31]++;
__decorate([(0, mongoose_1.Prop)({
  default: 0
}), __metadata("design:type", Number)], Notification.prototype, "deliveredCount", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[32]++;
__decorate([(0, mongoose_1.Prop)({
  default: 0
}), __metadata("design:type", Number)], Notification.prototype, "failedCount", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[33]++;
__decorate([(0, mongoose_1.Prop)({
  type: mongoose_2.Types.ObjectId,
  ref: 'User',
  required: true
}), __metadata("design:type", mongoose_2.Types.ObjectId)], Notification.prototype, "createdBy", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[34]++;
__decorate([(0, mongoose_1.Prop)({
  type: [String],
  default: []
}), __metadata("design:type", Array)], Notification.prototype, "segments", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[35]++;
__decorate([(0, mongoose_1.Prop)({
  type: Object
}), __metadata("design:type", Object)], Notification.prototype, "metadata", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[36]++;
__decorate([(0, mongoose_1.Prop)(), __metadata("design:type", Date)], Notification.prototype, "createdAt", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[37]++;
__decorate([(0, mongoose_1.Prop)(), __metadata("design:type", Date)], Notification.prototype, "updatedAt", void 0);
/* istanbul ignore next */
cov_ha3dore9g().s[38]++;
exports.Notification = Notification = __decorate([(0, mongoose_1.Schema)({
  timestamps: true
})], Notification);
/* istanbul ignore next */
cov_ha3dore9g().s[39]++;
exports.NotificationSchema = mongoose_1.SchemaFactory.createForClass(Notification);
// Indexes for performance
/* istanbul ignore next */
cov_ha3dore9g().s[40]++;
exports.NotificationSchema.index({
  status: 1,
  scheduledAt: 1
});
/* istanbul ignore next */
cov_ha3dore9g().s[41]++;
exports.NotificationSchema.index({
  createdBy: 1,
  createdAt: -1
});
/* istanbul ignore next */
cov_ha3dore9g().s[42]++;
exports.NotificationSchema.index({
  sentAt: -1
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,