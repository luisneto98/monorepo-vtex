{"version":3,"names":["cov_2ohvz13rnw","actualCoverage","common_1","s","require","mongoose_1","mongoose_2","session_schema_1","SessionsService","sessionModel","constructor","f","create","createSessionDto","checkTimeConflict","startTime","endTime","stage","createdSession","save","findAll","filterDto","page","b","limit","sort","search","startDate","endDate","type","tags","speakerId","sponsorId","isHighlight","isVisible","isLive","isUpcoming","isPast","query","deletedAt","$or","$regex","$options","$gte","$lte","length","$in","speakerIds","sponsorIds","now","Date","$gt","$lt","skip","sortOptions","sortFields","split","field","startsWith","substring","data","total","Promise","all","find","populate","exec","countDocuments","success","metadata","hasNext","hasPrev","findById","id","session","findOne","_id","NotFoundException","findHighlights","findLiveSessions","update","updateSessionDto","updated","findByIdAndUpdate","$set","new","runValidators","remove","reason","userId","deleteReason","deletedBy","restore","$ne","excludeId","conflictingSession","ConflictException","exports","__decorate","Injectable","__param","InjectModel","Session","name","Model"],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/sessions/sessions.service.ts"],"sourcesContent":["import { Injectable, NotFoundException, ConflictException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Session, SessionDocument } from './schemas/session.schema';\nimport { CreateSessionDto } from './dto/create-session.dto';\nimport { UpdateSessionDto } from './dto/update-session.dto';\nimport { SessionFilterDto } from './dto/session-filter.dto';\nimport { PaginatedResponse } from '@common/dto/pagination.dto';\n\n@Injectable()\nexport class SessionsService {\n  constructor(@InjectModel(Session.name) private sessionModel: Model<SessionDocument>) {}\n\n  async create(createSessionDto: CreateSessionDto): Promise<SessionDocument> {\n    // Check for conflicts (same stage and overlapping time)\n    await this.checkTimeConflict(\n      createSessionDto.startTime,\n      createSessionDto.endTime,\n      createSessionDto.stage,\n    );\n\n    const createdSession = new this.sessionModel(createSessionDto);\n    return createdSession.save();\n  }\n\n  async findAll(filterDto: SessionFilterDto): Promise<PaginatedResponse<SessionDocument>> {\n    const {\n      page = 1,\n      limit = 20,\n      sort,\n      search,\n      startDate,\n      endDate,\n      stage,\n      type,\n      tags,\n      speakerId,\n      sponsorId,\n      isHighlight,\n      isVisible,\n      isLive,\n      isUpcoming,\n      isPast,\n    } = filterDto;\n\n    const query: any = { deletedAt: null };\n\n    if (search) {\n      query.$or = [\n        { 'title.pt-BR': { $regex: search, $options: 'i' } },\n        { 'title.en': { $regex: search, $options: 'i' } },\n        { 'description.pt-BR': { $regex: search, $options: 'i' } },\n        { 'description.en': { $regex: search, $options: 'i' } },\n      ];\n    }\n\n    if (startDate) {\n      query.startTime = { $gte: startDate };\n    }\n\n    if (endDate) {\n      if (query.startTime) {\n        query.startTime.$lte = endDate;\n      } else {\n        query.startTime = { $lte: endDate };\n      }\n    }\n\n    if (stage) {\n      query.stage = stage;\n    }\n\n    if (type) {\n      query.type = type;\n    }\n\n    if (tags && tags.length > 0) {\n      query.tags = { $in: tags };\n    }\n\n    if (speakerId) {\n      query.speakerIds = speakerId;\n    }\n\n    if (sponsorId) {\n      query.sponsorIds = sponsorId;\n    }\n\n    if (typeof isHighlight !== 'undefined') {\n      query.isHighlight = isHighlight;\n    }\n\n    if (typeof isVisible !== 'undefined') {\n      query.isVisible = isVisible;\n    }\n\n    // Time-based filters\n    const now = new Date();\n    if (isLive) {\n      query.startTime = { $lte: now };\n      query.endTime = { $gt: now };\n    } else if (isUpcoming) {\n      query.startTime = { $gt: now };\n    } else if (isPast) {\n      query.endTime = { $lt: now };\n    }\n\n    const skip = (page - 1) * limit;\n\n    let sortOptions: any = { startTime: 1 };\n    if (sort) {\n      sortOptions = {};\n      const sortFields = sort.split(',');\n      for (const field of sortFields) {\n        if (field.startsWith('-')) {\n          sortOptions[field.substring(1)] = -1;\n        } else {\n          sortOptions[field] = 1;\n        }\n      }\n    }\n\n    const [data, total] = await Promise.all([\n      this.sessionModel\n        .find(query)\n        .populate('speakerIds', 'name photoUrl company')\n        .populate('sponsorIds', 'name logoUrl tier')\n        .sort(sortOptions)\n        .skip(skip)\n        .limit(limit)\n        .exec(),\n      this.sessionModel.countDocuments(query),\n    ]);\n\n    return {\n      success: true,\n      data,\n      metadata: {\n        total,\n        page,\n        limit,\n        hasNext: skip + data.length < total,\n        hasPrev: page > 1,\n      },\n    };\n  }\n\n  async findById(id: string): Promise<SessionDocument> {\n    const session = await this.sessionModel\n      .findOne({\n        _id: id,\n        deletedAt: null,\n      })\n      .populate('speakerIds', 'name photoUrl company bio position')\n      .populate('sponsorIds', 'name logoUrl tier description website')\n      .exec();\n\n    if (!session) {\n      throw new NotFoundException(`Session with ID ${id} not found`);\n    }\n\n    return session;\n  }\n\n  async findHighlights(): Promise<SessionDocument[]> {\n    return this.sessionModel\n      .find({\n        isHighlight: true,\n        isVisible: true,\n        deletedAt: null,\n      })\n      .populate('speakerIds', 'name photoUrl company')\n      .sort({ startTime: 1 })\n      .exec();\n  }\n\n  async findLiveSessions(): Promise<SessionDocument[]> {\n    const now = new Date();\n    return this.sessionModel\n      .find({\n        startTime: { $lte: now },\n        endTime: { $gt: now },\n        isVisible: true,\n        deletedAt: null,\n      })\n      .populate('speakerIds', 'name photoUrl company')\n      .sort({ startTime: 1 })\n      .exec();\n  }\n\n  async update(id: string, updateSessionDto: UpdateSessionDto): Promise<SessionDocument> {\n    const session = await this.sessionModel.findOne({\n      _id: id,\n      deletedAt: null,\n    });\n\n    if (!session) {\n      throw new NotFoundException(`Session with ID ${id} not found`);\n    }\n\n    // Check for time conflicts if time or stage is being updated\n    if (updateSessionDto.startTime || updateSessionDto.endTime || updateSessionDto.stage) {\n      const startTime = updateSessionDto.startTime || session.startTime;\n      const endTime = updateSessionDto.endTime || session.endTime;\n      const stage = updateSessionDto.stage || session.stage;\n\n      await this.checkTimeConflict(startTime, endTime, stage, id);\n    }\n\n    // Use findByIdAndUpdate to bypass full validation\n    const updated = await this.sessionModel.findByIdAndUpdate(\n      id,\n      { $set: updateSessionDto },\n      { new: true, runValidators: true },\n    );\n\n    if (!updated) {\n      throw new NotFoundException(`Session with ID ${id} not found`);\n    }\n\n    return updated;\n  }\n\n  async remove(id: string, reason?: string, userId?: string): Promise<void> {\n    const session = await this.sessionModel.findOne({\n      _id: id,\n      deletedAt: null,\n    });\n\n    if (!session) {\n      throw new NotFoundException(`Session with ID ${id} not found`);\n    }\n\n    session.deletedAt = new Date();\n    session.deleteReason = reason;\n\n    if (userId) {\n      session.deletedBy = userId as any;\n    }\n\n    await session.save();\n  }\n\n  async restore(id: string): Promise<SessionDocument> {\n    const session = await this.sessionModel.findOne({\n      _id: id,\n      deletedAt: { $ne: null },\n    });\n\n    if (!session) {\n      throw new NotFoundException(`Deleted session with ID ${id} not found`);\n    }\n\n    session.deletedAt = null;\n    session.deletedBy = null;\n    session.deleteReason = null;\n\n    return session.save();\n  }\n\n  private async checkTimeConflict(\n    startTime: Date,\n    endTime: Date,\n    stage: string,\n    excludeId?: string,\n  ): Promise<void> {\n    const query: any = {\n      stage,\n      deletedAt: null,\n      $or: [\n        {\n          startTime: { $lt: endTime },\n          endTime: { $gt: startTime },\n        },\n      ],\n    };\n\n    if (excludeId) {\n      query._id = { $ne: excludeId };\n    }\n\n    const conflictingSession = await this.sessionModel.findOne(query);\n\n    if (conflictingSession) {\n      throw new ConflictException(\n        `Time conflict: Another session is scheduled at the same stage \"${stage}\" during this time period`,\n      );\n    }\n  }\n}\n"],"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","ignoreList":[]}