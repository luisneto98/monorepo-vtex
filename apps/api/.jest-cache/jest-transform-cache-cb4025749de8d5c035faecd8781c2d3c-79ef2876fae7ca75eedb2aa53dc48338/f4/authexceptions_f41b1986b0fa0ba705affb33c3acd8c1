b103ec5407acf1b05be1b2ebe7a9cbe6
"use strict";

/* istanbul ignore next */
function cov_ilqyfv5s7() {
  var path = "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/exceptions/auth.exceptions.ts";
  var hash = "a77be691f79bab294cb84cadb5eef1fb41206050";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/exceptions/auth.exceptions.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 151
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 15,
          column: 45
        }
      },
      "4": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 29,
          column: 45
        }
      },
      "6": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 68
        }
      },
      "7": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 43,
          column: 42
        }
      },
      "8": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 60
        }
      },
      "9": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 57,
          column: 45
        }
      },
      "10": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 55
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 62
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 49
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 48
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 16
          },
          end: {
            line: 6,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 6,
            column: 26
          },
          end: {
            line: 6,
            column: 53
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 60
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 34,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 47
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 48,
            column: 45
          }
        }],
        line: 48
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0]
    },
    inputSourceMap: {
      file: "/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/exceptions/auth.exceptions.ts",
      mappings: ";;;AAAA,2CAA2D;AAE3D,MAAa,2BAA4B,SAAQ,sBAAa;IAC5D,YAAY,OAAO,GAAG,2BAA2B;QAC/C,KAAK,CACH;YACE,KAAK,EAAE;gBACL,IAAI,EAAE,6BAA6B;gBACnC,OAAO;gBACP,OAAO,EAAE,IAAI;gBACb,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,SAAS,EAAE,QAAQ,IAAI,CAAC,GAAG,EAAE,EAAE;aAChC;SACF,EACD,mBAAU,CAAC,YAAY,CACxB,CAAC;IACJ,CAAC;CACF;AAfD,kEAeC;AAED,MAAa,4BAA6B,SAAQ,sBAAa;IAC7D,YAAY,OAAO,GAAG,kCAAkC;QACtD,KAAK,CACH;YACE,KAAK,EAAE;gBACL,IAAI,EAAE,8BAA8B;gBACpC,OAAO;gBACP,OAAO,EAAE,IAAI;gBACb,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,SAAS,EAAE,QAAQ,IAAI,CAAC,GAAG,EAAE,EAAE;aAChC;SACF,EACD,mBAAU,CAAC,YAAY,CACxB,CAAC;IACJ,CAAC;CACF;AAfD,oEAeC;AAED,MAAa,wBAAyB,SAAQ,sBAAa;IACzD,YAAY,OAAO,GAAG,qBAAqB;QACzC,KAAK,CACH;YACE,KAAK,EAAE;gBACL,IAAI,EAAE,0BAA0B;gBAChC,OAAO;gBACP,OAAO,EAAE,IAAI;gBACb,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,SAAS,EAAE,QAAQ,IAAI,CAAC,GAAG,EAAE,EAAE;aAChC;SACF,EACD,mBAAU,CAAC,SAAS,CACrB,CAAC;IACJ,CAAC;CACF;AAfD,4DAeC;AAED,MAAa,qBAAsB,SAAQ,sBAAa;IACtD,YAAY,OAAO,GAAG,mBAAmB;QACvC,KAAK,CACH;YACE,KAAK,EAAE;gBACL,IAAI,EAAE,uBAAuB;gBAC7B,OAAO;gBACP,OAAO,EAAE,IAAI;gBACb,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,SAAS,EAAE,QAAQ,IAAI,CAAC,GAAG,EAAE,EAAE;aAChC;SACF,EACD,mBAAU,CAAC,YAAY,CACxB,CAAC;IACJ,CAAC;CACF;AAfD,sDAeC",
      names: [],
      sources: ["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/auth/exceptions/auth.exceptions.ts"],
      sourcesContent: ["import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidCredentialsException extends HttpException {\n  constructor(message = 'Invalid email or password') {\n    super(\n      {\n        error: {\n          code: 'InvalidCredentialsException',\n          message,\n          details: null,\n          timestamp: new Date().toISOString(),\n          requestId: `auth-${Date.now()}`,\n        },\n      },\n      HttpStatus.UNAUTHORIZED,\n    );\n  }\n}\n\nexport class InvalidRefreshTokenException extends HttpException {\n  constructor(message = 'Invalid or expired refresh token') {\n    super(\n      {\n        error: {\n          code: 'InvalidRefreshTokenException',\n          message,\n          details: null,\n          timestamp: new Date().toISOString(),\n          requestId: `auth-${Date.now()}`,\n        },\n      },\n      HttpStatus.UNAUTHORIZED,\n    );\n  }\n}\n\nexport class AccountDisabledException extends HttpException {\n  constructor(message = 'Account is disabled') {\n    super(\n      {\n        error: {\n          code: 'AccountDisabledException',\n          message,\n          details: null,\n          timestamp: new Date().toISOString(),\n          requestId: `auth-${Date.now()}`,\n        },\n      },\n      HttpStatus.FORBIDDEN,\n    );\n  }\n}\n\nexport class TokenExpiredException extends HttpException {\n  constructor(message = 'Token has expired') {\n    super(\n      {\n        error: {\n          code: 'TokenExpiredException',\n          message,\n          details: null,\n          timestamp: new Date().toISOString(),\n          requestId: `auth-${Date.now()}`,\n        },\n      },\n      HttpStatus.UNAUTHORIZED,\n    );\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a77be691f79bab294cb84cadb5eef1fb41206050"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ilqyfv5s7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ilqyfv5s7();
cov_ilqyfv5s7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ilqyfv5s7().s[1]++;
exports.TokenExpiredException = exports.AccountDisabledException = exports.InvalidRefreshTokenException = exports.InvalidCredentialsException = void 0;
const common_1 =
/* istanbul ignore next */
(cov_ilqyfv5s7().s[2]++, require("@nestjs/common"));
class InvalidCredentialsException extends
/* istanbul ignore next */
(common_1.HttpException) {
  constructor(message =
  /* istanbul ignore next */
  (cov_ilqyfv5s7().b[0][0]++, 'Invalid email or password')) {
    /* istanbul ignore next */
    cov_ilqyfv5s7().f[0]++;
    cov_ilqyfv5s7().s[3]++;
    super({
      error: {
        code: 'InvalidCredentialsException',
        message,
        details: null,
        timestamp: new Date().toISOString(),
        requestId: `auth-${Date.now()}`
      }
    }, common_1.HttpStatus.UNAUTHORIZED);
  }
}
/* istanbul ignore next */
cov_ilqyfv5s7().s[4]++;
exports.InvalidCredentialsException = InvalidCredentialsException;
class InvalidRefreshTokenException extends
/* istanbul ignore next */
(common_1.HttpException) {
  constructor(message =
  /* istanbul ignore next */
  (cov_ilqyfv5s7().b[1][0]++, 'Invalid or expired refresh token')) {
    /* istanbul ignore next */
    cov_ilqyfv5s7().f[1]++;
    cov_ilqyfv5s7().s[5]++;
    super({
      error: {
        code: 'InvalidRefreshTokenException',
        message,
        details: null,
        timestamp: new Date().toISOString(),
        requestId: `auth-${Date.now()}`
      }
    }, common_1.HttpStatus.UNAUTHORIZED);
  }
}
/* istanbul ignore next */
cov_ilqyfv5s7().s[6]++;
exports.InvalidRefreshTokenException = InvalidRefreshTokenException;
class AccountDisabledException extends
/* istanbul ignore next */
(common_1.HttpException) {
  constructor(message =
  /* istanbul ignore next */
  (cov_ilqyfv5s7().b[2][0]++, 'Account is disabled')) {
    /* istanbul ignore next */
    cov_ilqyfv5s7().f[2]++;
    cov_ilqyfv5s7().s[7]++;
    super({
      error: {
        code: 'AccountDisabledException',
        message,
        details: null,
        timestamp: new Date().toISOString(),
        requestId: `auth-${Date.now()}`
      }
    }, common_1.HttpStatus.FORBIDDEN);
  }
}
/* istanbul ignore next */
cov_ilqyfv5s7().s[8]++;
exports.AccountDisabledException = AccountDisabledException;
class TokenExpiredException extends
/* istanbul ignore next */
(common_1.HttpException) {
  constructor(message =
  /* istanbul ignore next */
  (cov_ilqyfv5s7().b[3][0]++, 'Token has expired')) {
    /* istanbul ignore next */
    cov_ilqyfv5s7().f[3]++;
    cov_ilqyfv5s7().s[9]++;
    super({
      error: {
        code: 'TokenExpiredException',
        message,
        details: null,
        timestamp: new Date().toISOString(),
        requestId: `auth-${Date.now()}`
      }
    }, common_1.HttpStatus.UNAUTHORIZED);
  }
}
/* istanbul ignore next */
cov_ilqyfv5s7().s[10]++;
exports.TokenExpiredException = TokenExpiredException;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaWxxeWZ2NXM3IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiY29tbW9uXzEiLCJyZXF1aXJlIiwiSW52YWxpZENyZWRlbnRpYWxzRXhjZXB0aW9uIiwiSHR0cEV4Y2VwdGlvbiIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsImIiLCJmIiwiZXJyb3IiLCJjb2RlIiwiZGV0YWlscyIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInJlcXVlc3RJZCIsIm5vdyIsIkh0dHBTdGF0dXMiLCJVTkFVVEhPUklaRUQiLCJleHBvcnRzIiwiSW52YWxpZFJlZnJlc2hUb2tlbkV4Y2VwdGlvbiIsIkFjY291bnREaXNhYmxlZEV4Y2VwdGlvbiIsIkZPUkJJRERFTiIsIlRva2VuRXhwaXJlZEV4Y2VwdGlvbiJdLCJzb3VyY2VzIjpbIi9ob21lL2x1aXNuZXRvOTgvRG9jdW1lbnRvcy9Db2RlL21vbm9yZXBvLXZ0ZXgvYXBwcy9hcGkvc3JjL21vZHVsZXMvYXV0aC9leGNlcHRpb25zL2F1dGguZXhjZXB0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwRXhjZXB0aW9uLCBIdHRwU3RhdHVzIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuXG5leHBvcnQgY2xhc3MgSW52YWxpZENyZWRlbnRpYWxzRXhjZXB0aW9uIGV4dGVuZHMgSHR0cEV4Y2VwdGlvbiB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UgPSAnSW52YWxpZCBlbWFpbCBvciBwYXNzd29yZCcpIHtcbiAgICBzdXBlcihcbiAgICAgIHtcbiAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICBjb2RlOiAnSW52YWxpZENyZWRlbnRpYWxzRXhjZXB0aW9uJyxcbiAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgIGRldGFpbHM6IG51bGwsXG4gICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgcmVxdWVzdElkOiBgYXV0aC0ke0RhdGUubm93KCl9YCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBIdHRwU3RhdHVzLlVOQVVUSE9SSVpFRCxcbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBJbnZhbGlkUmVmcmVzaFRva2VuRXhjZXB0aW9uIGV4dGVuZHMgSHR0cEV4Y2VwdGlvbiB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UgPSAnSW52YWxpZCBvciBleHBpcmVkIHJlZnJlc2ggdG9rZW4nKSB7XG4gICAgc3VwZXIoXG4gICAgICB7XG4gICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgY29kZTogJ0ludmFsaWRSZWZyZXNoVG9rZW5FeGNlcHRpb24nLFxuICAgICAgICAgIG1lc3NhZ2UsXG4gICAgICAgICAgZGV0YWlsczogbnVsbCxcbiAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgICByZXF1ZXN0SWQ6IGBhdXRoLSR7RGF0ZS5ub3coKX1gLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIEh0dHBTdGF0dXMuVU5BVVRIT1JJWkVELFxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEFjY291bnREaXNhYmxlZEV4Y2VwdGlvbiBleHRlbmRzIEh0dHBFeGNlcHRpb24ge1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlID0gJ0FjY291bnQgaXMgZGlzYWJsZWQnKSB7XG4gICAgc3VwZXIoXG4gICAgICB7XG4gICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgY29kZTogJ0FjY291bnREaXNhYmxlZEV4Y2VwdGlvbicsXG4gICAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgICBkZXRhaWxzOiBudWxsLFxuICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICAgIHJlcXVlc3RJZDogYGF1dGgtJHtEYXRlLm5vdygpfWAsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgSHR0cFN0YXR1cy5GT1JCSURERU4sXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgVG9rZW5FeHBpcmVkRXhjZXB0aW9uIGV4dGVuZHMgSHR0cEV4Y2VwdGlvbiB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UgPSAnVG9rZW4gaGFzIGV4cGlyZWQnKSB7XG4gICAgc3VwZXIoXG4gICAgICB7XG4gICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgY29kZTogJ1Rva2VuRXhwaXJlZEV4Y2VwdGlvbicsXG4gICAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgICBkZXRhaWxzOiBudWxsLFxuICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICAgIHJlcXVlc3RJZDogYGF1dGgtJHtEYXRlLm5vdygpfWAsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgSHR0cFN0YXR1cy5VTkFVVEhPUklaRUQsXG4gICAgKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFnQkc7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7Ozs7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