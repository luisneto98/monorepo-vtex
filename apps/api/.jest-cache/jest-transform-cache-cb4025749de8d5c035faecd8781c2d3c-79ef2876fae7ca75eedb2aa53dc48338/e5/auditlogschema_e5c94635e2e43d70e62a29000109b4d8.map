{"file":"/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/schemas/audit-log.schema.ts","mappings":";;;;;;;;;;;;AAAA,+CAA+D;AAMxD,IAAM,WAAW,GAAjB,MAAM,WAAW;IAEtB,EAAE,CAAS;IAGX,IAAI,CAAS;IAGb,KAAK,CAAS;IAGd,IAAI,CAAS;CACd,CAAA;AAZY,kCAAW;AAEtB;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;uCACd;AAGX;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;yCACZ;AAGb;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;0CACX;AAGd;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;yCACZ;sBAXF,WAAW;IADvB,IAAA,iBAAM,EAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;GACV,WAAW,CAYvB;AAGM,IAAM,mBAAmB,GAAzB,MAAM,mBAAmB;IAE9B,QAAQ,CAAS;IAGjB,UAAU,CAAS;IAOnB,MAAM,CAAS;IAGf,WAAW,CAAc;IAGzB,OAAO,CAAuB;IAG9B,QAAQ,CAAuB;IAG/B,SAAS,CAAU;IAGnB,SAAS,CAAU;CACpB,CAAA;AA5BY,kDAAmB;AAE9B;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;qDACrB;AAGjB;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;;uDAC/B;AAOnB;IALC,IAAA,eAAI,EAAC;QACJ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QACrE,KAAK,EAAE,IAAI;KACZ,CAAC;;mDACa;AAGf;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BAC/B,WAAW;wDAAC;AAGzB;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;oDACO;AAG9B;IADC,IAAA,eAAI,EAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;qDACQ;AAG/B;IADC,IAAA,eAAI,GAAE;;sDACY;AAGnB;IADC,IAAA,eAAI,GAAE;;sDACY;8BA3BR,mBAAmB;IAD/B,IAAA,iBAAM,EAAC,EAAE,UAAU,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,CAAC;GACxD,mBAAmB,CA4B/B;AAEY,QAAA,yBAAyB,GAAG,wBAAa,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;AAE3F,iCAAyB,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAChE,iCAAyB,CAAC,KAAK,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,CAAC,CAAC;AACzD,iCAAyB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC","names":[],"sources":["/home/luisneto98/Documentos/Code/monorepo-vtex/apps/api/src/modules/news-releases/schemas/audit-log.schema.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type NewsReleaseAuditLogDocument = NewsReleaseAuditLog & Document;\n\n@Schema({ _id: false })\nexport class PerformedBy {\n  @Prop({ required: true })\n  id: string;\n\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  role: string;\n}\n\n@Schema({ timestamps: { createdAt: 'timestamp', updatedAt: false } })\nexport class NewsReleaseAuditLog {\n  @Prop({ required: true, index: true })\n  entityId: string;\n\n  @Prop({ required: true, default: 'news-release' })\n  entityType: string;\n\n  @Prop({\n    required: true,\n    enum: ['create', 'update', 'delete', 'publish', 'archive', 'restore'],\n    index: true,\n  })\n  action: string;\n\n  @Prop({ type: PerformedBy, required: true })\n  performedBy: PerformedBy;\n\n  @Prop({ type: Object })\n  changes?: Record<string, any>;\n\n  @Prop({ type: Object })\n  metadata?: Record<string, any>;\n\n  @Prop()\n  ipAddress?: string;\n\n  @Prop()\n  userAgent?: string;\n}\n\nexport const NewsReleaseAuditLogSchema = SchemaFactory.createForClass(NewsReleaseAuditLog);\n\nNewsReleaseAuditLogSchema.index({ entityId: 1, timestamp: -1 });\nNewsReleaseAuditLogSchema.index({ 'performedBy.id': 1 });\nNewsReleaseAuditLogSchema.index({ action: 1 });\n"],"version":3}